{
	"id": "ef3796d4ff2a5909aedab2160b3d1b1f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.7.6",
	"solcLongVersion": "0.7.6+commit.7338295f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/AllyBond.sol": {
				"content": "// SPDX-License-Identifier: BUSL-1.1\n\npragma solidity 0.7.6;\n\nimport \"./IAlly.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract AllyBond is Ownable {\n\n    using SafeMath for uint256;\n    using SafeERC20 for IERC20;\n\n    IERC20 ichiV2;\n    IAlly ally;\n    uint256 private constant PRECISION = 1e18;\n\n    // start time and duration are unchangeable\n\n    uint256 public immutable commencement;\n    uint256 public immutable durationDays;\n\n    event Deployed(IERC20 ichiV2, IAlly ally, uint256 commencement, uint256 durationDays);\n    event ClaimIchi(address user, address to, uint256 ally, uint256 ichi);\n    event EmergencyWithdrawal(IERC20 token, uint256 amount, address to);\n\n    /// @notice following the airdrop, the deployer is required to burn any surplus Ally\n    /// (because totalSupply() is used in calculations) and send ICHI V2 to the contract.\n\n    constructor(IERC20 ichiV2_, IAlly ally_, uint256 commencement_, uint256 durationDays_) {\n        require(commencement_ >= block.timestamp, 'AllyBond:constructor:: commencement_ cannot be in the past');\n        ichiV2 = ichiV2_;\n        ally = ally_;\n        commencement = commencement_;\n        durationDays = durationDays_;\n        emit Deployed(ichiV2_, ally_, commencement_, durationDays_);\n    }\n\n    function claimIchi(uint256 amountAlly, address to) external returns(uint256 amountIchi) {\n        require(amountAlly <= ally.balanceOf(msg.sender), 'AllyBond:claimIchi:: insufficient Ally balance');\n        require(amountAlly <= ally.allowance(msg.sender, address(this)), 'AllyBond:claimIchi:: insufficent Ally allowance');\n        ally.transferFrom(msg.sender, address(this), amountAlly);\n        ally.burn(amountAlly);\n        amountIchi = ichiForAlly(amountAlly);\n        ichiV2.transfer(to, amountIchi);\n        emit ClaimIchi(msg.sender, to, amountAlly, amountIchi);\n    }\n\n    function emergencyWithdraw(IERC20 token, uint256 amount, address to) external onlyOwner {\n        require(to != address(0), \"AllyBond:emergencyWithdraw:: to cannot be the 0x0 address\");\n        token.safeTransfer(to, amount);\n        emit EmergencyWithdrawal(token, amount, to);\n    }\n\n    function ichiBalance() public view returns(uint256 ichiOnHand) {\n        ichiOnHand = ichiV2.balanceOf(address(this));\n    }\n\n    function complete() public view returns(bool isComplete) {\n        isComplete = daysOld() >= durationDays;\n    }\n\n    function daysOld() public view returns(uint256 elapsed) {\n        if(block.timestamp <= commencement) return 0;\n        elapsed = block.timestamp.sub(commencement).div(1 days);\n    }\n\n    // 1e18 = 1.00 = 100%\n\n    function redeemablePercent() public view returns(uint256 p18) {\n        if(complete()) return PRECISION;\n        p18 = daysOld().mul(PRECISION).div(durationDays);\n    }\n\n    function ichiPerAlly() public view returns(uint256 p18) {\n        uint circulatingAlly = ally.totalSupply();\n        p18 = ichiBalance().mul(PRECISION).div(circulatingAlly);\n    }\n\n    function ichiForAlly(uint256 amountAlly) public view returns(uint256 amountIchi) {\n        amountIchi = amountAlly.mul(ichiPerAlly()).div(PRECISION);\n    }\n\n    function userBalances(address user) public view returns(uint256 allyBalance, uint256 claimable, uint256 uponCompletion) {\n        allyBalance = ally.balanceOf(user);\n        uponCompletion = allyBalance.mul(ichiPerAlly()).div(PRECISION);\n        claimable = uponCompletion.mul(redeemablePercent()).div(PRECISION);\n    }\n\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.7.0;\n\nimport \"../utils/Context.sol\";\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor () {\n        address msgSender = _msgSender();\n        _owner = msgSender;\n        emit OwnershipTransferred(address(0), msgSender);\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        emit OwnershipTransferred(_owner, address(0));\n        _owner = address(0);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        emit OwnershipTransferred(_owner, newOwner);\n        _owner = newOwner;\n    }\n}\n"
			},
			"@openzeppelin/contracts/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.7.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        uint256 c = a + b;\n        if (c < a) return (false, 0);\n        return (true, c);\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b > a) return (false, 0);\n        return (true, a - b);\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) return (true, 0);\n        uint256 c = a * b;\n        if (c / a != b) return (false, 0);\n        return (true, c);\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b == 0) return (false, 0);\n        return (true, a / b);\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b == 0) return (false, 0);\n        return (true, a % b);\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b <= a, \"SafeMath: subtraction overflow\");\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) return 0;\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"SafeMath: division by zero\");\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"SafeMath: modulo by zero\");\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryDiv}.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        return a % b;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.7.0;\n\nimport \"./IERC20.sol\";\nimport \"../../math/SafeMath.sol\";\nimport \"../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using SafeMath for uint256;\n    using Address for address;\n\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        // solhint-disable-next-line max-line-length\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \"SafeERC20: decreased allowance below zero\");\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) { // Return data is optional\n            // solhint-disable-next-line max-line-length\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"
			},
			"contracts/IAlly.sol": {
				"content": "// SPDX-License-Identifier: BUSL-1.1\n\npragma solidity 0.7.6;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\ninterface IAlly is IERC20 {\n    function burn(uint256 amount) external;\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.7.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.7.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        // solhint-disable-next-line no-inline-assembly\n        assembly { size := extcodesize(account) }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\n        (bool success, ) = recipient.call{ value: amount }(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain`call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n      return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                // solhint-disable-next-line no-inline-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address payable) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes memory) {\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x549c5343ad9f7e3f38aa4c4761854403502574bbc15b822db2ce892ff9b79da7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19c0dfbf7bb7744af0c03156e372d0096e0d07de8805ead7722243b8b42276a3\",\"dweb:/ipfs/QmPEFDvi6mJZ3sVii3uBs3CQzAARXPFwCKiHG5zkiCmC4V\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/math/SafeMath.sol\":622:7216  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":622:7216  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220848fa5370bb0b9b551004303f9f885ce7c5efe78235932a802743f9ae264b98e64736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220848fa5370bb0b9b551004303f9f885ce7c5efe78235932a802743f9ae264b98e64736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP5 DUP16 0xA5 CALLDATACOPY SIGNEXTEND 0xB0 0xB9 0xB5 MLOAD STOP NUMBER SUB 0xF9 0xF8 DUP6 0xCE PUSH29 0x5EFE78235932A802743F9AE264B98E64736F6C63430007060033000000 ",
							"sourceMap": "622:6594:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220848fa5370bb0b9b551004303f9f885ce7c5efe78235932a802743f9ae264b98e64736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP5 DUP16 0xA5 CALLDATACOPY SIGNEXTEND 0xB0 0xB9 0xB5 MLOAD STOP NUMBER SUB 0xF9 0xF8 DUP6 0xCE PUSH29 0x5EFE78235932A802743F9AE264B98E64736F6C63430007060033000000 ",
							"sourceMap": "622:6594:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 622,
									"end": 7216,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 622,
									"end": 7216,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 622,
									"end": 7216,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 622,
									"end": 7216,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 622,
									"end": 7216,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 622,
									"end": 7216,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 622,
									"end": 7216,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 622,
									"end": 7216,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 622,
									"end": 7216,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 622,
									"end": 7216,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 622,
									"end": 7216,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 622,
									"end": 7216,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 622,
									"end": 7216,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 622,
									"end": 7216,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 622,
									"end": 7216,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 622,
									"end": 7216,
									"name": "INVALID",
									"source": 1
								},
								{
									"begin": 622,
									"end": 7216,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 622,
									"end": 7216,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 622,
									"end": 7216,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 622,
									"end": 7216,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 622,
									"end": 7216,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 622,
									"end": 7216,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 622,
									"end": 7216,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 622,
									"end": 7216,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 622,
									"end": 7216,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 622,
									"end": 7216,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 622,
									"end": 7216,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220848fa5370bb0b9b551004303f9f885ce7c5efe78235932a802743f9ae264b98e64736f6c63430007060033",
									".code": [
										{
											"begin": 622,
											"end": 7216,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 622,
											"end": 7216,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 622,
											"end": 7216,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 622,
											"end": 7216,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 622,
											"end": 7216,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 622,
											"end": 7216,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 622,
											"end": 7216,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 622,
											"end": 7216,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 622,
											"end": 7216,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xe22a1fc7400ae196eba2ad1562d0386462b00a6363b742d55a2fd2021a58586f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a635cec58fb4141a16cfd408f1a21ac944c335a3beaba541c35d2e95c04536f\",\"dweb:/ipfs/QmXWcz73UenN1ji8jiWMbzxHjjfLbNQwLVKTEB5zNFE34K\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbd74f587ab9b9711801baf667db1426e4a03fd2d7f15af33e0e0d0394e7cef76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d0913dfbfce90d170df0d496ad7596c0778518e5fa7aba6c32562522546f66b\",\"dweb:/ipfs/QmR6B8nLj2PJf5e1JWD9Nk7ErkAwkqUwadCnvE82FJr1RU\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":608:3712  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":608:3712  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208cb9394eafb5193e191781f65d9424893829a81b6fd07688db88fda53e1d6f0564736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208cb9394eafb5193e191781f65d9424893829a81b6fd07688db88fda53e1d6f0564736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP13 0xB9 CODECOPY 0x4E 0xAF 0xB5 NOT RETURNDATACOPY NOT OR DUP2 0xF6 0x5D SWAP5 0x24 DUP10 CODESIZE 0x29 0xA8 SHL PUSH16 0xD07688DB88FDA53E1D6F0564736F6C63 NUMBER STOP SMOD MOD STOP CALLER ",
							"sourceMap": "608:3104:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208cb9394eafb5193e191781f65d9424893829a81b6fd07688db88fda53e1d6f0564736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP13 0xB9 CODECOPY 0x4E 0xAF 0xB5 NOT RETURNDATACOPY NOT OR DUP2 0xF6 0x5D SWAP5 0x24 DUP10 CODESIZE 0x29 0xA8 SHL PUSH16 0xD07688DB88FDA53E1D6F0564736F6C63 NUMBER STOP SMOD MOD STOP CALLER ",
							"sourceMap": "608:3104:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 608,
									"end": 3712,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 608,
									"end": 3712,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 608,
									"end": 3712,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 608,
									"end": 3712,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 608,
									"end": 3712,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 608,
									"end": 3712,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 608,
									"end": 3712,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 608,
									"end": 3712,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 608,
									"end": 3712,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 608,
									"end": 3712,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 608,
									"end": 3712,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 608,
									"end": 3712,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 608,
									"end": 3712,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 608,
									"end": 3712,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 608,
									"end": 3712,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 608,
									"end": 3712,
									"name": "INVALID",
									"source": 3
								},
								{
									"begin": 608,
									"end": 3712,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 608,
									"end": 3712,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 608,
									"end": 3712,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 608,
									"end": 3712,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 608,
									"end": 3712,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 608,
									"end": 3712,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 608,
									"end": 3712,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 608,
									"end": 3712,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 608,
									"end": 3712,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 608,
									"end": 3712,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 608,
									"end": 3712,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208cb9394eafb5193e191781f65d9424893829a81b6fd07688db88fda53e1d6f0564736f6c63430007060033",
									".code": [
										{
											"begin": 608,
											"end": 3712,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 608,
											"end": 3712,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 608,
											"end": 3712,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 608,
											"end": 3712,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 608,
											"end": 3712,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 608,
											"end": 3712,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 608,
											"end": 3712,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 608,
											"end": 3712,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 608,
											"end": 3712,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xe22a1fc7400ae196eba2ad1562d0386462b00a6363b742d55a2fd2021a58586f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a635cec58fb4141a16cfd408f1a21ac944c335a3beaba541c35d2e95c04536f\",\"dweb:/ipfs/QmXWcz73UenN1ji8jiWMbzxHjjfLbNQwLVKTEB5zNFE34K\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbd74f587ab9b9711801baf667db1426e4a03fd2d7f15af33e0e0d0394e7cef76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d0913dfbfce90d170df0d496ad7596c0778518e5fa7aba6c32562522546f66b\",\"dweb:/ipfs/QmR6B8nLj2PJf5e1JWD9Nk7ErkAwkqUwadCnvE82FJr1RU\"]},\"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0xc77dd6233a82c7c6e3dc49da8f3456baa00ecd3ea4dfa9222002a9aebf155dcd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e5f78a5b3e707177aa47371e008a54b83dbd28a52055d1746534502b010c21b\",\"dweb:/ipfs/Qmeqfky5DvkMZZY3RtP6kYhFD5bZrPAMVPbqkwWhoUjZ3u\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf89f005a3d98f7768cdee2583707db0ac725cf567d455751af32ee68132f3db3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f963d438177764b5f43f637c02311c951c0f0025d12fe1ac7e62e295bf416c41\",\"dweb:/ipfs/QmcfVb9JsWrYeTwFUJsKVHpKB7EaWBKydAH9S4sKg2pzcK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":126:7810  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":126:7810  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220949c13bd63ca49cdec3a4c28f947b9034b8328412adb1a13bb6b251c57cd9d9364736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220949c13bd63ca49cdec3a4c28f947b9034b8328412adb1a13bb6b251c57cd9d9364736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 SWAP13 SGT 0xBD PUSH4 0xCA49CDEC GASPRICE 0x4C 0x28 0xF9 SELFBALANCE 0xB9 SUB 0x4B DUP4 0x28 COINBASE 0x2A 0xDB BYTE SGT 0xBB PUSH12 0x251C57CD9D9364736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "126:7684:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220949c13bd63ca49cdec3a4c28f947b9034b8328412adb1a13bb6b251c57cd9d9364736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 SWAP13 SGT 0xBD PUSH4 0xCA49CDEC GASPRICE 0x4C 0x28 0xF9 SELFBALANCE 0xB9 SUB 0x4B DUP4 0x28 COINBASE 0x2A 0xDB BYTE SGT 0xBB PUSH12 0x251C57CD9D9364736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "126:7684:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 126,
									"end": 7810,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "INVALID",
									"source": 4
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220949c13bd63ca49cdec3a4c28f947b9034b8328412adb1a13bb6b251c57cd9d9364736f6c63430007060033",
									".code": [
										{
											"begin": 126,
											"end": 7810,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 126,
											"end": 7810,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 126,
											"end": 7810,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 126,
											"end": 7810,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 126,
											"end": 7810,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 126,
											"end": 7810,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 126,
											"end": 7810,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 7810,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 126,
											"end": 7810,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf89f005a3d98f7768cdee2583707db0ac725cf567d455751af32ee68132f3db3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f963d438177764b5f43f637c02311c951c0f0025d12fe1ac7e62e295bf416c41\",\"dweb:/ipfs/QmcfVb9JsWrYeTwFUJsKVHpKB7EaWBKydAH9S4sKg2pzcK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/AllyBond.sol": {
				"AllyBond": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "ichiV2_",
									"type": "address"
								},
								{
									"internalType": "contract IAlly",
									"name": "ally_",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "commencement_",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "durationDays_",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "ally",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "ichi",
									"type": "uint256"
								}
							],
							"name": "ClaimIchi",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "contract IERC20",
									"name": "ichiV2",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "contract IAlly",
									"name": "ally",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "commencement",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "durationDays",
									"type": "uint256"
								}
							],
							"name": "Deployed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "contract IERC20",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "EmergencyWithdrawal",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountAlly",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "claimIchi",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIchi",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "commencement",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "complete",
							"outputs": [
								{
									"internalType": "bool",
									"name": "isComplete",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "daysOld",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "elapsed",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "durationDays",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "emergencyWithdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ichiBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "ichiOnHand",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountAlly",
									"type": "uint256"
								}
							],
							"name": "ichiForAlly",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIchi",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ichiPerAlly",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "p18",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "redeemablePercent",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "p18",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "userBalances",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "allyBalance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "claimable",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "uponCompletion",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/AllyBond.sol\":250:3574  contract AllyBond is Ownable {... */\n  mstore(0x40, 0xc0)\n    /* \"contracts/AllyBond.sol\":990:1390  constructor(IERC20 ichiV2_, IAlly ally_, uint256 commencement_, uint256 durationDays_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0x80\n  dup2\n  lt\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":867:884  address msgSender */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":887:899  _msgSender() */\n  tag_6\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":887:897  _msgSender */\n  shl(0x20, tag_7)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":887:899  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_6:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":867:899  address msgSender = _msgSender() */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":918:927  msgSender */\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":909:915  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":909:927  _owner = msgSender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":975:984  msgSender */\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":942:985  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":971:972  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":942:985  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":842:992  constructor () {... */\n  pop\n    /* \"contracts/AllyBond.sol\":1112:1127  block.timestamp */\n  timestamp\n    /* \"contracts/AllyBond.sol\":1095:1108  commencement_ */\n  dup3\n    /* \"contracts/AllyBond.sol\":1095:1127  commencement_ >= block.timestamp */\n  lt\n  iszero\n    /* \"contracts/AllyBond.sol\":1087:1190  require(commencement_ >= block.timestamp, 'AllyBond:constructor:: commencement_ cannot be in the past') */\n  tag_9\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  0x3a\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  data_fb3d24c9bb7ce198be44568979120f7d00952fe68679c4fe4b5c2d3bb0a9f077\n  0x3a\n  swap2\n  codecopy\n  0x40\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_9:\n    /* \"contracts/AllyBond.sol\":1209:1216  ichiV2_ */\n  dup4\n    /* \"contracts/AllyBond.sol\":1200:1206  ichiV2 */\n  0x01\n  0x00\n    /* \"contracts/AllyBond.sol\":1200:1216  ichiV2 = ichiV2_ */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/AllyBond.sol\":1233:1238  ally_ */\n  dup3\n    /* \"contracts/AllyBond.sol\":1226:1230  ally */\n  0x02\n  0x00\n    /* \"contracts/AllyBond.sol\":1226:1238  ally = ally_ */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/AllyBond.sol\":1263:1276  commencement_ */\n  dup2\n    /* \"contracts/AllyBond.sol\":1248:1276  commencement = commencement_ */\n  0x80\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/AllyBond.sol\":1301:1314  durationDays_ */\n  dup1\n    /* \"contracts/AllyBond.sol\":1286:1314  durationDays = durationDays_ */\n  0xa0\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/AllyBond.sol\":1329:1383  Deployed(ichiV2_, ally_, commencement_, durationDays_) */\n  0x863dd289402cf71b29dea8b439af18e7a86b4b02d6ef3c22b7dd04c7c11c1b37\n    /* \"contracts/AllyBond.sol\":1338:1345  ichiV2_ */\n  dup5\n    /* \"contracts/AllyBond.sol\":1347:1352  ally_ */\n  dup5\n    /* \"contracts/AllyBond.sol\":1354:1367  commencement_ */\n  dup5\n    /* \"contracts/AllyBond.sol\":1369:1382  durationDays_ */\n  dup5\n    /* \"contracts/AllyBond.sol\":1329:1383  Deployed(ichiV2_, ally_, commencement_, durationDays_) */\n  mload(0x40)\n  dup1\n  dup6\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  dup5\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  dup4\n  dup2\n  mstore\n  0x20\n  add\n  dup3\n  dup2\n  mstore\n  0x20\n  add\n  swap5\n  pop\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log1\n    /* \"contracts/AllyBond.sol\":990:1390  constructor(IERC20 ichiV2_, IAlly ally_, uint256 commencement_, uint256 durationDays_) {... */\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/AllyBond.sol\":250:3574  contract AllyBond is Ownable {... */\n  jump(tag_10)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\ntag_7:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":651:666  address payable */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":685:695  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":678:695  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\n  swap1\n  jump\t// out\n    /* \"contracts/AllyBond.sol\":250:3574  contract AllyBond is Ownable {... */\ntag_10:\n  mload(0x80)\n  mload(0xa0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  assignImmutable(\"0xe9e0475224745f570c2fa5a2212581dbb763b0b604cf1588d130cda3bdffbf52\")\n  assignImmutable(\"0x341878494918d8151b9a5c06b89111716a13db8d7307871a34b92267fdbacd54\")\n  return(0x00, dataSize(sub_0))\nstop\ndata_fb3d24c9bb7ce198be44568979120f7d00952fe68679c4fe4b5c2d3bb0a9f077 416c6c79426f6e643a636f6e7374727563746f723a3a20636f6d6d656e63656d656e745f2063616e6e6f7420626520696e207468652070617374\n\nsub_0: assembly {\n        /* \"contracts/AllyBond.sol\":250:3574  contract AllyBond is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x85dd19c0\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xa4c01502\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xa4c01502\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xeb01f149\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xeb7e2856\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_18:\n      dup1\n      0x85dd19c0\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x9cd56d03\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x551512de\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x551512de\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x76aabef4\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x814d2832\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x26224c64\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x34d1adb5\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x522e1177\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/AllyBond.sol\":3252:3571  function userBalances(address user) public view returns(uint256 allyBalance, uint256 claimable, uint256 uponCompletion) {... */\n    tag_3:\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_22\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/AllyBond.sol\":3091:3246  function ichiForAlly(uint256 amountAlly) public view returns(uint256 amountIchi) {... */\n    tag_4:\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_25\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/AllyBond.sol\":2399:2511  function complete() public view returns(bool isComplete) {... */\n    tag_5:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/AllyBond.sol\":1979:2263  function emergencyWithdraw(IERC20 token, uint256 amount, address to) external onlyOwner {... */\n    tag_6:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_30\n      jump\t// in\n    tag_28:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1700:1845  function renounceOwnership() public virtual onlyOwner {... */\n    tag_7:\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      stop\n        /* \"contracts/AllyBond.sol\":483:520  uint256 public immutable commencement */\n    tag_8:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/AllyBond.sol\":2732:2900  function redeemablePercent() public view returns(uint256 p18) {... */\n    tag_9:\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/AllyBond.sol\":1396:1973  function claimIchi(uint256 amountAlly, address to) external returns(uint256 amountIchi) {... */\n    tag_10:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_39\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1068:1153  function owner() public view virtual returns (address) {... */\n    tag_11:\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/AllyBond.sol\":526:563  uint256 public immutable durationDays */\n    tag_12:\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/AllyBond.sol\":2517:2699  function daysOld() public view returns(uint256 elapsed) {... */\n    tag_13:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/AllyBond.sol\":2906:3085  function ichiPerAlly() public view returns(uint256 p18) {... */\n    tag_14:\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/AllyBond.sol\":2269:2393  function ichiBalance() public view returns(uint256 ichiOnHand) {... */\n    tag_15:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1994:2234  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_16:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_51\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_52\n      jump\t// in\n    tag_50:\n      stop\n        /* \"contracts/AllyBond.sol\":3252:3571  function userBalances(address user) public view returns(uint256 allyBalance, uint256 claimable, uint256 uponCompletion) {... */\n    tag_22:\n        /* \"contracts/AllyBond.sol\":3308:3327  uint256 allyBalance */\n      0x00\n        /* \"contracts/AllyBond.sol\":3329:3346  uint256 claimable */\n      dup1\n        /* \"contracts/AllyBond.sol\":3348:3370  uint256 uponCompletion */\n      0x00\n        /* \"contracts/AllyBond.sol\":3396:3400  ally */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/AllyBond.sol\":3396:3410  ally.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/AllyBond.sol\":3411:3415  user */\n      dup6\n        /* \"contracts/AllyBond.sol\":3396:3416  ally.balanceOf(user) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_56\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_56:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/AllyBond.sol\":3382:3416  allyBalance = ally.balanceOf(user) */\n      swap3\n      pop\n        /* \"contracts/AllyBond.sol\":3443:3488  allyBalance.mul(ichiPerAlly()).div(PRECISION) */\n      tag_58\n        /* \"contracts/AllyBond.sol\":423:427  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/AllyBond.sol\":3443:3473  allyBalance.mul(ichiPerAlly()) */\n      tag_59\n        /* \"contracts/AllyBond.sol\":3459:3472  ichiPerAlly() */\n      tag_60\n        /* \"contracts/AllyBond.sol\":3459:3470  ichiPerAlly */\n      tag_47\n        /* \"contracts/AllyBond.sol\":3459:3472  ichiPerAlly() */\n      jump\t// in\n    tag_60:\n        /* \"contracts/AllyBond.sol\":3443:3454  allyBalance */\n      dup7\n        /* \"contracts/AllyBond.sol\":3443:3458  allyBalance.mul */\n      tag_61\n      swap1\n        /* \"contracts/AllyBond.sol\":3443:3473  allyBalance.mul(ichiPerAlly()) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_59:\n        /* \"contracts/AllyBond.sol\":3443:3477  allyBalance.mul(ichiPerAlly()).div */\n      tag_62\n      swap1\n        /* \"contracts/AllyBond.sol\":3443:3488  allyBalance.mul(ichiPerAlly()).div(PRECISION) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_58:\n        /* \"contracts/AllyBond.sol\":3426:3488  uponCompletion = allyBalance.mul(ichiPerAlly()).div(PRECISION) */\n      swap1\n      pop\n        /* \"contracts/AllyBond.sol\":3510:3564  uponCompletion.mul(redeemablePercent()).div(PRECISION) */\n      tag_63\n        /* \"contracts/AllyBond.sol\":423:427  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/AllyBond.sol\":3510:3549  uponCompletion.mul(redeemablePercent()) */\n      tag_64\n        /* \"contracts/AllyBond.sol\":3529:3548  redeemablePercent() */\n      tag_65\n        /* \"contracts/AllyBond.sol\":3529:3546  redeemablePercent */\n      tag_36\n        /* \"contracts/AllyBond.sol\":3529:3548  redeemablePercent() */\n      jump\t// in\n    tag_65:\n        /* \"contracts/AllyBond.sol\":3510:3524  uponCompletion */\n      dup5\n        /* \"contracts/AllyBond.sol\":3510:3528  uponCompletion.mul */\n      tag_61\n      swap1\n        /* \"contracts/AllyBond.sol\":3510:3549  uponCompletion.mul(redeemablePercent()) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_64:\n        /* \"contracts/AllyBond.sol\":3510:3553  uponCompletion.mul(redeemablePercent()).div */\n      tag_62\n      swap1\n        /* \"contracts/AllyBond.sol\":3510:3564  uponCompletion.mul(redeemablePercent()).div(PRECISION) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_63:\n        /* \"contracts/AllyBond.sol\":3498:3564  claimable = uponCompletion.mul(redeemablePercent()).div(PRECISION) */\n      swap2\n      pop\n        /* \"contracts/AllyBond.sol\":3252:3571  function userBalances(address user) public view returns(uint256 allyBalance, uint256 claimable, uint256 uponCompletion) {... */\n      swap2\n      swap4\n      swap1\n      swap3\n      pop\n      jump\t// out\n        /* \"contracts/AllyBond.sol\":3091:3246  function ichiForAlly(uint256 amountAlly) public view returns(uint256 amountIchi) {... */\n    tag_25:\n        /* \"contracts/AllyBond.sol\":3152:3170  uint256 amountIchi */\n      0x00\n        /* \"contracts/AllyBond.sol\":3195:3239  amountAlly.mul(ichiPerAlly()).div(PRECISION) */\n      tag_67\n        /* \"contracts/AllyBond.sol\":423:427  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/AllyBond.sol\":3195:3224  amountAlly.mul(ichiPerAlly()) */\n      tag_68\n        /* \"contracts/AllyBond.sol\":3210:3223  ichiPerAlly() */\n      tag_69\n        /* \"contracts/AllyBond.sol\":3210:3221  ichiPerAlly */\n      tag_47\n        /* \"contracts/AllyBond.sol\":3210:3223  ichiPerAlly() */\n      jump\t// in\n    tag_69:\n        /* \"contracts/AllyBond.sol\":3195:3205  amountAlly */\n      dup6\n        /* \"contracts/AllyBond.sol\":3195:3209  amountAlly.mul */\n      tag_61\n      swap1\n        /* \"contracts/AllyBond.sol\":3195:3224  amountAlly.mul(ichiPerAlly()) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_68:\n        /* \"contracts/AllyBond.sol\":3195:3228  amountAlly.mul(ichiPerAlly()).div */\n      tag_62\n      swap1\n        /* \"contracts/AllyBond.sol\":3195:3239  amountAlly.mul(ichiPerAlly()).div(PRECISION) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_67:\n        /* \"contracts/AllyBond.sol\":3182:3239  amountIchi = amountAlly.mul(ichiPerAlly()).div(PRECISION) */\n      swap1\n      pop\n        /* \"contracts/AllyBond.sol\":3091:3246  function ichiForAlly(uint256 amountAlly) public view returns(uint256 amountIchi) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/AllyBond.sol\":2399:2511  function complete() public view returns(bool isComplete) {... */\n    tag_27:\n        /* \"contracts/AllyBond.sol\":2439:2454  bool isComplete */\n      0x00\n        /* \"contracts/AllyBond.sol\":2492:2504  durationDays */\n      immutable(\"0xe9e0475224745f570c2fa5a2212581dbb763b0b604cf1588d130cda3bdffbf52\")\n        /* \"contracts/AllyBond.sol\":2479:2488  daysOld() */\n      tag_71\n        /* \"contracts/AllyBond.sol\":2479:2486  daysOld */\n      tag_45\n        /* \"contracts/AllyBond.sol\":2479:2488  daysOld() */\n      jump\t// in\n    tag_71:\n        /* \"contracts/AllyBond.sol\":2479:2504  daysOld() >= durationDays */\n      lt\n      iszero\n        /* \"contracts/AllyBond.sol\":2466:2504  isComplete = daysOld() >= durationDays */\n      swap1\n      pop\n        /* \"contracts/AllyBond.sol\":2399:2511  function complete() public view returns(bool isComplete) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/AllyBond.sol\":1979:2263  function emergencyWithdraw(IERC20 token, uint256 amount, address to) external onlyOwner {... */\n    tag_30:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1291:1303  _msgSender() */\n      tag_73\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1291:1301  _msgSender */\n      tag_74\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1291:1303  _msgSender() */\n      jump\t// in\n    tag_73:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1280:1303  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1280:1287  owner() */\n      tag_75\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1280:1285  owner */\n      tag_41\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1280:1287  owner() */\n      jump\t// in\n    tag_75:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1280:1303  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1272:1340  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_76\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_76:\n        /* \"contracts/AllyBond.sol\":2099:2100  0 */\n      0x00\n        /* \"contracts/AllyBond.sol\":2085:2101  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/AllyBond.sol\":2085:2087  to */\n      dup2\n        /* \"contracts/AllyBond.sol\":2085:2101  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/AllyBond.sol\":2077:2163  require(to != address(0), \"AllyBond:emergencyWithdraw:: to cannot be the 0x0 address\") */\n      tag_78\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x39\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_f369de33193fa9ad14f9bc77962ccc61dea2ab7e55babf0d95e6159628a429bd\n      0x39\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_78:\n        /* \"contracts/AllyBond.sol\":2173:2203  token.safeTransfer(to, amount) */\n      tag_79\n        /* \"contracts/AllyBond.sol\":2192:2194  to */\n      dup2\n        /* \"contracts/AllyBond.sol\":2196:2202  amount */\n      dup4\n        /* \"contracts/AllyBond.sol\":2173:2178  token */\n      dup6\n        /* \"contracts/AllyBond.sol\":2173:2191  token.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_80\n      swap1\n        /* \"contracts/AllyBond.sol\":2173:2203  token.safeTransfer(to, amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_79:\n        /* \"contracts/AllyBond.sol\":2218:2256  EmergencyWithdrawal(token, amount, to) */\n      0x3ab9db27a4cdd8c603a752b62d5fbd93b4b3509fe2596708e9688e42bbac3576\n        /* \"contracts/AllyBond.sol\":2238:2243  token */\n      dup4\n        /* \"contracts/AllyBond.sol\":2245:2251  amount */\n      dup4\n        /* \"contracts/AllyBond.sol\":2253:2255  to */\n      dup4\n        /* \"contracts/AllyBond.sol\":2218:2256  EmergencyWithdrawal(token, amount, to) */\n      mload(0x40)\n      dup1\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/AllyBond.sol\":1979:2263  function emergencyWithdraw(IERC20 token, uint256 amount, address to) external onlyOwner {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1700:1845  function renounceOwnership() public virtual onlyOwner {... */\n    tag_32:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1291:1303  _msgSender() */\n      tag_82\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1291:1301  _msgSender */\n      tag_74\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1291:1303  _msgSender() */\n      jump\t// in\n    tag_82:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1280:1303  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1280:1287  owner() */\n      tag_83\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1280:1285  owner */\n      tag_41\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1280:1287  owner() */\n      jump\t// in\n    tag_83:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1280:1303  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1272:1340  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_84\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_84:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1806:1807  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1769:1809  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1790:1796  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1769:1809  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1836:1837  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1819:1825  _owner */\n      dup1\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1819:1838  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1700:1845  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/AllyBond.sol\":483:520  uint256 public immutable commencement */\n    tag_34:\n      immutable(\"0x341878494918d8151b9a5c06b89111716a13db8d7307871a34b92267fdbacd54\")\n      dup2\n      jump\t// out\n        /* \"contracts/AllyBond.sol\":2732:2900  function redeemablePercent() public view returns(uint256 p18) {... */\n    tag_36:\n        /* \"contracts/AllyBond.sol\":2781:2792  uint256 p18 */\n      0x00\n        /* \"contracts/AllyBond.sol\":2807:2817  complete() */\n      tag_87\n        /* \"contracts/AllyBond.sol\":2807:2815  complete */\n      tag_27\n        /* \"contracts/AllyBond.sol\":2807:2817  complete() */\n      jump\t// in\n    tag_87:\n        /* \"contracts/AllyBond.sol\":2804:2835  if(complete()) return PRECISION */\n      iszero\n      tag_88\n      jumpi\n        /* \"contracts/AllyBond.sol\":423:427  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/AllyBond.sol\":2819:2835  return PRECISION */\n      swap1\n      pop\n      jump(tag_86)\n        /* \"contracts/AllyBond.sol\":2804:2835  if(complete()) return PRECISION */\n    tag_88:\n        /* \"contracts/AllyBond.sol\":2851:2893  daysOld().mul(PRECISION).div(durationDays) */\n      tag_89\n        /* \"contracts/AllyBond.sol\":2880:2892  durationDays */\n      immutable(\"0xe9e0475224745f570c2fa5a2212581dbb763b0b604cf1588d130cda3bdffbf52\")\n        /* \"contracts/AllyBond.sol\":2851:2875  daysOld().mul(PRECISION) */\n      tag_90\n        /* \"contracts/AllyBond.sol\":423:427  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/AllyBond.sol\":2851:2860  daysOld() */\n      tag_91\n        /* \"contracts/AllyBond.sol\":2851:2858  daysOld */\n      tag_45\n        /* \"contracts/AllyBond.sol\":2851:2860  daysOld() */\n      jump\t// in\n    tag_91:\n        /* \"contracts/AllyBond.sol\":2851:2864  daysOld().mul */\n      tag_61\n      swap1\n        /* \"contracts/AllyBond.sol\":2851:2875  daysOld().mul(PRECISION) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_90:\n        /* \"contracts/AllyBond.sol\":2851:2879  daysOld().mul(PRECISION).div */\n      tag_62\n      swap1\n        /* \"contracts/AllyBond.sol\":2851:2893  daysOld().mul(PRECISION).div(durationDays) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_89:\n        /* \"contracts/AllyBond.sol\":2845:2893  p18 = daysOld().mul(PRECISION).div(durationDays) */\n      swap1\n      pop\n        /* \"contracts/AllyBond.sol\":2732:2900  function redeemablePercent() public view returns(uint256 p18) {... */\n    tag_86:\n      swap1\n      jump\t// out\n        /* \"contracts/AllyBond.sol\":1396:1973  function claimIchi(uint256 amountAlly, address to) external returns(uint256 amountIchi) {... */\n    tag_39:\n        /* \"contracts/AllyBond.sol\":1464:1482  uint256 amountIchi */\n      0x00\n        /* \"contracts/AllyBond.sol\":1516:1520  ally */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/AllyBond.sol\":1516:1530  ally.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/AllyBond.sol\":1531:1541  msg.sender */\n      caller\n        /* \"contracts/AllyBond.sol\":1516:1542  ally.balanceOf(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_93\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_93:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_95\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_95:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_96\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_96:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/AllyBond.sol\":1502:1512  amountAlly */\n      dup4\n        /* \"contracts/AllyBond.sol\":1502:1542  amountAlly <= ally.balanceOf(msg.sender) */\n      gt\n      iszero\n        /* \"contracts/AllyBond.sol\":1494:1593  require(amountAlly <= ally.balanceOf(msg.sender), 'AllyBond:claimIchi:: insufficient Ally balance') */\n      tag_97\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0b669e18afde06dd7c948323cc96d872c8f871b51c6d9576e3a7c68b3cf92211\n      0x2e\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_97:\n        /* \"contracts/AllyBond.sol\":1625:1629  ally */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/AllyBond.sol\":1625:1639  ally.allowance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdd62ed3e\n        /* \"contracts/AllyBond.sol\":1640:1650  msg.sender */\n      caller\n        /* \"contracts/AllyBond.sol\":1660:1664  this */\n      address\n        /* \"contracts/AllyBond.sol\":1625:1666  ally.allowance(msg.sender, address(this)) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_98\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_98:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_100\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_100:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_101\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_101:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/AllyBond.sol\":1611:1621  amountAlly */\n      dup4\n        /* \"contracts/AllyBond.sol\":1611:1666  amountAlly <= ally.allowance(msg.sender, address(this)) */\n      gt\n      iszero\n        /* \"contracts/AllyBond.sol\":1603:1718  require(amountAlly <= ally.allowance(msg.sender, address(this)), 'AllyBond:claimIchi:: insufficent Ally allowance') */\n      tag_102\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_c390cdc2dad4ae97ebf57885ff8329c5ba9db4090e4ae8e26c397b65531f1fee\n      0x2f\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_102:\n        /* \"contracts/AllyBond.sol\":1728:1732  ally */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/AllyBond.sol\":1728:1745  ally.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/AllyBond.sol\":1746:1756  msg.sender */\n      caller\n        /* \"contracts/AllyBond.sol\":1766:1770  this */\n      address\n        /* \"contracts/AllyBond.sol\":1773:1783  amountAlly */\n      dup7\n        /* \"contracts/AllyBond.sol\":1728:1784  ally.transferFrom(msg.sender, address(this), amountAlly) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_103\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_103:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_105\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_105:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_106\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_106:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/AllyBond.sol\":1794:1798  ally */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/AllyBond.sol\":1794:1803  ally.burn */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x42966c68\n        /* \"contracts/AllyBond.sol\":1804:1814  amountAlly */\n      dup5\n        /* \"contracts/AllyBond.sol\":1794:1815  ally.burn(amountAlly) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_107\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_107:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_109\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_109:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/AllyBond.sol\":1838:1861  ichiForAlly(amountAlly) */\n      tag_110\n        /* \"contracts/AllyBond.sol\":1850:1860  amountAlly */\n      dup4\n        /* \"contracts/AllyBond.sol\":1838:1849  ichiForAlly */\n      tag_25\n        /* \"contracts/AllyBond.sol\":1838:1861  ichiForAlly(amountAlly) */\n      jump\t// in\n    tag_110:\n        /* \"contracts/AllyBond.sol\":1825:1861  amountIchi = ichiForAlly(amountAlly) */\n      swap1\n      pop\n        /* \"contracts/AllyBond.sol\":1871:1877  ichiV2 */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/AllyBond.sol\":1871:1886  ichiV2.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/AllyBond.sol\":1887:1889  to */\n      dup4\n        /* \"contracts/AllyBond.sol\":1891:1901  amountIchi */\n      dup4\n        /* \"contracts/AllyBond.sol\":1871:1902  ichiV2.transfer(to, amountIchi) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_111\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_111:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_113\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_113:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_114\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_114:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/AllyBond.sol\":1917:1966  ClaimIchi(msg.sender, to, amountAlly, amountIchi) */\n      0x6924de782c8b5f24144a945d93c937e0f7aac91e3a891105dca3c4536f525529\n        /* \"contracts/AllyBond.sol\":1927:1937  msg.sender */\n      caller\n        /* \"contracts/AllyBond.sol\":1939:1941  to */\n      dup4\n        /* \"contracts/AllyBond.sol\":1943:1953  amountAlly */\n      dup6\n        /* \"contracts/AllyBond.sol\":1955:1965  amountIchi */\n      dup5\n        /* \"contracts/AllyBond.sol\":1917:1966  ClaimIchi(msg.sender, to, amountAlly, amountIchi) */\n      mload(0x40)\n      dup1\n      dup6\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/AllyBond.sol\":1396:1973  function claimIchi(uint256 amountAlly, address to) external returns(uint256 amountIchi) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1068:1153  function owner() public view virtual returns (address) {... */\n    tag_41:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1114:1121  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1140:1146  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1133:1146  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1068:1153  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/AllyBond.sol\":526:563  uint256 public immutable durationDays */\n    tag_43:\n      immutable(\"0xe9e0475224745f570c2fa5a2212581dbb763b0b604cf1588d130cda3bdffbf52\")\n      dup2\n      jump\t// out\n        /* \"contracts/AllyBond.sol\":2517:2699  function daysOld() public view returns(uint256 elapsed) {... */\n    tag_45:\n        /* \"contracts/AllyBond.sol\":2556:2571  uint256 elapsed */\n      0x00\n        /* \"contracts/AllyBond.sol\":2605:2617  commencement */\n      immutable(\"0x341878494918d8151b9a5c06b89111716a13db8d7307871a34b92267fdbacd54\")\n        /* \"contracts/AllyBond.sol\":2586:2601  block.timestamp */\n      timestamp\n        /* \"contracts/AllyBond.sol\":2586:2617  block.timestamp <= commencement */\n      gt\n        /* \"contracts/AllyBond.sol\":2583:2627  if(block.timestamp <= commencement) return 0 */\n      tag_117\n      jumpi\n        /* \"contracts/AllyBond.sol\":2626:2627  0 */\n      0x00\n        /* \"contracts/AllyBond.sol\":2619:2627  return 0 */\n      swap1\n      pop\n      jump(tag_116)\n        /* \"contracts/AllyBond.sol\":2583:2627  if(block.timestamp <= commencement) return 0 */\n    tag_117:\n        /* \"contracts/AllyBond.sol\":2647:2692  block.timestamp.sub(commencement).div(1 days) */\n      tag_118\n        /* \"contracts/AllyBond.sol\":2685:2691  1 days */\n      0x015180\n        /* \"contracts/AllyBond.sol\":2647:2680  block.timestamp.sub(commencement) */\n      tag_119\n        /* \"contracts/AllyBond.sol\":2667:2679  commencement */\n      immutable(\"0x341878494918d8151b9a5c06b89111716a13db8d7307871a34b92267fdbacd54\")\n        /* \"contracts/AllyBond.sol\":2647:2662  block.timestamp */\n      timestamp\n        /* \"contracts/AllyBond.sol\":2647:2666  block.timestamp.sub */\n      tag_120\n      swap1\n        /* \"contracts/AllyBond.sol\":2647:2680  block.timestamp.sub(commencement) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_119:\n        /* \"contracts/AllyBond.sol\":2647:2684  block.timestamp.sub(commencement).div */\n      tag_62\n      swap1\n        /* \"contracts/AllyBond.sol\":2647:2692  block.timestamp.sub(commencement).div(1 days) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_118:\n        /* \"contracts/AllyBond.sol\":2637:2692  elapsed = block.timestamp.sub(commencement).div(1 days) */\n      swap1\n      pop\n        /* \"contracts/AllyBond.sol\":2517:2699  function daysOld() public view returns(uint256 elapsed) {... */\n    tag_116:\n      swap1\n      jump\t// out\n        /* \"contracts/AllyBond.sol\":2906:3085  function ichiPerAlly() public view returns(uint256 p18) {... */\n    tag_47:\n        /* \"contracts/AllyBond.sol\":2949:2960  uint256 p18 */\n      0x00\n        /* \"contracts/AllyBond.sol\":2972:2992  uint circulatingAlly */\n      dup1\n        /* \"contracts/AllyBond.sol\":2995:2999  ally */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/AllyBond.sol\":2995:3011  ally.totalSupply */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x18160ddd\n        /* \"contracts/AllyBond.sol\":2995:3013  ally.totalSupply() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_122\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_122:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_124\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_124:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_125\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_125:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/AllyBond.sol\":2972:3013  uint circulatingAlly = ally.totalSupply() */\n      swap1\n      pop\n        /* \"contracts/AllyBond.sol\":3029:3078  ichiBalance().mul(PRECISION).div(circulatingAlly) */\n      tag_126\n        /* \"contracts/AllyBond.sol\":3062:3077  circulatingAlly */\n      dup2\n        /* \"contracts/AllyBond.sol\":3029:3057  ichiBalance().mul(PRECISION) */\n      tag_127\n        /* \"contracts/AllyBond.sol\":423:427  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/AllyBond.sol\":3029:3042  ichiBalance() */\n      tag_128\n        /* \"contracts/AllyBond.sol\":3029:3040  ichiBalance */\n      tag_49\n        /* \"contracts/AllyBond.sol\":3029:3042  ichiBalance() */\n      jump\t// in\n    tag_128:\n        /* \"contracts/AllyBond.sol\":3029:3046  ichiBalance().mul */\n      tag_61\n      swap1\n        /* \"contracts/AllyBond.sol\":3029:3057  ichiBalance().mul(PRECISION) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_127:\n        /* \"contracts/AllyBond.sol\":3029:3061  ichiBalance().mul(PRECISION).div */\n      tag_62\n      swap1\n        /* \"contracts/AllyBond.sol\":3029:3078  ichiBalance().mul(PRECISION).div(circulatingAlly) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_126:\n        /* \"contracts/AllyBond.sol\":3023:3078  p18 = ichiBalance().mul(PRECISION).div(circulatingAlly) */\n      swap2\n      pop\n        /* \"contracts/AllyBond.sol\":2906:3085  function ichiPerAlly() public view returns(uint256 p18) {... */\n      pop\n      swap1\n      jump\t// out\n        /* \"contracts/AllyBond.sol\":2269:2393  function ichiBalance() public view returns(uint256 ichiOnHand) {... */\n    tag_49:\n        /* \"contracts/AllyBond.sol\":2312:2330  uint256 ichiOnHand */\n      0x00\n        /* \"contracts/AllyBond.sol\":2355:2361  ichiV2 */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/AllyBond.sol\":2355:2371  ichiV2.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/AllyBond.sol\":2380:2384  this */\n      address\n        /* \"contracts/AllyBond.sol\":2355:2386  ichiV2.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_130\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_130:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_132\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_132:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_133\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_133:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/AllyBond.sol\":2342:2386  ichiOnHand = ichiV2.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/AllyBond.sol\":2269:2393  function ichiBalance() public view returns(uint256 ichiOnHand) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1994:2234  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1291:1303  _msgSender() */\n      tag_135\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1291:1301  _msgSender */\n      tag_74\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1291:1303  _msgSender() */\n      jump\t// in\n    tag_135:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1280:1303  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1280:1287  owner() */\n      tag_136\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1280:1285  owner */\n      tag_41\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1280:1287  owner() */\n      jump\t// in\n    tag_136:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1280:1303  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1272:1340  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_137\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_137:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2102:2103  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2082:2104  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2082:2090  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2082:2104  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2074:2147  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_139\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_139:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2191:2199  newOwner */\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2162:2200  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2183:2189  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2162:2200  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2219:2227  newOwner */\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2210:2216  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2210:2227  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1994:2234  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3530:3745  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3588:3595  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3616:3617  0 */\n      dup1\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3611:3612  a */\n      dup4\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3611:3617  a == 0 */\n      eq\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3607:3627  if (a == 0) return 0 */\n      iszero\n      tag_141\n      jumpi\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3626:3627  0 */\n      0x00\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3619:3627  return 0 */\n      swap1\n      pop\n      jump(tag_140)\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3607:3627  if (a == 0) return 0 */\n    tag_141:\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3637:3646  uint256 c */\n      0x00\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3653:3654  b */\n      dup3\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3649:3650  a */\n      dup5\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3649:3654  a * b */\n      mul\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3637:3654  uint256 c = a * b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3681:3682  b */\n      dup3\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3676:3677  a */\n      dup5\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3672:3673  c */\n      dup3\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3672:3677  c / a */\n      dup2\n      tag_142\n      jumpi\n      invalid\n    tag_142:\n      div\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3672:3682  c / a == b */\n      eq\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3664:3720  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      tag_143\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_143:\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3737:3738  c */\n      dup1\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3730:3738  return c */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3530:3745  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_140:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":4209:4359  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":4267:4274  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":4298:4299  0 */\n      dup1\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":4294:4295  b */\n      dup3\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":4294:4299  b > 0 */\n      gt\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":4286:4330  require(b > 0, \"SafeMath: division by zero\") */\n      tag_145\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206469766973696f6e206279207a65726f000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_145:\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":4351:4352  b */\n      dup2\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":4347:4348  a */\n      dup4\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":4347:4352  a / b */\n      dup2\n      tag_146\n      jumpi\n      invalid\n    tag_146:\n      div\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":4340:4352  return a / b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":4209:4359  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\n    tag_74:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":651:666  address payable */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":685:695  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":678:695  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":696:871  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_80:\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":778:864  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_149\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":798:803  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":828:851  token.transfer.selector */\n      shl(0xe0, 0xa9059cbb)\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":853:855  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":857:862  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":805:863  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":778:797  _callOptionalReturn */\n      tag_150\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":778:864  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_149:\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":696:871  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3128:3283  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_120:\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3186:3193  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3218:3219  a */\n      dup3\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3213:3214  b */\n      dup3\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3213:3219  b <= a */\n      gt\n      iszero\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3205:3254  require(b <= a, \"SafeMath: subtraction overflow\") */\n      tag_152\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_152:\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3275:3276  b */\n      dup2\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3271:3272  a */\n      dup4\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3271:3276  a - b */\n      sub\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3264:3276  return a - b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3128:3283  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":2959:3710  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_150:\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3378:3401  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3404:3473  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_154\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3432:3436  data */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3404:3473  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3412:3417  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3404:3431  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_155\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3404:3473  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_154:\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3378:3473  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3507:3508  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3487:3497  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3487:3504  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3487:3508  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3483:3704  if (returndata.length > 0) { // Return data is optional... */\n      iszero\n      tag_156\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3627:3637  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3616:3646  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      0x20\n      dup2\n      lt\n      iszero\n      tag_157\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_157:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3608:3693  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_158\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd\n      0x2a\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_158:\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3483:3704  if (returndata.length > 0) { // Return data is optional... */\n    tag_156:\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":2959:3710  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3573:3766  function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {... */\n    tag_155:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3676:3688  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3707:3759  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_160\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3729:3735  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3737:3741  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3743:3744  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3746:3758  errorMessage */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3707:3728  functionCallWithValue */\n      tag_161\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3707:3759  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_160:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3700:3759  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3573:3766  function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4600:5123  function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {... */\n    tag_161:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4727:4739  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4784:4789  value */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4759:4780  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4759:4789  address(this).balance >= value */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4751:4832  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_163\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_163:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4850:4868  isContract(target) */\n      tag_164\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4861:4867  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4850:4860  isContract */\n      tag_165\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4850:4868  isContract(target) */\n      jump\t// in\n    tag_164:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4842:4902  require(isContract(target), \"Address: call to non-contract\") */\n      tag_166\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1d\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_166:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4973:4985  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4987:5010  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5014:5020  target */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5014:5025  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5034:5039  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5042:5046  data */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5014:5047  target.call{ value: value }(data) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n    tag_167:\n      0x20\n      dup4\n      lt\n      tag_169\n      jumpi\n      dup1\n      mload\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      swap2\n      pop\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      0x20\n      dup4\n      sub\n      swap3\n      pop\n      jump(tag_167)\n    tag_169:\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      dup1\n      not\n      dup3\n      mload\n      and\n      dup2\n      dup5\n      mload\n      and\n      dup1\n      dup3\n      or\n      dup6\n      mstore\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_172\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_171)\n    tag_172:\n      0x60\n      swap2\n      pop\n    tag_171:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4972:5047  (bool success, bytes memory returndata) = target.call{ value: value }(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5064:5116  _verifyCallResult(success, returndata, errorMessage) */\n      tag_173\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5082:5089  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5091:5101  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5103:5115  errorMessage */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5064:5081  _verifyCallResult */\n      tag_174\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5064:5116  _verifyCallResult(success, returndata, errorMessage) */\n      jump\t// in\n    tag_173:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5057:5116  return _verifyCallResult(success, returndata, errorMessage) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4600:5123  function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":718:1131  function isContract(address account) internal view returns (bool) {... */\n    tag_165:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":778:782  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":981:993  uint256 size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1090:1097  account */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1078:1098  extcodesize(account) */\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1070:1098  size := extcodesize(account) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1123:1124  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1116:1120  size */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1116:1124  size > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1109:1124  return size > 0 */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":718:1131  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7083:7808  function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {... */\n    tag_174:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7198:7210  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7226:7233  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7222:7802  if (success) {... */\n      iszero\n      tag_177\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7256:7266  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7249:7266  return returndata */\n      swap1\n      pop\n      jump(tag_176)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7222:7802  if (success) {... */\n    tag_177:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7387:7388  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7367:7377  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7367:7384  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7367:7388  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7363:7792  if (returndata.length > 0) {... */\n      iszero\n      tag_179\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7625:7635  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7619:7636  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7685:7700  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7672:7682  returndata */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7668:7670  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7664:7683  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7657:7701  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7574:7719  {... */\n    tag_179:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7764:7776  errorMessage */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7757:7777  revert(errorMessage) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_181:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_183\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_181)\n    tag_183:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_184\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_184:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7083:7808  function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {... */\n    tag_176:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_0b669e18afde06dd7c948323cc96d872c8f871b51c6d9576e3a7c68b3cf92211 416c6c79426f6e643a636c61696d496368693a3a20696e73756666696369656e7420416c6c792062616c616e6365\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c 416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c\n    data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3 536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77\n    data_c390cdc2dad4ae97ebf57885ff8329c5ba9db4090e4ae8e26c397b65531f1fee 416c6c79426f6e643a636c61696d496368693a3a20696e737566666963656e7420416c6c7920616c6c6f77616e6365\n    data_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd 5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564\n    data_f369de33193fa9ad14f9bc77962ccc61dea2ab7e55babf0d95e6159628a429bd 416c6c79426f6e643a656d657267656e637957697468647261773a3a20746f2063616e6e6f7420626520746865203078302061646472657373\n\n    auxdata: 0xa264697066735822122046cb05f01b7d3a9978627e10109b2fbc3563290bca873522c6ddfb15b2d95cf064736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60c060405234801561001057600080fd5b50604051611d0a380380611d0a8339818101604052608081101561003357600080fd5b8101908080519060200190929190805190602001909291908051906020019092919080519060200190929190505050600061007261027f60201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35042821015610169576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603a815260200180611cd0603a913960400191505060405180910390fd5b83600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081608081815250508060a081815250507f863dd289402cf71b29dea8b439af18e7a86b4b02d6ef3c22b7dd04c7c11c1b3784848484604051808573ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182815260200194505050505060405180910390a150505050610287565b600033905090565b60805160a051611a126102be6000398061053c52806108f75280610ea45250806108b15280610eca5280610f045250611a126000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806385dd19c01161008c578063a4c0150211610066578063a4c015021461031f578063eb01f1491461033d578063eb7e28561461035b578063f2fde38b14610379576100ea565b806385dd19c01461026b5780638da5cb5b146102cd5780639cd56d0314610301576100ea565b8063551512de116100c8578063551512de146101b7578063715018a61461022557806376aabef41461022f578063814d28321461024d576100ea565b806326224c64146100ef57806334d1adb514610155578063522e117714610197575b600080fd5b6101316004803603602081101561010557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506103bd565b60405180848152602001838152602001828152602001935050505060405180910390f35b6101816004803603602081101561016b57600080fd5b81019080803590602001909291905050506104fb565b6040518082815260200191505060405180910390f35b61019f610538565b60405180821515815260200191505060405180910390f35b610223600480360360608110156101cd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061056a565b005b61022d610742565b005b6102376108af565b6040518082815260200191505060405180910390f35b6102556108d3565b6040518082815260200191505060405180910390f35b6102b76004803603604081101561028157600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061094c565b6040518082815260200191505060405180910390f35b6102d5610e79565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610309610ea2565b6040518082815260200191505060405180910390f35b610327610ec6565b6040518082815260200191505060405180910390f35b610345610f46565b6040518082815260200191505060405180910390f35b610363611028565b6040518082815260200191505060405180910390f35b6103bb6004803603602081101561038f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506110f3565b005b6000806000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231856040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561044b57600080fd5b505afa15801561045f573d6000803e3d6000fd5b505050506040513d602081101561047557600080fd5b810190808051906020019092919050505092506104bc670de0b6b3a76400006104ae61049f610f46565b866112e590919063ffffffff16565b61136b90919063ffffffff16565b90506104f2670de0b6b3a76400006104e46104d56108d3565b846112e590919063ffffffff16565b61136b90919063ffffffff16565b91509193909250565b6000610531670de0b6b3a7640000610523610514610f46565b856112e590919063ffffffff16565b61136b90919063ffffffff16565b9050919050565b60007f0000000000000000000000000000000000000000000000000000000000000000610563610ec6565b1015905090565b6105726113f4565b73ffffffffffffffffffffffffffffffffffffffff16610590610e79565b73ffffffffffffffffffffffffffffffffffffffff1614610619576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561069f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260398152602001806119a46039913960400191505060405180910390fd5b6106ca81838573ffffffffffffffffffffffffffffffffffffffff166113fc9092919063ffffffff16565b7f3ab9db27a4cdd8c603a752b62d5fbd93b4b3509fe2596708e9688e42bbac3576838383604051808473ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018273ffffffffffffffffffffffffffffffffffffffff168152602001935050505060405180910390a1505050565b61074a6113f4565b73ffffffffffffffffffffffffffffffffffffffff16610768610e79565b73ffffffffffffffffffffffffffffffffffffffff16146107f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b7f000000000000000000000000000000000000000000000000000000000000000081565b60006108dd610538565b156108f257670de0b6b3a76400009050610949565b6109467f0000000000000000000000000000000000000000000000000000000000000000610938670de0b6b3a764000061092a610ec6565b6112e590919063ffffffff16565b61136b90919063ffffffff16565b90505b90565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156109d757600080fd5b505afa1580156109eb573d6000803e3d6000fd5b505050506040513d6020811015610a0157600080fd5b8101908080519060200190929190505050831115610a6a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001806118b0602e913960400191505060405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b158015610b1157600080fd5b505afa158015610b25573d6000803e3d6000fd5b505050506040513d6020811015610b3b57600080fd5b8101908080519060200190929190505050831115610ba4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f81526020018061194b602f913960400191505060405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b158015610c5557600080fd5b505af1158015610c69573d6000803e3d6000fd5b505050506040513d6020811015610c7f57600080fd5b810190808051906020019092919050505050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342966c68846040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b158015610d0657600080fd5b505af1158015610d1a573d6000803e3d6000fd5b50505050610d27836104fb565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610dbc57600080fd5b505af1158015610dd0573d6000803e3d6000fd5b505050506040513d6020811015610de657600080fd5b8101908080519060200190929190505050507f6924de782c8b5f24144a945d93c937e0f7aac91e3a891105dca3c4536f52552933838584604051808573ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182815260200194505050505060405180910390a192915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b60007f00000000000000000000000000000000000000000000000000000000000000004211610ef85760009050610f43565b610f4062015180610f327f00000000000000000000000000000000000000000000000000000000000000004261149e90919063ffffffff16565b61136b90919063ffffffff16565b90505b90565b600080600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015610fb157600080fd5b505afa158015610fc5573d6000803e3d6000fd5b505050506040513d6020811015610fdb57600080fd5b8101908080519060200190929190505050905061102281611014670de0b6b3a7640000611006611028565b6112e590919063ffffffff16565b61136b90919063ffffffff16565b91505090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156110b357600080fd5b505afa1580156110c7573d6000803e3d6000fd5b505050506040513d60208110156110dd57600080fd5b8101908080519060200190929190505050905090565b6110fb6113f4565b73ffffffffffffffffffffffffffffffffffffffff16611119610e79565b73ffffffffffffffffffffffffffffffffffffffff16146111a2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611228576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806118de6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000808314156112f85760009050611365565b600082840290508284828161130957fe5b0414611360576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018061192a6021913960400191505060405180910390fd5b809150505b92915050565b60008082116113e2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525060200191505060405180910390fd5b8183816113eb57fe5b04905092915050565b600033905090565b6114998363a9059cbb60e01b8484604051602401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611521565b505050565b600082821115611516576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b818303905092915050565b6000611583826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166116109092919063ffffffff16565b905060008151111561160b578080602001905160208110156115a457600080fd5b810190808051906020019092919050505061160a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a81526020018061197a602a913960400191505060405180910390fd5b5b505050565b606061161f8484600085611628565b90509392505050565b606082471015611683576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806119046026913960400191505060405180910390fd5b61168c856117d0565b6116fe576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000081525060200191505060405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040518082805190602001908083835b6020831061174d578051825260208201915060208101905060208303925061172a565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d80600081146117af576040519150601f19603f3d011682016040523d82523d6000602084013e6117b4565b606091505b50915091506117c48282866117e3565b92505050949350505050565b600080823b905060008111915050919050565b606083156117f3578290506118a8565b6000835111156118065782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561186d578082015181840152602081019050611852565b50505050905090810190601f16801561189a5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b939250505056fe416c6c79426f6e643a636c61696d496368693a3a20696e73756666696369656e7420416c6c792062616c616e63654f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77416c6c79426f6e643a636c61696d496368693a3a20696e737566666963656e7420416c6c7920616c6c6f77616e63655361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564416c6c79426f6e643a656d657267656e637957697468647261773a3a20746f2063616e6e6f7420626520746865203078302061646472657373a264697066735822122046cb05f01b7d3a9978627e10109b2fbc3563290bca873522c6ddfb15b2d95cf064736f6c63430007060033416c6c79426f6e643a636f6e7374727563746f723a3a20636f6d6d656e63656d656e745f2063616e6e6f7420626520696e207468652070617374",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1D0A CODESIZE SUB DUP1 PUSH2 0x1D0A DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x0 PUSH2 0x72 PUSH2 0x27F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP TIMESTAMP DUP3 LT ISZERO PUSH2 0x169 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1CD0 PUSH1 0x3A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x80 DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0xA0 DUP2 DUP2 MSTORE POP POP PUSH32 0x863DD289402CF71B29DEA8B439AF18E7A86B4B02D6EF3C22B7DD04C7C11C1B37 DUP5 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP PUSH2 0x287 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x1A12 PUSH2 0x2BE PUSH1 0x0 CODECOPY DUP1 PUSH2 0x53C MSTORE DUP1 PUSH2 0x8F7 MSTORE DUP1 PUSH2 0xEA4 MSTORE POP DUP1 PUSH2 0x8B1 MSTORE DUP1 PUSH2 0xECA MSTORE DUP1 PUSH2 0xF04 MSTORE POP PUSH2 0x1A12 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x85DD19C0 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA4C01502 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA4C01502 EQ PUSH2 0x31F JUMPI DUP1 PUSH4 0xEB01F149 EQ PUSH2 0x33D JUMPI DUP1 PUSH4 0xEB7E2856 EQ PUSH2 0x35B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x379 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x85DD19C0 EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2CD JUMPI DUP1 PUSH4 0x9CD56D03 EQ PUSH2 0x301 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x551512DE GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x551512DE EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0x76AABEF4 EQ PUSH2 0x22F JUMPI DUP1 PUSH4 0x814D2832 EQ PUSH2 0x24D JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x26224C64 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x34D1ADB5 EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0x522E1177 EQ PUSH2 0x197 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x131 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x105 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x3BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x181 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x16B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x4FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19F PUSH2 0x538 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x223 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x56A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x22D PUSH2 0x742 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x237 PUSH2 0x8AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x255 PUSH2 0x8D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x281 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x94C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D5 PUSH2 0xE79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x309 PUSH2 0xEA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x327 PUSH2 0xEC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x345 PUSH2 0xF46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x363 PUSH2 0x1028 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3BB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x38F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x10F3 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x44B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x45F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x475 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP3 POP PUSH2 0x4BC PUSH8 0xDE0B6B3A7640000 PUSH2 0x4AE PUSH2 0x49F PUSH2 0xF46 JUMP JUMPDEST DUP7 PUSH2 0x12E5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x136B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x4F2 PUSH8 0xDE0B6B3A7640000 PUSH2 0x4E4 PUSH2 0x4D5 PUSH2 0x8D3 JUMP JUMPDEST DUP5 PUSH2 0x12E5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x136B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x531 PUSH8 0xDE0B6B3A7640000 PUSH2 0x523 PUSH2 0x514 PUSH2 0xF46 JUMP JUMPDEST DUP6 PUSH2 0x12E5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x136B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH2 0x563 PUSH2 0xEC6 JUMP JUMPDEST LT ISZERO SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x572 PUSH2 0x13F4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x590 PUSH2 0xE79 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x619 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x69F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x39 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x19A4 PUSH1 0x39 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6CA DUP2 DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x13FC SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH32 0x3AB9DB27A4CDD8C603A752B62D5FBD93B4B3509FE2596708E9688E42BBAC3576 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH2 0x74A PUSH2 0x13F4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x768 PUSH2 0xE79 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7F1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8DD PUSH2 0x538 JUMP JUMPDEST ISZERO PUSH2 0x8F2 JUMPI PUSH8 0xDE0B6B3A7640000 SWAP1 POP PUSH2 0x949 JUMP JUMPDEST PUSH2 0x946 PUSH32 0x0 PUSH2 0x938 PUSH8 0xDE0B6B3A7640000 PUSH2 0x92A PUSH2 0xEC6 JUMP JUMPDEST PUSH2 0x12E5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x136B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9EB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA01 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP4 GT ISZERO PUSH2 0xA6A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x18B0 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB25 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP4 GT ISZERO PUSH2 0xBA4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x194B PUSH1 0x2F SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC69 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xC7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42966C68 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD06 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD1A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0xD27 DUP4 PUSH2 0x4FB JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDBC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDD0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xDE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP POP PUSH32 0x6924DE782C8B5F24144A945D93C937E0F7AAC91E3A891105DCA3C4536F525529 CALLER DUP4 DUP6 DUP5 PUSH1 0x40 MLOAD DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 TIMESTAMP GT PUSH2 0xEF8 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0xF43 JUMP JUMPDEST PUSH2 0xF40 PUSH3 0x15180 PUSH2 0xF32 PUSH32 0x0 TIMESTAMP PUSH2 0x149E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x136B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFC5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xFDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH2 0x1022 DUP2 PUSH2 0x1014 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1006 PUSH2 0x1028 JUMP JUMPDEST PUSH2 0x12E5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x136B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10C7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x10DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x10FB PUSH2 0x13F4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1119 PUSH2 0xE79 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11A2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1228 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x18DE PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO PUSH2 0x12F8 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x1365 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 MUL SWAP1 POP DUP3 DUP5 DUP3 DUP2 PUSH2 0x1309 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x1360 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x192A PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x13E2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP4 DUP2 PUSH2 0x13EB JUMPI INVALID JUMPDEST DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1499 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1521 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x1516 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP4 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1583 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1610 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x160B JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x15A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x160A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x197A PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x161F DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1628 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x1683 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1904 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x168C DUP6 PUSH2 0x17D0 JUMP JUMPDEST PUSH2 0x16FE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x174D JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x172A JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x17AF JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x17B4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x17C4 DUP3 DUP3 DUP7 PUSH2 0x17E3 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x17F3 JUMPI DUP3 SWAP1 POP PUSH2 0x18A8 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x1806 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x186D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1852 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x189A JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID COINBASE PUSH13 0x6C79426F6E643A636C61696D49 PUSH4 0x68693A3A KECCAK256 PUSH10 0x6E73756666696369656E PUSH21 0x20416C6C792062616C616E63654F776E61626C653A KECCAK256 PUSH15 0x6577206F776E657220697320746865 KECCAK256 PUSH27 0x65726F2061646472657373416464726573733A20696E7375666669 PUSH4 0x69656E74 KECCAK256 PUSH3 0x616C61 PUSH15 0x636520666F722063616C6C53616665 0x4D PUSH2 0x7468 GASPRICE KECCAK256 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F77416C6C79426F6E643A PUSH4 0x6C61696D 0x49 PUSH4 0x68693A3A KECCAK256 PUSH10 0x6E737566666963656E74 KECCAK256 COINBASE PUSH13 0x6C7920616C6C6F77616E636553 PUSH2 0x6665 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x756363656564416C6C79426F6E643A656D657267 PUSH6 0x6E6379576974 PUSH9 0x647261773A3A20746F KECCAK256 PUSH4 0x616E6E6F PUSH21 0x20626520746865203078302061646472657373A264 PUSH10 0x7066735822122046CB05 CREATE SHL PUSH30 0x3A9978627E10109B2FBC3563290BCA873522C6DDFB15B2D95CF064736F6C PUSH4 0x43000706 STOP CALLER COINBASE PUSH13 0x6C79426F6E643A636F6E737472 PUSH22 0x63746F723A3A20636F6D6D656E63656D656E745F2063 PUSH2 0x6E6E PUSH16 0x7420626520696E207468652070617374 ",
							"sourceMap": "250:3324:6:-:0;;;990:400;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;867:17:0;887:12;:10;;;:12;;:::i;:::-;867:32;;918:9;909:6;;:18;;;;;;;;;;;;;;;;;;975:9;942:43;;971:1;942:43;;;;;;;;;;;;842:150;1112:15:6;1095:13;:32;;1087:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1209:7;1200:6;;:16;;;;;;;;;;;;;;;;;;1233:5;1226:4;;:12;;;;;;;;;;;;;;;;;;1263:13;1248:28;;;;;;1301:13;1286:28;;;;;;1329:54;1338:7;1347:5;1354:13;1369;1329:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;990:400;;;;250:3324;;598:104:5;651:15;685:10;678:17;;598:104;:::o;250:3324:6:-;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {
								"1097": [
									{
										"length": 32,
										"start": 2225
									},
									{
										"length": 32,
										"start": 3786
									},
									{
										"length": 32,
										"start": 3844
									}
								],
								"1099": [
									{
										"length": 32,
										"start": 1340
									},
									{
										"length": 32,
										"start": 2295
									},
									{
										"length": 32,
										"start": 3748
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100ea5760003560e01c806385dd19c01161008c578063a4c0150211610066578063a4c015021461031f578063eb01f1491461033d578063eb7e28561461035b578063f2fde38b14610379576100ea565b806385dd19c01461026b5780638da5cb5b146102cd5780639cd56d0314610301576100ea565b8063551512de116100c8578063551512de146101b7578063715018a61461022557806376aabef41461022f578063814d28321461024d576100ea565b806326224c64146100ef57806334d1adb514610155578063522e117714610197575b600080fd5b6101316004803603602081101561010557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506103bd565b60405180848152602001838152602001828152602001935050505060405180910390f35b6101816004803603602081101561016b57600080fd5b81019080803590602001909291905050506104fb565b6040518082815260200191505060405180910390f35b61019f610538565b60405180821515815260200191505060405180910390f35b610223600480360360608110156101cd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061056a565b005b61022d610742565b005b6102376108af565b6040518082815260200191505060405180910390f35b6102556108d3565b6040518082815260200191505060405180910390f35b6102b76004803603604081101561028157600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061094c565b6040518082815260200191505060405180910390f35b6102d5610e79565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610309610ea2565b6040518082815260200191505060405180910390f35b610327610ec6565b6040518082815260200191505060405180910390f35b610345610f46565b6040518082815260200191505060405180910390f35b610363611028565b6040518082815260200191505060405180910390f35b6103bb6004803603602081101561038f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506110f3565b005b6000806000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231856040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561044b57600080fd5b505afa15801561045f573d6000803e3d6000fd5b505050506040513d602081101561047557600080fd5b810190808051906020019092919050505092506104bc670de0b6b3a76400006104ae61049f610f46565b866112e590919063ffffffff16565b61136b90919063ffffffff16565b90506104f2670de0b6b3a76400006104e46104d56108d3565b846112e590919063ffffffff16565b61136b90919063ffffffff16565b91509193909250565b6000610531670de0b6b3a7640000610523610514610f46565b856112e590919063ffffffff16565b61136b90919063ffffffff16565b9050919050565b60007f0000000000000000000000000000000000000000000000000000000000000000610563610ec6565b1015905090565b6105726113f4565b73ffffffffffffffffffffffffffffffffffffffff16610590610e79565b73ffffffffffffffffffffffffffffffffffffffff1614610619576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561069f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260398152602001806119a46039913960400191505060405180910390fd5b6106ca81838573ffffffffffffffffffffffffffffffffffffffff166113fc9092919063ffffffff16565b7f3ab9db27a4cdd8c603a752b62d5fbd93b4b3509fe2596708e9688e42bbac3576838383604051808473ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018273ffffffffffffffffffffffffffffffffffffffff168152602001935050505060405180910390a1505050565b61074a6113f4565b73ffffffffffffffffffffffffffffffffffffffff16610768610e79565b73ffffffffffffffffffffffffffffffffffffffff16146107f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b7f000000000000000000000000000000000000000000000000000000000000000081565b60006108dd610538565b156108f257670de0b6b3a76400009050610949565b6109467f0000000000000000000000000000000000000000000000000000000000000000610938670de0b6b3a764000061092a610ec6565b6112e590919063ffffffff16565b61136b90919063ffffffff16565b90505b90565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156109d757600080fd5b505afa1580156109eb573d6000803e3d6000fd5b505050506040513d6020811015610a0157600080fd5b8101908080519060200190929190505050831115610a6a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001806118b0602e913960400191505060405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b158015610b1157600080fd5b505afa158015610b25573d6000803e3d6000fd5b505050506040513d6020811015610b3b57600080fd5b8101908080519060200190929190505050831115610ba4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f81526020018061194b602f913960400191505060405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b158015610c5557600080fd5b505af1158015610c69573d6000803e3d6000fd5b505050506040513d6020811015610c7f57600080fd5b810190808051906020019092919050505050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342966c68846040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b158015610d0657600080fd5b505af1158015610d1a573d6000803e3d6000fd5b50505050610d27836104fb565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610dbc57600080fd5b505af1158015610dd0573d6000803e3d6000fd5b505050506040513d6020811015610de657600080fd5b8101908080519060200190929190505050507f6924de782c8b5f24144a945d93c937e0f7aac91e3a891105dca3c4536f52552933838584604051808573ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182815260200194505050505060405180910390a192915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b60007f00000000000000000000000000000000000000000000000000000000000000004211610ef85760009050610f43565b610f4062015180610f327f00000000000000000000000000000000000000000000000000000000000000004261149e90919063ffffffff16565b61136b90919063ffffffff16565b90505b90565b600080600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015610fb157600080fd5b505afa158015610fc5573d6000803e3d6000fd5b505050506040513d6020811015610fdb57600080fd5b8101908080519060200190929190505050905061102281611014670de0b6b3a7640000611006611028565b6112e590919063ffffffff16565b61136b90919063ffffffff16565b91505090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156110b357600080fd5b505afa1580156110c7573d6000803e3d6000fd5b505050506040513d60208110156110dd57600080fd5b8101908080519060200190929190505050905090565b6110fb6113f4565b73ffffffffffffffffffffffffffffffffffffffff16611119610e79565b73ffffffffffffffffffffffffffffffffffffffff16146111a2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611228576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806118de6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000808314156112f85760009050611365565b600082840290508284828161130957fe5b0414611360576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018061192a6021913960400191505060405180910390fd5b809150505b92915050565b60008082116113e2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525060200191505060405180910390fd5b8183816113eb57fe5b04905092915050565b600033905090565b6114998363a9059cbb60e01b8484604051602401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611521565b505050565b600082821115611516576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b818303905092915050565b6000611583826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166116109092919063ffffffff16565b905060008151111561160b578080602001905160208110156115a457600080fd5b810190808051906020019092919050505061160a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a81526020018061197a602a913960400191505060405180910390fd5b5b505050565b606061161f8484600085611628565b90509392505050565b606082471015611683576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806119046026913960400191505060405180910390fd5b61168c856117d0565b6116fe576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000081525060200191505060405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040518082805190602001908083835b6020831061174d578051825260208201915060208101905060208303925061172a565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d80600081146117af576040519150601f19603f3d011682016040523d82523d6000602084013e6117b4565b606091505b50915091506117c48282866117e3565b92505050949350505050565b600080823b905060008111915050919050565b606083156117f3578290506118a8565b6000835111156118065782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561186d578082015181840152602081019050611852565b50505050905090810190601f16801561189a5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b939250505056fe416c6c79426f6e643a636c61696d496368693a3a20696e73756666696369656e7420416c6c792062616c616e63654f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77416c6c79426f6e643a636c61696d496368693a3a20696e737566666963656e7420416c6c7920616c6c6f77616e63655361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564416c6c79426f6e643a656d657267656e637957697468647261773a3a20746f2063616e6e6f7420626520746865203078302061646472657373a264697066735822122046cb05f01b7d3a9978627e10109b2fbc3563290bca873522c6ddfb15b2d95cf064736f6c63430007060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x85DD19C0 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA4C01502 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA4C01502 EQ PUSH2 0x31F JUMPI DUP1 PUSH4 0xEB01F149 EQ PUSH2 0x33D JUMPI DUP1 PUSH4 0xEB7E2856 EQ PUSH2 0x35B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x379 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x85DD19C0 EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2CD JUMPI DUP1 PUSH4 0x9CD56D03 EQ PUSH2 0x301 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x551512DE GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x551512DE EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0x76AABEF4 EQ PUSH2 0x22F JUMPI DUP1 PUSH4 0x814D2832 EQ PUSH2 0x24D JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x26224C64 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x34D1ADB5 EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0x522E1177 EQ PUSH2 0x197 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x131 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x105 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x3BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x181 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x16B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x4FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19F PUSH2 0x538 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x223 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x56A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x22D PUSH2 0x742 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x237 PUSH2 0x8AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x255 PUSH2 0x8D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x281 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x94C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D5 PUSH2 0xE79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x309 PUSH2 0xEA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x327 PUSH2 0xEC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x345 PUSH2 0xF46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x363 PUSH2 0x1028 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3BB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x38F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x10F3 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x44B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x45F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x475 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP3 POP PUSH2 0x4BC PUSH8 0xDE0B6B3A7640000 PUSH2 0x4AE PUSH2 0x49F PUSH2 0xF46 JUMP JUMPDEST DUP7 PUSH2 0x12E5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x136B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x4F2 PUSH8 0xDE0B6B3A7640000 PUSH2 0x4E4 PUSH2 0x4D5 PUSH2 0x8D3 JUMP JUMPDEST DUP5 PUSH2 0x12E5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x136B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x531 PUSH8 0xDE0B6B3A7640000 PUSH2 0x523 PUSH2 0x514 PUSH2 0xF46 JUMP JUMPDEST DUP6 PUSH2 0x12E5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x136B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH2 0x563 PUSH2 0xEC6 JUMP JUMPDEST LT ISZERO SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x572 PUSH2 0x13F4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x590 PUSH2 0xE79 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x619 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x69F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x39 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x19A4 PUSH1 0x39 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6CA DUP2 DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x13FC SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH32 0x3AB9DB27A4CDD8C603A752B62D5FBD93B4B3509FE2596708E9688E42BBAC3576 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH2 0x74A PUSH2 0x13F4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x768 PUSH2 0xE79 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7F1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8DD PUSH2 0x538 JUMP JUMPDEST ISZERO PUSH2 0x8F2 JUMPI PUSH8 0xDE0B6B3A7640000 SWAP1 POP PUSH2 0x949 JUMP JUMPDEST PUSH2 0x946 PUSH32 0x0 PUSH2 0x938 PUSH8 0xDE0B6B3A7640000 PUSH2 0x92A PUSH2 0xEC6 JUMP JUMPDEST PUSH2 0x12E5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x136B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9EB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA01 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP4 GT ISZERO PUSH2 0xA6A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x18B0 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB25 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP4 GT ISZERO PUSH2 0xBA4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x194B PUSH1 0x2F SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC69 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xC7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42966C68 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD06 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD1A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0xD27 DUP4 PUSH2 0x4FB JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDBC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDD0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xDE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP POP PUSH32 0x6924DE782C8B5F24144A945D93C937E0F7AAC91E3A891105DCA3C4536F525529 CALLER DUP4 DUP6 DUP5 PUSH1 0x40 MLOAD DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 TIMESTAMP GT PUSH2 0xEF8 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0xF43 JUMP JUMPDEST PUSH2 0xF40 PUSH3 0x15180 PUSH2 0xF32 PUSH32 0x0 TIMESTAMP PUSH2 0x149E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x136B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFC5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xFDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH2 0x1022 DUP2 PUSH2 0x1014 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1006 PUSH2 0x1028 JUMP JUMPDEST PUSH2 0x12E5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x136B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10C7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x10DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x10FB PUSH2 0x13F4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1119 PUSH2 0xE79 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11A2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1228 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x18DE PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO PUSH2 0x12F8 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x1365 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 MUL SWAP1 POP DUP3 DUP5 DUP3 DUP2 PUSH2 0x1309 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x1360 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x192A PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x13E2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP4 DUP2 PUSH2 0x13EB JUMPI INVALID JUMPDEST DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1499 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1521 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x1516 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP4 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1583 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1610 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x160B JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x15A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x160A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x197A PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x161F DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1628 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x1683 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1904 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x168C DUP6 PUSH2 0x17D0 JUMP JUMPDEST PUSH2 0x16FE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x174D JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x172A JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x17AF JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x17B4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x17C4 DUP3 DUP3 DUP7 PUSH2 0x17E3 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x17F3 JUMPI DUP3 SWAP1 POP PUSH2 0x18A8 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x1806 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x186D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1852 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x189A JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID COINBASE PUSH13 0x6C79426F6E643A636C61696D49 PUSH4 0x68693A3A KECCAK256 PUSH10 0x6E73756666696369656E PUSH21 0x20416C6C792062616C616E63654F776E61626C653A KECCAK256 PUSH15 0x6577206F776E657220697320746865 KECCAK256 PUSH27 0x65726F2061646472657373416464726573733A20696E7375666669 PUSH4 0x69656E74 KECCAK256 PUSH3 0x616C61 PUSH15 0x636520666F722063616C6C53616665 0x4D PUSH2 0x7468 GASPRICE KECCAK256 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F77416C6C79426F6E643A PUSH4 0x6C61696D 0x49 PUSH4 0x68693A3A KECCAK256 PUSH10 0x6E737566666963656E74 KECCAK256 COINBASE PUSH13 0x6C7920616C6C6F77616E636553 PUSH2 0x6665 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x756363656564416C6C79426F6E643A656D657267 PUSH6 0x6E6379576974 PUSH9 0x647261773A3A20746F KECCAK256 PUSH4 0x616E6E6F PUSH21 0x20626520746865203078302061646472657373A264 PUSH10 0x7066735822122046CB05 CREATE SHL PUSH30 0x3A9978627E10109B2FBC3563290BCA873522C6DDFB15B2D95CF064736F6C PUSH4 0x43000706 STOP CALLER ",
							"sourceMap": "250:3324:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3252:319;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3091:155;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2399:112;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1979:284;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1700:145:0;;;:::i;:::-;;483:37:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2732:168;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1396:577;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1068:85:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;526:37:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2517:182;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2906:179;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2269:124;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1994:240:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3252:319:6;3308:19;3329:17;3348:22;3396:4;;;;;;;;;;;:14;;;3411:4;3396:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3382:34;;3443:45;423:4;3443:30;3459:13;:11;:13::i;:::-;3443:11;:15;;:30;;;;:::i;:::-;:34;;:45;;;;:::i;:::-;3426:62;;3510:54;423:4;3510:39;3529:19;:17;:19::i;:::-;3510:14;:18;;:39;;;;:::i;:::-;:43;;:54;;;;:::i;:::-;3498:66;;3252:319;;;;;:::o;3091:155::-;3152:18;3195:44;423:4;3195:29;3210:13;:11;:13::i;:::-;3195:10;:14;;:29;;;;:::i;:::-;:33;;:44;;;;:::i;:::-;3182:57;;3091:155;;;:::o;2399:112::-;2439:15;2492:12;2479:9;:7;:9::i;:::-;:25;;2466:38;;2399:112;:::o;1979:284::-;1291:12:0;:10;:12::i;:::-;1280:23;;:7;:5;:7::i;:::-;:23;;;1272:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2099:1:6::1;2085:16;;:2;:16;;;;2077:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2173:30;2192:2;2196:6;2173:5;:18;;;;:30;;;;;:::i;:::-;2218:38;2238:5;2245:6;2253:2;2218:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1979:284:::0;;;:::o;1700:145:0:-;1291:12;:10;:12::i;:::-;1280:23;;:7;:5;:7::i;:::-;:23;;;1272:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1806:1:::1;1769:40;;1790:6;::::0;::::1;;;;;;;;1769:40;;;;;;;;;;;;1836:1;1819:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;1700:145::o:0;483:37:6:-;;;:::o;2732:168::-;2781:11;2807:10;:8;:10::i;:::-;2804:31;;;423:4;2819:16;;;;2804:31;2851:42;2880:12;2851:24;423:4;2851:9;:7;:9::i;:::-;:13;;:24;;;;:::i;:::-;:28;;:42;;;;:::i;:::-;2845:48;;2732:168;;:::o;1396:577::-;1464:18;1516:4;;;;;;;;;;;:14;;;1531:10;1516:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1502:10;:40;;1494:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1625:4;;;;;;;;;;;:14;;;1640:10;1660:4;1625:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1611:10;:55;;1603:115;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1728:4;;;;;;;;;;;:17;;;1746:10;1766:4;1773:10;1728:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1794:4;;;;;;;;;;;:9;;;1804:10;1794:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1838:23;1850:10;1838:11;:23::i;:::-;1825:36;;1871:6;;;;;;;;;;;:15;;;1887:2;1891:10;1871:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1917:49;1927:10;1939:2;1943:10;1955;1917:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1396:577;;;;:::o;1068:85:0:-;1114:7;1140:6;;;;;;;;;;;1133:13;;1068:85;:::o;526:37:6:-;;;:::o;2517:182::-;2556:15;2605:12;2586:15;:31;2583:44;;2626:1;2619:8;;;;2583:44;2647:45;2685:6;2647:33;2667:12;2647:15;:19;;:33;;;;:::i;:::-;:37;;:45;;;;:::i;:::-;2637:55;;2517:182;;:::o;2906:179::-;2949:11;2972:20;2995:4;;;;;;;;;;;:16;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2972:41;;3029:49;3062:15;3029:28;423:4;3029:13;:11;:13::i;:::-;:17;;:28;;;;:::i;:::-;:32;;:49;;;;:::i;:::-;3023:55;;2906:179;;:::o;2269:124::-;2312:18;2355:6;;;;;;;;;;;:16;;;2380:4;2355:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2342:44;;2269:124;:::o;1994:240:0:-;1291:12;:10;:12::i;:::-;1280:23;;:7;:5;:7::i;:::-;:23;;;1272:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2102:1:::1;2082:22;;:8;:22;;;;2074:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2191:8;2162:38;;2183:6;::::0;::::1;;;;;;;;2162:38;;;;;;;;;;;;2219:8;2210:6;::::0;:17:::1;;;;;;;;;;;;;;;;;;1994:240:::0;:::o;3530:215:1:-;3588:7;3616:1;3611;:6;3607:20;;;3626:1;3619:8;;;;3607:20;3637:9;3653:1;3649;:5;3637:17;;3681:1;3676;3672;:5;;;;;;:10;3664:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3737:1;3730:8;;;3530:215;;;;;:::o;4209:150::-;4267:7;4298:1;4294;:5;4286:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4351:1;4347;:5;;;;;;4340:12;;4209:150;;;;:::o;598:104:5:-;651:15;685:10;678:17;;598:104;:::o;696:175:3:-;778:86;798:5;828:23;;;853:2;857:5;805:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;778:19;:86::i;:::-;696:175;;;:::o;3128:155:1:-;3186:7;3218:1;3213;:6;;3205:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3275:1;3271;:5;3264:12;;3128:155;;;;:::o;2959:751:3:-;3378:23;3404:69;3432:4;3404:69;;;;;;;;;;;;;;;;;3412:5;3404:27;;;;:69;;;;;:::i;:::-;3378:95;;3507:1;3487:10;:17;:21;3483:221;;;3627:10;3616:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3608:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3483:221;2959:751;;;:::o;3573:193:4:-;3676:12;3707:52;3729:6;3737:4;3743:1;3746:12;3707:21;:52::i;:::-;3700:59;;3573:193;;;;;:::o;4600:523::-;4727:12;4784:5;4759:21;:30;;4751:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4850:18;4861:6;4850:10;:18::i;:::-;4842:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4973:12;4987:23;5014:6;:11;;5034:5;5042:4;5014:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4972:75;;;;5064:52;5082:7;5091:10;5103:12;5064:17;:52::i;:::-;5057:59;;;;4600:523;;;;;;:::o;718:413::-;778:4;981:12;1090:7;1078:20;1070:28;;1123:1;1116:4;:8;1109:15;;;718:413;;;:::o;7083:725::-;7198:12;7226:7;7222:580;;;7256:10;7249:17;;;;7222:580;7387:1;7367:10;:17;:21;7363:429;;;7625:10;7619:17;7685:15;7672:10;7668:2;7664:19;7657:44;7574:145;7764:12;7757:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7083:725;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1334800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"claimIchi(uint256,address)": "infinite",
								"commencement()": "infinite",
								"complete()": "infinite",
								"daysOld()": "infinite",
								"durationDays()": "infinite",
								"emergencyWithdraw(address,uint256,address)": "infinite",
								"ichiBalance()": "infinite",
								"ichiForAlly(uint256)": "infinite",
								"ichiPerAlly()": "infinite",
								"owner()": "1100",
								"redeemablePercent()": "infinite",
								"renounceOwnership()": "24374",
								"transferOwnership(address)": "infinite",
								"userBalances(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 250,
									"end": 3574,
									"name": "PUSH",
									"source": 6,
									"value": "C0"
								},
								{
									"begin": 250,
									"end": 3574,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 250,
									"end": 3574,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 990,
									"end": 1390,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 990,
									"end": 1390,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 990,
									"end": 1390,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 990,
									"end": 1390,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 990,
									"end": 1390,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 990,
									"end": 1390,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 990,
									"end": 1390,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 990,
									"end": 1390,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 990,
									"end": 1390,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 990,
									"end": 1390,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 990,
									"end": 1390,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 990,
									"end": 1390,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 990,
									"end": 1390,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 990,
									"end": 1390,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 990,
									"end": 1390,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 990,
									"end": 1390,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 990,
									"end": 1390,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 990,
									"end": 1390,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 990,
									"end": 1390,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 990,
									"end": 1390,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 990,
									"end": 1390,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 990,
									"end": 1390,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 990,
									"end": 1390,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 990,
									"end": 1390,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 990,
									"end": 1390,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 990,
									"end": 1390,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 990,
									"end": 1390,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 990,
									"end": 1390,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 990,
									"end": 1390,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 990,
									"end": 1390,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 990,
									"end": 1390,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 990,
									"end": 1390,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 990,
									"end": 1390,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 990,
									"end": 1390,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 990,
									"end": 1390,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 990,
									"end": 1390,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 990,
									"end": 1390,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 990,
									"end": 1390,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 990,
									"end": 1390,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 990,
									"end": 1390,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 990,
									"end": 1390,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 990,
									"end": 1390,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 990,
									"end": 1390,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 990,
									"end": 1390,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 990,
									"end": 1390,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 990,
									"end": 1390,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 990,
									"end": 1390,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 990,
									"end": 1390,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 990,
									"end": 1390,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 990,
									"end": 1390,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 990,
									"end": 1390,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 990,
									"end": 1390,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 990,
									"end": 1390,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 990,
									"end": 1390,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 990,
									"end": 1390,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 990,
									"end": 1390,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 990,
									"end": 1390,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 990,
									"end": 1390,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 990,
									"end": 1390,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 990,
									"end": 1390,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 990,
									"end": 1390,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 990,
									"end": 1390,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 990,
									"end": 1390,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 990,
									"end": 1390,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 990,
									"end": 1390,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 990,
									"end": 1390,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 990,
									"end": 1390,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 990,
									"end": 1390,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 990,
									"end": 1390,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 990,
									"end": 1390,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 990,
									"end": 1390,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 990,
									"end": 1390,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 990,
									"end": 1390,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 990,
									"end": 1390,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 990,
									"end": 1390,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 990,
									"end": 1390,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 990,
									"end": 1390,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 990,
									"end": 1390,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 990,
									"end": 1390,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 867,
									"end": 884,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 887,
									"end": 899,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 887,
									"end": 897,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 887,
									"end": 897,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 887,
									"end": 897,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 887,
									"end": 899,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 887,
									"end": 899,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 887,
									"end": 899,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 887,
									"end": 899,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 887,
									"end": 899,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 867,
									"end": 899,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 867,
									"end": 899,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 918,
									"end": 927,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 909,
									"end": 915,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 909,
									"end": 915,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 909,
									"end": 927,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 909,
									"end": 927,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 909,
									"end": 927,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 909,
									"end": 927,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 909,
									"end": 927,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 909,
									"end": 927,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 909,
									"end": 927,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 909,
									"end": 927,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 909,
									"end": 927,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 909,
									"end": 927,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 909,
									"end": 927,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 909,
									"end": 927,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 909,
									"end": 927,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 909,
									"end": 927,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 909,
									"end": 927,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 909,
									"end": 927,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 909,
									"end": 927,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 909,
									"end": 927,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 975,
									"end": 984,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 942,
									"end": 985,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 942,
									"end": 985,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 971,
									"end": 972,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 942,
									"end": 985,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 942,
									"end": 985,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 942,
									"end": 985,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 942,
									"end": 985,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 942,
									"end": 985,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 942,
									"end": 985,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 942,
									"end": 985,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 942,
									"end": 985,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 942,
									"end": 985,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 942,
									"end": 985,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 942,
									"end": 985,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 942,
									"end": 985,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 842,
									"end": 992,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1112,
									"end": 1127,
									"name": "TIMESTAMP",
									"source": 6
								},
								{
									"begin": 1095,
									"end": 1108,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1095,
									"end": 1127,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1095,
									"end": 1127,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1087,
									"end": 1190,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 1087,
									"end": 1190,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1087,
									"end": 1190,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1087,
									"end": 1190,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1087,
									"end": 1190,
									"name": "PUSH",
									"source": 6,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1087,
									"end": 1190,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1087,
									"end": 1190,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1087,
									"end": 1190,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1087,
									"end": 1190,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1087,
									"end": 1190,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1087,
									"end": 1190,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1087,
									"end": 1190,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1087,
									"end": 1190,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1087,
									"end": 1190,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1087,
									"end": 1190,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1087,
									"end": 1190,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1087,
									"end": 1190,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1087,
									"end": 1190,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1087,
									"end": 1190,
									"name": "PUSH",
									"source": 6,
									"value": "3A"
								},
								{
									"begin": 1087,
									"end": 1190,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1087,
									"end": 1190,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1087,
									"end": 1190,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1087,
									"end": 1190,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1087,
									"end": 1190,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1087,
									"end": 1190,
									"name": "PUSH data",
									"source": 6,
									"value": "FB3D24C9BB7CE198BE44568979120F7D00952FE68679C4FE4B5C2D3BB0A9F077"
								},
								{
									"begin": 1087,
									"end": 1190,
									"name": "PUSH",
									"source": 6,
									"value": "3A"
								},
								{
									"begin": 1087,
									"end": 1190,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1087,
									"end": 1190,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 1087,
									"end": 1190,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1087,
									"end": 1190,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1087,
									"end": 1190,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1087,
									"end": 1190,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1087,
									"end": 1190,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1087,
									"end": 1190,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1087,
									"end": 1190,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1087,
									"end": 1190,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1087,
									"end": 1190,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1087,
									"end": 1190,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1087,
									"end": 1190,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1087,
									"end": 1190,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1087,
									"end": 1190,
									"name": "tag",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 1087,
									"end": 1190,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1209,
									"end": 1216,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1200,
									"end": 1206,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1200,
									"end": 1206,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1200,
									"end": 1216,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 1200,
									"end": 1216,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 1200,
									"end": 1216,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1200,
									"end": 1216,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 1200,
									"end": 1216,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1200,
									"end": 1216,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1200,
									"end": 1216,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1200,
									"end": 1216,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1200,
									"end": 1216,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1200,
									"end": 1216,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1200,
									"end": 1216,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1200,
									"end": 1216,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1200,
									"end": 1216,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1200,
									"end": 1216,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1200,
									"end": 1216,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1200,
									"end": 1216,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1200,
									"end": 1216,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1200,
									"end": 1216,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1233,
									"end": 1238,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1226,
									"end": 1230,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1226,
									"end": 1230,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1226,
									"end": 1238,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 1226,
									"end": 1238,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 1226,
									"end": 1238,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1226,
									"end": 1238,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 1226,
									"end": 1238,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1226,
									"end": 1238,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1226,
									"end": 1238,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1226,
									"end": 1238,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1226,
									"end": 1238,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1226,
									"end": 1238,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1226,
									"end": 1238,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1226,
									"end": 1238,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1226,
									"end": 1238,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1226,
									"end": 1238,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1226,
									"end": 1238,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1226,
									"end": 1238,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1226,
									"end": 1238,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1226,
									"end": 1238,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1263,
									"end": 1276,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1248,
									"end": 1276,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 1248,
									"end": 1276,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1248,
									"end": 1276,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1248,
									"end": 1276,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1248,
									"end": 1276,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1248,
									"end": 1276,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1301,
									"end": 1314,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1286,
									"end": 1314,
									"name": "PUSH",
									"source": 6,
									"value": "A0"
								},
								{
									"begin": 1286,
									"end": 1314,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1286,
									"end": 1314,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1286,
									"end": 1314,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1286,
									"end": 1314,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1286,
									"end": 1314,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1329,
									"end": 1383,
									"name": "PUSH",
									"source": 6,
									"value": "863DD289402CF71B29DEA8B439AF18E7A86B4B02D6EF3C22B7DD04C7C11C1B37"
								},
								{
									"begin": 1338,
									"end": 1345,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1347,
									"end": 1352,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1354,
									"end": 1367,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1369,
									"end": 1382,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1329,
									"end": 1383,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1329,
									"end": 1383,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1329,
									"end": 1383,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1329,
									"end": 1383,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1329,
									"end": 1383,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1329,
									"end": 1383,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1329,
									"end": 1383,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1329,
									"end": 1383,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1329,
									"end": 1383,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1329,
									"end": 1383,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1329,
									"end": 1383,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1329,
									"end": 1383,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1329,
									"end": 1383,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1329,
									"end": 1383,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1329,
									"end": 1383,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1329,
									"end": 1383,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1329,
									"end": 1383,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1329,
									"end": 1383,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1329,
									"end": 1383,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1329,
									"end": 1383,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1329,
									"end": 1383,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1329,
									"end": 1383,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1329,
									"end": 1383,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1329,
									"end": 1383,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1329,
									"end": 1383,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1329,
									"end": 1383,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1329,
									"end": 1383,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1329,
									"end": 1383,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 1329,
									"end": 1383,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1329,
									"end": 1383,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1329,
									"end": 1383,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1329,
									"end": 1383,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1329,
									"end": 1383,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1329,
									"end": 1383,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1329,
									"end": 1383,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1329,
									"end": 1383,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1329,
									"end": 1383,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1329,
									"end": 1383,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1329,
									"end": 1383,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1329,
									"end": 1383,
									"name": "LOG1",
									"source": 6
								},
								{
									"begin": 990,
									"end": 1390,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 990,
									"end": 1390,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 990,
									"end": 1390,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 990,
									"end": 1390,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 250,
									"end": 3574,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 250,
									"end": 3574,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 598,
									"end": 702,
									"name": "tag",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 598,
									"end": 702,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 651,
									"end": 666,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 685,
									"end": 695,
									"name": "CALLER",
									"source": 5
								},
								{
									"begin": 678,
									"end": 695,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 678,
									"end": 695,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 598,
									"end": 702,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 598,
									"end": 702,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 250,
									"end": 3574,
									"name": "tag",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 250,
									"end": 3574,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 250,
									"end": 3574,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 250,
									"end": 3574,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 250,
									"end": 3574,
									"name": "PUSH",
									"source": 6,
									"value": "A0"
								},
								{
									"begin": 250,
									"end": 3574,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 250,
									"end": 3574,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 250,
									"end": 3574,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 250,
									"end": 3574,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 250,
									"end": 3574,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 250,
									"end": 3574,
									"name": "ASSIGNIMMUTABLE",
									"source": 6,
									"value": "1099"
								},
								{
									"begin": 250,
									"end": 3574,
									"name": "ASSIGNIMMUTABLE",
									"source": 6,
									"value": "1097"
								},
								{
									"begin": 250,
									"end": 3574,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 250,
									"end": 3574,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 250,
									"end": 3574,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122046cb05f01b7d3a9978627e10109b2fbc3563290bca873522c6ddfb15b2d95cf064736f6c63430007060033",
									".code": [
										{
											"begin": 250,
											"end": 3574,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "PUSH",
											"source": 6,
											"value": "85DD19C0"
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "PUSH",
											"source": 6,
											"value": "A4C01502"
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "PUSH",
											"source": 6,
											"value": "A4C01502"
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "PUSH",
											"source": 6,
											"value": "EB01F149"
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "PUSH",
											"source": 6,
											"value": "EB7E2856"
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "PUSH",
											"source": 6,
											"value": "85DD19C0"
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "PUSH",
											"source": 6,
											"value": "9CD56D03"
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "PUSH",
											"source": 6,
											"value": "551512DE"
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "PUSH",
											"source": 6,
											"value": "551512DE"
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "PUSH",
											"source": 6,
											"value": "76AABEF4"
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "PUSH",
											"source": 6,
											"value": "814D2832"
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "PUSH",
											"source": 6,
											"value": "26224C64"
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "PUSH",
											"source": 6,
											"value": "34D1ADB5"
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "PUSH",
											"source": 6,
											"value": "522E1177"
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 250,
											"end": 3574,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3571,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 3252,
											"end": 3571,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3571,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3252,
											"end": 3571,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3252,
											"end": 3571,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3571,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3571,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3571,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3252,
											"end": 3571,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3571,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3571,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3571,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 3252,
											"end": 3571,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3571,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3252,
											"end": 3571,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3571,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3571,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 3252,
											"end": 3571,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3571,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3571,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3571,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3571,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3571,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3571,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3571,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3252,
											"end": 3571,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3571,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3571,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3252,
											"end": 3571,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3571,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3571,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3571,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3571,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3571,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3571,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3571,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3571,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 3252,
											"end": 3571,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3252,
											"end": 3571,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3252,
											"end": 3571,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3571,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3252,
											"end": 3571,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3571,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3571,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3571,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3571,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3571,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3252,
											"end": 3571,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3571,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3571,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3571,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3571,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3252,
											"end": 3571,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3571,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3571,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3571,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3571,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3252,
											"end": 3571,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3571,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3571,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3571,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3571,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3571,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3571,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3252,
											"end": 3571,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3571,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3571,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3571,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3571,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3571,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3091,
											"end": 3246,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3091,
											"end": 3246,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3091,
											"end": 3246,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 3091,
											"end": 3246,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3091,
											"end": 3246,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3091,
											"end": 3246,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3091,
											"end": 3246,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3091,
											"end": 3246,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3091,
											"end": 3246,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3091,
											"end": 3246,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3091,
											"end": 3246,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3091,
											"end": 3246,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3091,
											"end": 3246,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3091,
											"end": 3246,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3091,
											"end": 3246,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3091,
											"end": 3246,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3091,
											"end": 3246,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3091,
											"end": 3246,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3091,
											"end": 3246,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3091,
											"end": 3246,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3091,
											"end": 3246,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3091,
											"end": 3246,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3091,
											"end": 3246,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3091,
											"end": 3246,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 3091,
											"end": 3246,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3091,
											"end": 3246,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3091,
											"end": 3246,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3091,
											"end": 3246,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3091,
											"end": 3246,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3091,
											"end": 3246,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3091,
											"end": 3246,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3091,
											"end": 3246,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3091,
											"end": 3246,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3091,
											"end": 3246,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3091,
											"end": 3246,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 3091,
											"end": 3246,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3091,
											"end": 3246,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 3091,
											"end": 3246,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3091,
											"end": 3246,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3091,
											"end": 3246,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3091,
											"end": 3246,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3091,
											"end": 3246,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3091,
											"end": 3246,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3091,
											"end": 3246,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3091,
											"end": 3246,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3091,
											"end": 3246,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3091,
											"end": 3246,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3091,
											"end": 3246,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3091,
											"end": 3246,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3091,
											"end": 3246,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3091,
											"end": 3246,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3091,
											"end": 3246,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3091,
											"end": 3246,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3091,
											"end": 3246,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3091,
											"end": 3246,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3091,
											"end": 3246,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2399,
											"end": 2511,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 2399,
											"end": 2511,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2399,
											"end": 2511,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 2399,
											"end": 2511,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 2399,
											"end": 2511,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2399,
											"end": 2511,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 2399,
											"end": 2511,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2399,
											"end": 2511,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2399,
											"end": 2511,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2399,
											"end": 2511,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2399,
											"end": 2511,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2399,
											"end": 2511,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2399,
											"end": 2511,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2399,
											"end": 2511,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2399,
											"end": 2511,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2399,
											"end": 2511,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2399,
											"end": 2511,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2399,
											"end": 2511,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2399,
											"end": 2511,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2399,
											"end": 2511,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2399,
											"end": 2511,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2399,
											"end": 2511,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2399,
											"end": 2511,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2399,
											"end": 2511,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2399,
											"end": 2511,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2399,
											"end": 2511,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2399,
											"end": 2511,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1979,
											"end": 2263,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1979,
											"end": 2263,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1979,
											"end": 2263,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 1979,
											"end": 2263,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1979,
											"end": 2263,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1979,
											"end": 2263,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1979,
											"end": 2263,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1979,
											"end": 2263,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1979,
											"end": 2263,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1979,
											"end": 2263,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1979,
											"end": 2263,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1979,
											"end": 2263,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 1979,
											"end": 2263,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1979,
											"end": 2263,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1979,
											"end": 2263,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1979,
											"end": 2263,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1979,
											"end": 2263,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 1979,
											"end": 2263,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1979,
											"end": 2263,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1979,
											"end": 2263,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1979,
											"end": 2263,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1979,
											"end": 2263,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1979,
											"end": 2263,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1979,
											"end": 2263,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1979,
											"end": 2263,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1979,
											"end": 2263,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1979,
											"end": 2263,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1979,
											"end": 2263,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1979,
											"end": 2263,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1979,
											"end": 2263,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1979,
											"end": 2263,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1979,
											"end": 2263,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1979,
											"end": 2263,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1979,
											"end": 2263,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1979,
											"end": 2263,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1979,
											"end": 2263,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1979,
											"end": 2263,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1979,
											"end": 2263,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1979,
											"end": 2263,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1979,
											"end": 2263,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1979,
											"end": 2263,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1979,
											"end": 2263,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1979,
											"end": 2263,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1979,
											"end": 2263,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1979,
											"end": 2263,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1979,
											"end": 2263,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1979,
											"end": 2263,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1979,
											"end": 2263,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1979,
											"end": 2263,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1979,
											"end": 2263,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1979,
											"end": 2263,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1979,
											"end": 2263,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1979,
											"end": 2263,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1979,
											"end": 2263,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1979,
											"end": 2263,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1979,
											"end": 2263,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1979,
											"end": 2263,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 1979,
											"end": 2263,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1979,
											"end": 2263,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 1979,
											"end": 2263,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1979,
											"end": 2263,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1700,
											"end": 1845,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1700,
											"end": 1845,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1700,
											"end": 1845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1700,
											"end": 1845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1700,
											"end": 1845,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1700,
											"end": 1845,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1700,
											"end": 1845,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1700,
											"end": 1845,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 483,
											"end": 520,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 483,
											"end": 520,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 483,
											"end": 520,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 483,
											"end": 520,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 483,
											"end": 520,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 483,
											"end": 520,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 483,
											"end": 520,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 483,
											"end": 520,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 483,
											"end": 520,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 483,
											"end": 520,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 483,
											"end": 520,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 483,
											"end": 520,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 483,
											"end": 520,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 483,
											"end": 520,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 483,
											"end": 520,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 483,
											"end": 520,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 483,
											"end": 520,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 483,
											"end": 520,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 483,
											"end": 520,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 483,
											"end": 520,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 483,
											"end": 520,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 483,
											"end": 520,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 483,
											"end": 520,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 483,
											"end": 520,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 483,
											"end": 520,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2732,
											"end": 2900,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 2732,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2732,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 2732,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 2732,
											"end": 2900,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2732,
											"end": 2900,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 2732,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2732,
											"end": 2900,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2732,
											"end": 2900,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2732,
											"end": 2900,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2732,
											"end": 2900,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2732,
											"end": 2900,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2732,
											"end": 2900,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2732,
											"end": 2900,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2732,
											"end": 2900,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2732,
											"end": 2900,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2732,
											"end": 2900,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2732,
											"end": 2900,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2732,
											"end": 2900,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2732,
											"end": 2900,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2732,
											"end": 2900,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2732,
											"end": 2900,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2732,
											"end": 2900,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2732,
											"end": 2900,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2732,
											"end": 2900,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1396,
											"end": 1973,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 1396,
											"end": 1973,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1396,
											"end": 1973,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 1396,
											"end": 1973,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1396,
											"end": 1973,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1396,
											"end": 1973,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1396,
											"end": 1973,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1396,
											"end": 1973,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1396,
											"end": 1973,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1396,
											"end": 1973,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1396,
											"end": 1973,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1396,
											"end": 1973,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 1396,
											"end": 1973,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1396,
											"end": 1973,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1396,
											"end": 1973,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1396,
											"end": 1973,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1396,
											"end": 1973,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 1396,
											"end": 1973,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1396,
											"end": 1973,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1396,
											"end": 1973,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1396,
											"end": 1973,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1396,
											"end": 1973,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1396,
											"end": 1973,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1396,
											"end": 1973,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1396,
											"end": 1973,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1396,
											"end": 1973,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1396,
											"end": 1973,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1396,
											"end": 1973,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1396,
											"end": 1973,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1396,
											"end": 1973,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1396,
											"end": 1973,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1396,
											"end": 1973,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1396,
											"end": 1973,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1396,
											"end": 1973,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1396,
											"end": 1973,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1396,
											"end": 1973,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1396,
											"end": 1973,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1396,
											"end": 1973,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1396,
											"end": 1973,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1396,
											"end": 1973,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1396,
											"end": 1973,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1396,
											"end": 1973,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1396,
											"end": 1973,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1396,
											"end": 1973,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1396,
											"end": 1973,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1396,
											"end": 1973,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 1396,
											"end": 1973,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1396,
											"end": 1973,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 1396,
											"end": 1973,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1396,
											"end": 1973,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1396,
											"end": 1973,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1396,
											"end": 1973,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1396,
											"end": 1973,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1396,
											"end": 1973,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1396,
											"end": 1973,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1396,
											"end": 1973,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1396,
											"end": 1973,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1396,
											"end": 1973,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1396,
											"end": 1973,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1396,
											"end": 1973,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1396,
											"end": 1973,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1396,
											"end": 1973,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1396,
											"end": 1973,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1396,
											"end": 1973,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1396,
											"end": 1973,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1396,
											"end": 1973,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1396,
											"end": 1973,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1068,
											"end": 1153,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1068,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1068,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1068,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1068,
											"end": 1153,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1068,
											"end": 1153,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1068,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1068,
											"end": 1153,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1068,
											"end": 1153,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1068,
											"end": 1153,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1068,
											"end": 1153,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1068,
											"end": 1153,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1068,
											"end": 1153,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1068,
											"end": 1153,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1068,
											"end": 1153,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1068,
											"end": 1153,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1068,
											"end": 1153,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1068,
											"end": 1153,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1068,
											"end": 1153,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1068,
											"end": 1153,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1068,
											"end": 1153,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1068,
											"end": 1153,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1068,
											"end": 1153,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1068,
											"end": 1153,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1068,
											"end": 1153,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1068,
											"end": 1153,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1068,
											"end": 1153,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 526,
											"end": 563,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 526,
											"end": 563,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 526,
											"end": 563,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 526,
											"end": 563,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 526,
											"end": 563,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 526,
											"end": 563,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 526,
											"end": 563,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 526,
											"end": 563,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 526,
											"end": 563,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 526,
											"end": 563,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 526,
											"end": 563,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 526,
											"end": 563,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 526,
											"end": 563,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 526,
											"end": 563,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 526,
											"end": 563,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 526,
											"end": 563,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 526,
											"end": 563,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 526,
											"end": 563,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 526,
											"end": 563,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 526,
											"end": 563,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 526,
											"end": 563,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 526,
											"end": 563,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 526,
											"end": 563,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 526,
											"end": 563,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 526,
											"end": 563,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2699,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 2517,
											"end": 2699,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2699,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 2517,
											"end": 2699,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 2517,
											"end": 2699,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2517,
											"end": 2699,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 2517,
											"end": 2699,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2699,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2517,
											"end": 2699,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2699,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2699,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2699,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2699,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2699,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2517,
											"end": 2699,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2699,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2699,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2699,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2699,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2517,
											"end": 2699,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2699,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2699,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2699,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2699,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2699,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2906,
											"end": 3085,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 2906,
											"end": 3085,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2906,
											"end": 3085,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 2906,
											"end": 3085,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 2906,
											"end": 3085,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2906,
											"end": 3085,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 2906,
											"end": 3085,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2906,
											"end": 3085,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2906,
											"end": 3085,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2906,
											"end": 3085,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2906,
											"end": 3085,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2906,
											"end": 3085,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2906,
											"end": 3085,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2906,
											"end": 3085,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2906,
											"end": 3085,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2906,
											"end": 3085,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2906,
											"end": 3085,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2906,
											"end": 3085,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2906,
											"end": 3085,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2906,
											"end": 3085,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2906,
											"end": 3085,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2906,
											"end": 3085,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2906,
											"end": 3085,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2906,
											"end": 3085,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2906,
											"end": 3085,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2269,
											"end": 2393,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 2269,
											"end": 2393,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2269,
											"end": 2393,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 2269,
											"end": 2393,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 2269,
											"end": 2393,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2269,
											"end": 2393,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 2269,
											"end": 2393,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2269,
											"end": 2393,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2269,
											"end": 2393,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2269,
											"end": 2393,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2269,
											"end": 2393,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2269,
											"end": 2393,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2269,
											"end": 2393,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2269,
											"end": 2393,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2269,
											"end": 2393,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2269,
											"end": 2393,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2269,
											"end": 2393,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2269,
											"end": 2393,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2269,
											"end": 2393,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2269,
											"end": 2393,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2269,
											"end": 2393,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2269,
											"end": 2393,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2269,
											"end": 2393,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2269,
											"end": 2393,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2269,
											"end": 2393,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1994,
											"end": 2234,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1994,
											"end": 2234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1994,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1994,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1994,
											"end": 2234,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1994,
											"end": 2234,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1994,
											"end": 2234,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1994,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1994,
											"end": 2234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1994,
											"end": 2234,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1994,
											"end": 2234,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1994,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1994,
											"end": 2234,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1994,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1994,
											"end": 2234,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1994,
											"end": 2234,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1994,
											"end": 2234,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1994,
											"end": 2234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1994,
											"end": 2234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1994,
											"end": 2234,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1994,
											"end": 2234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1994,
											"end": 2234,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1994,
											"end": 2234,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1994,
											"end": 2234,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1994,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1994,
											"end": 2234,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1994,
											"end": 2234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1994,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1994,
											"end": 2234,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1994,
											"end": 2234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1994,
											"end": 2234,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1994,
											"end": 2234,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1994,
											"end": 2234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1994,
											"end": 2234,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1994,
											"end": 2234,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1994,
											"end": 2234,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1994,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1994,
											"end": 2234,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1994,
											"end": 2234,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1994,
											"end": 2234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1994,
											"end": 2234,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3252,
											"end": 3571,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 3252,
											"end": 3571,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3308,
											"end": 3327,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3329,
											"end": 3346,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3348,
											"end": 3370,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3396,
											"end": 3400,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 3396,
											"end": 3400,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3396,
											"end": 3400,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3396,
											"end": 3400,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3396,
											"end": 3400,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3396,
											"end": 3400,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3396,
											"end": 3400,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3396,
											"end": 3400,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3396,
											"end": 3400,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3396,
											"end": 3400,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3396,
											"end": 3400,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3396,
											"end": 3410,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3396,
											"end": 3410,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3396,
											"end": 3410,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 3411,
											"end": 3415,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3396,
											"end": 3416,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3396,
											"end": 3416,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3396,
											"end": 3416,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3396,
											"end": 3416,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3396,
											"end": 3416,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3396,
											"end": 3416,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 3396,
											"end": 3416,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 3396,
											"end": 3416,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3396,
											"end": 3416,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3396,
											"end": 3416,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3396,
											"end": 3416,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3396,
											"end": 3416,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3396,
											"end": 3416,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3396,
											"end": 3416,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3396,
											"end": 3416,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3396,
											"end": 3416,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3396,
											"end": 3416,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3396,
											"end": 3416,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3396,
											"end": 3416,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3396,
											"end": 3416,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3396,
											"end": 3416,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3396,
											"end": 3416,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3396,
											"end": 3416,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3396,
											"end": 3416,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3396,
											"end": 3416,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3396,
											"end": 3416,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3396,
											"end": 3416,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3396,
											"end": 3416,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3396,
											"end": 3416,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3396,
											"end": 3416,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3396,
											"end": 3416,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3396,
											"end": 3416,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 3396,
											"end": 3416,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3396,
											"end": 3416,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3396,
											"end": 3416,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3396,
											"end": 3416,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 3396,
											"end": 3416,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3396,
											"end": 3416,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3396,
											"end": 3416,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3396,
											"end": 3416,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3396,
											"end": 3416,
											"name": "tag",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 3396,
											"end": 3416,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3396,
											"end": 3416,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3396,
											"end": 3416,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 3396,
											"end": 3416,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 3396,
											"end": 3416,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3396,
											"end": 3416,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3396,
											"end": 3416,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3396,
											"end": 3416,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 3396,
											"end": 3416,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3396,
											"end": 3416,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3396,
											"end": 3416,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3396,
											"end": 3416,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3396,
											"end": 3416,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 3396,
											"end": 3416,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3396,
											"end": 3416,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3396,
											"end": 3416,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3396,
											"end": 3416,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 3396,
											"end": 3416,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3396,
											"end": 3416,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3396,
											"end": 3416,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3396,
											"end": 3416,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3396,
											"end": 3416,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3396,
											"end": 3416,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3396,
											"end": 3416,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3396,
											"end": 3416,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3396,
											"end": 3416,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3396,
											"end": 3416,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3396,
											"end": 3416,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3396,
											"end": 3416,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3396,
											"end": 3416,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 3396,
											"end": 3416,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3396,
											"end": 3416,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3396,
											"end": 3416,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3396,
											"end": 3416,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3396,
											"end": 3416,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 3396,
											"end": 3416,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3396,
											"end": 3416,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3396,
											"end": 3416,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3396,
											"end": 3416,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3396,
											"end": 3416,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3396,
											"end": 3416,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3396,
											"end": 3416,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3396,
											"end": 3416,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3396,
											"end": 3416,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3396,
											"end": 3416,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3396,
											"end": 3416,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3396,
											"end": 3416,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3396,
											"end": 3416,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3396,
											"end": 3416,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3396,
											"end": 3416,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3396,
											"end": 3416,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3396,
											"end": 3416,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3382,
											"end": 3416,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3382,
											"end": 3416,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3443,
											"end": 3488,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 423,
											"end": 427,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 3443,
											"end": 3473,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 3459,
											"end": 3472,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3459,
											"end": 3470,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 3459,
											"end": 3472,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3459,
											"end": 3472,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3459,
											"end": 3472,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3443,
											"end": 3454,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3443,
											"end": 3458,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 3443,
											"end": 3458,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3443,
											"end": 3473,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3443,
											"end": 3473,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3443,
											"end": 3473,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3443,
											"end": 3473,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3443,
											"end": 3473,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3443,
											"end": 3473,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 3443,
											"end": 3473,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3443,
											"end": 3477,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 3443,
											"end": 3477,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3443,
											"end": 3488,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3443,
											"end": 3488,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3443,
											"end": 3488,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3443,
											"end": 3488,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3443,
											"end": 3488,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3443,
											"end": 3488,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 3443,
											"end": 3488,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3426,
											"end": 3488,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3426,
											"end": 3488,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3510,
											"end": 3564,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 423,
											"end": 427,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 3510,
											"end": 3549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 3529,
											"end": 3548,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 3529,
											"end": 3546,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 3529,
											"end": 3548,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3529,
											"end": 3548,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 3529,
											"end": 3548,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3510,
											"end": 3524,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3510,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 3510,
											"end": 3528,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3510,
											"end": 3549,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3510,
											"end": 3549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3510,
											"end": 3549,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3510,
											"end": 3549,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3510,
											"end": 3549,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3510,
											"end": 3549,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 3510,
											"end": 3549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3510,
											"end": 3553,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 3510,
											"end": 3553,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3510,
											"end": 3564,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3510,
											"end": 3564,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3510,
											"end": 3564,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3510,
											"end": 3564,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3510,
											"end": 3564,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3510,
											"end": 3564,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 3510,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3498,
											"end": 3564,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3498,
											"end": 3564,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3571,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3571,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3571,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3571,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3571,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3571,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3091,
											"end": 3246,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 3091,
											"end": 3246,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3152,
											"end": 3170,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3195,
											"end": 3239,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 423,
											"end": 427,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 3195,
											"end": 3224,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 3210,
											"end": 3223,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 3210,
											"end": 3221,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 3210,
											"end": 3223,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3210,
											"end": 3223,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 3210,
											"end": 3223,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3195,
											"end": 3205,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3195,
											"end": 3209,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 3195,
											"end": 3209,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3195,
											"end": 3224,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3195,
											"end": 3224,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3195,
											"end": 3224,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3195,
											"end": 3224,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3195,
											"end": 3224,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3195,
											"end": 3224,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 3195,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3195,
											"end": 3228,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 3195,
											"end": 3228,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3195,
											"end": 3239,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3195,
											"end": 3239,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3195,
											"end": 3239,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3195,
											"end": 3239,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3195,
											"end": 3239,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3195,
											"end": 3239,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 3195,
											"end": 3239,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3182,
											"end": 3239,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3182,
											"end": 3239,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3091,
											"end": 3246,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3091,
											"end": 3246,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3091,
											"end": 3246,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3091,
											"end": 3246,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2399,
											"end": 2511,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 2399,
											"end": 2511,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2439,
											"end": 2454,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2492,
											"end": 2504,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "1099"
										},
										{
											"begin": 2479,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 2479,
											"end": 2486,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 2479,
											"end": 2488,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2479,
											"end": 2488,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 2479,
											"end": 2488,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2479,
											"end": 2504,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2479,
											"end": 2504,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2466,
											"end": 2504,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2466,
											"end": 2504,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2399,
											"end": 2511,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2399,
											"end": 2511,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1979,
											"end": 2263,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 1979,
											"end": 2263,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1291,
											"end": 1303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1291,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1291,
											"end": 1303,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1291,
											"end": 1303,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1291,
											"end": 1303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1280,
											"end": 1303,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1280,
											"end": 1303,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1280,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1280,
											"end": 1285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1280,
											"end": 1287,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1280,
											"end": 1287,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1280,
											"end": 1287,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1280,
											"end": 1303,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1280,
											"end": 1303,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1280,
											"end": 1303,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "PUSH",
											"source": 0,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2099,
											"end": 2100,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2085,
											"end": 2101,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2085,
											"end": 2101,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2085,
											"end": 2087,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2085,
											"end": 2101,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2085,
											"end": 2101,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2085,
											"end": 2101,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2085,
											"end": 2101,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "PUSH",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "PUSH data",
											"source": 6,
											"value": "F369DE33193FA9AD14F9BC77962CCC61DEA2AB7E55BABF0D95E6159628A429BD"
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "PUSH",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "CODECOPY",
											"source": 6
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2173,
											"end": 2203,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 2192,
											"end": 2194,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2196,
											"end": 2202,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2173,
											"end": 2178,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2173,
											"end": 2191,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2173,
											"end": 2191,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2173,
											"end": 2191,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 2173,
											"end": 2191,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2173,
											"end": 2203,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2173,
											"end": 2203,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2173,
											"end": 2203,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2173,
											"end": 2203,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2173,
											"end": 2203,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2173,
											"end": 2203,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2173,
											"end": 2203,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 2173,
											"end": 2203,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2218,
											"end": 2256,
											"name": "PUSH",
											"source": 6,
											"value": "3AB9DB27A4CDD8C603A752B62D5FBD93B4B3509FE2596708E9688E42BBAC3576"
										},
										{
											"begin": 2238,
											"end": 2243,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2245,
											"end": 2251,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2253,
											"end": 2255,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2218,
											"end": 2256,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2218,
											"end": 2256,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2218,
											"end": 2256,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2218,
											"end": 2256,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2218,
											"end": 2256,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2218,
											"end": 2256,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2218,
											"end": 2256,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2218,
											"end": 2256,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2218,
											"end": 2256,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2218,
											"end": 2256,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2218,
											"end": 2256,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2218,
											"end": 2256,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2218,
											"end": 2256,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2218,
											"end": 2256,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2218,
											"end": 2256,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2218,
											"end": 2256,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2218,
											"end": 2256,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2218,
											"end": 2256,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2218,
											"end": 2256,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2218,
											"end": 2256,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2218,
											"end": 2256,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2218,
											"end": 2256,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2218,
											"end": 2256,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2218,
											"end": 2256,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2218,
											"end": 2256,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2218,
											"end": 2256,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2218,
											"end": 2256,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2218,
											"end": 2256,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2218,
											"end": 2256,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2218,
											"end": 2256,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2218,
											"end": 2256,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2218,
											"end": 2256,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2218,
											"end": 2256,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2218,
											"end": 2256,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": 1979,
											"end": 2263,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1979,
											"end": 2263,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1979,
											"end": 2263,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1979,
											"end": 2263,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1700,
											"end": 1845,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1700,
											"end": 1845,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1291,
											"end": 1303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1291,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1291,
											"end": 1303,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1291,
											"end": 1303,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1291,
											"end": 1303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1280,
											"end": 1303,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1280,
											"end": 1303,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1280,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1280,
											"end": 1285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1280,
											"end": 1287,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1280,
											"end": 1287,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1280,
											"end": 1287,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1280,
											"end": 1303,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1280,
											"end": 1303,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1280,
											"end": 1303,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "PUSH",
											"source": 0,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1806,
											"end": 1807,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1769,
											"end": 1809,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1769,
											"end": 1809,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1790,
											"end": 1796,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1790,
											"end": 1796,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1790,
											"end": 1796,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1790,
											"end": 1796,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1790,
											"end": 1796,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1790,
											"end": 1796,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1790,
											"end": 1796,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1790,
											"end": 1796,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1790,
											"end": 1796,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1790,
											"end": 1796,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1769,
											"end": 1809,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1769,
											"end": 1809,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1769,
											"end": 1809,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1769,
											"end": 1809,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1769,
											"end": 1809,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1769,
											"end": 1809,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1769,
											"end": 1809,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1769,
											"end": 1809,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1769,
											"end": 1809,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1769,
											"end": 1809,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1769,
											"end": 1809,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1769,
											"end": 1809,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 1836,
											"end": 1837,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1819,
											"end": 1825,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1819,
											"end": 1825,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1819,
											"end": 1838,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1819,
											"end": 1838,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1819,
											"end": 1838,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1819,
											"end": 1838,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1819,
											"end": 1838,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1819,
											"end": 1838,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1819,
											"end": 1838,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1819,
											"end": 1838,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1819,
											"end": 1838,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1819,
											"end": 1838,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1819,
											"end": 1838,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1819,
											"end": 1838,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1819,
											"end": 1838,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1819,
											"end": 1838,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1819,
											"end": 1838,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1819,
											"end": 1838,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1819,
											"end": 1838,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1819,
											"end": 1838,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1700,
											"end": 1845,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 483,
											"end": 520,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 483,
											"end": 520,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 483,
											"end": 520,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "1097"
										},
										{
											"begin": 483,
											"end": 520,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 483,
											"end": 520,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2732,
											"end": 2900,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 2732,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2792,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2807,
											"end": 2817,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 2807,
											"end": 2815,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 2807,
											"end": 2817,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2807,
											"end": 2817,
											"name": "tag",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 2807,
											"end": 2817,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2804,
											"end": 2835,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2804,
											"end": 2835,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 2804,
											"end": 2835,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 423,
											"end": 427,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2819,
											"end": 2835,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2819,
											"end": 2835,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2819,
											"end": 2835,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 2819,
											"end": 2835,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2804,
											"end": 2835,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 2804,
											"end": 2835,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2851,
											"end": 2893,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 2880,
											"end": 2892,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "1099"
										},
										{
											"begin": 2851,
											"end": 2875,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 423,
											"end": 427,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2851,
											"end": 2860,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 2851,
											"end": 2858,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 2851,
											"end": 2860,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2851,
											"end": 2860,
											"name": "tag",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 2851,
											"end": 2860,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2851,
											"end": 2864,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 2851,
											"end": 2864,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2851,
											"end": 2875,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2851,
											"end": 2875,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2851,
											"end": 2875,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2851,
											"end": 2875,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2851,
											"end": 2875,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2851,
											"end": 2875,
											"name": "tag",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 2851,
											"end": 2875,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2851,
											"end": 2879,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 2851,
											"end": 2879,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2851,
											"end": 2893,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2851,
											"end": 2893,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2851,
											"end": 2893,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2851,
											"end": 2893,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2851,
											"end": 2893,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2851,
											"end": 2893,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 2851,
											"end": 2893,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2845,
											"end": 2893,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2845,
											"end": 2893,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2732,
											"end": 2900,
											"name": "tag",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 2732,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2732,
											"end": 2900,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2732,
											"end": 2900,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1396,
											"end": 1973,
											"name": "tag",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 1396,
											"end": 1973,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1464,
											"end": 1482,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1516,
											"end": 1520,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1516,
											"end": 1520,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1516,
											"end": 1520,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1516,
											"end": 1520,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1516,
											"end": 1520,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1516,
											"end": 1520,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1516,
											"end": 1520,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1516,
											"end": 1520,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1516,
											"end": 1520,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1516,
											"end": 1520,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1516,
											"end": 1520,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1516,
											"end": 1530,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1516,
											"end": 1530,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1516,
											"end": 1530,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 1531,
											"end": 1541,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "tag",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "tag",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "tag",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1502,
											"end": 1512,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1502,
											"end": 1542,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1502,
											"end": 1542,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1593,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 1494,
											"end": 1593,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1593,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1494,
											"end": 1593,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1593,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1494,
											"end": 1593,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1593,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1593,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1494,
											"end": 1593,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1593,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1593,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1593,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1494,
											"end": 1593,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1593,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1593,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1593,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1593,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1593,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1593,
											"name": "PUSH",
											"source": 6,
											"value": "2E"
										},
										{
											"begin": 1494,
											"end": 1593,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1593,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1593,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1494,
											"end": 1593,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1593,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1593,
											"name": "PUSH data",
											"source": 6,
											"value": "B669E18AFDE06DD7C948323CC96D872C8F871B51C6D9576E3A7C68B3CF92211"
										},
										{
											"begin": 1494,
											"end": 1593,
											"name": "PUSH",
											"source": 6,
											"value": "2E"
										},
										{
											"begin": 1494,
											"end": 1593,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1593,
											"name": "CODECOPY",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1593,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1494,
											"end": 1593,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1593,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1593,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1593,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1593,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1494,
											"end": 1593,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1593,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1593,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1593,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1593,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1593,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1593,
											"name": "tag",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 1494,
											"end": 1593,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1625,
											"end": 1629,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1625,
											"end": 1629,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1625,
											"end": 1629,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1625,
											"end": 1629,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1625,
											"end": 1629,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1625,
											"end": 1629,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1625,
											"end": 1629,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1625,
											"end": 1629,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1625,
											"end": 1629,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1625,
											"end": 1629,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1625,
											"end": 1629,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1625,
											"end": 1639,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1625,
											"end": 1639,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1625,
											"end": 1639,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 1640,
											"end": 1650,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1660,
											"end": 1664,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1625,
											"end": 1666,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1611,
											"end": 1621,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1611,
											"end": 1666,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1611,
											"end": 1666,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1603,
											"end": 1718,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 1603,
											"end": 1718,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1603,
											"end": 1718,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1603,
											"end": 1718,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1603,
											"end": 1718,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1603,
											"end": 1718,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1603,
											"end": 1718,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1603,
											"end": 1718,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1603,
											"end": 1718,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1603,
											"end": 1718,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1603,
											"end": 1718,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1603,
											"end": 1718,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1603,
											"end": 1718,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1603,
											"end": 1718,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1603,
											"end": 1718,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1603,
											"end": 1718,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1603,
											"end": 1718,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1603,
											"end": 1718,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1603,
											"end": 1718,
											"name": "PUSH",
											"source": 6,
											"value": "2F"
										},
										{
											"begin": 1603,
											"end": 1718,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1603,
											"end": 1718,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1603,
											"end": 1718,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1603,
											"end": 1718,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1603,
											"end": 1718,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1603,
											"end": 1718,
											"name": "PUSH data",
											"source": 6,
											"value": "C390CDC2DAD4AE97EBF57885FF8329C5BA9DB4090E4AE8E26C397B65531F1FEE"
										},
										{
											"begin": 1603,
											"end": 1718,
											"name": "PUSH",
											"source": 6,
											"value": "2F"
										},
										{
											"begin": 1603,
											"end": 1718,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1603,
											"end": 1718,
											"name": "CODECOPY",
											"source": 6
										},
										{
											"begin": 1603,
											"end": 1718,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1603,
											"end": 1718,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1603,
											"end": 1718,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1603,
											"end": 1718,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1603,
											"end": 1718,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1603,
											"end": 1718,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1603,
											"end": 1718,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1603,
											"end": 1718,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1603,
											"end": 1718,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1603,
											"end": 1718,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1603,
											"end": 1718,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1603,
											"end": 1718,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1603,
											"end": 1718,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 1603,
											"end": 1718,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1728,
											"end": 1732,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1728,
											"end": 1732,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1728,
											"end": 1732,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1728,
											"end": 1732,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1728,
											"end": 1732,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1728,
											"end": 1732,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1728,
											"end": 1732,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1728,
											"end": 1732,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1728,
											"end": 1732,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1728,
											"end": 1732,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1728,
											"end": 1732,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1728,
											"end": 1745,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1728,
											"end": 1745,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1728,
											"end": 1745,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 1746,
											"end": 1756,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1766,
											"end": 1770,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 1773,
											"end": 1783,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "tag",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "tag",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1728,
											"end": 1784,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1794,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1794,
											"end": 1798,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1798,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1798,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1794,
											"end": 1798,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1798,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1798,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1794,
											"end": 1798,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1803,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1794,
											"end": 1803,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1803,
											"name": "PUSH",
											"source": 6,
											"value": "42966C68"
										},
										{
											"begin": 1804,
											"end": 1814,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1815,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1794,
											"end": 1815,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1815,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1815,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1794,
											"end": 1815,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1815,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1794,
											"end": 1815,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1815,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1815,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1815,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1794,
											"end": 1815,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1815,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1815,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1815,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1815,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1815,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1794,
											"end": 1815,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1815,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1815,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1815,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1815,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1794,
											"end": 1815,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1794,
											"end": 1815,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1815,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1815,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1815,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1815,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1815,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1794,
											"end": 1815,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1815,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1815,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1815,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1815,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1815,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1815,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 1794,
											"end": 1815,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1815,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1794,
											"end": 1815,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1815,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1815,
											"name": "tag",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 1794,
											"end": 1815,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1815,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1815,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1815,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1815,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1815,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1815,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1815,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 1794,
											"end": 1815,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1815,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1815,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1794,
											"end": 1815,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1815,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1815,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1815,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1794,
											"end": 1815,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1815,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 1794,
											"end": 1815,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1815,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1815,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1815,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1815,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1838,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 1850,
											"end": 1860,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1838,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 1838,
											"end": 1861,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1838,
											"end": 1861,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 1838,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1825,
											"end": 1861,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1825,
											"end": 1861,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1877,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1871,
											"end": 1877,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1871,
											"end": 1877,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1877,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1877,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1877,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1871,
											"end": 1877,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1877,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1877,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1877,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1871,
											"end": 1877,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1886,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1871,
											"end": 1886,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1886,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 1887,
											"end": 1889,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1891,
											"end": 1901,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1902,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "PUSH",
											"source": 6,
											"value": "6924DE782C8B5F24144A945D93C937E0F7AAC91E3A891105DCA3C4536F525529"
										},
										{
											"begin": 1927,
											"end": 1937,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1939,
											"end": 1941,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1943,
											"end": 1953,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1955,
											"end": 1965,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": 1396,
											"end": 1973,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1396,
											"end": 1973,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1396,
											"end": 1973,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1396,
											"end": 1973,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1396,
											"end": 1973,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1068,
											"end": 1153,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1068,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1114,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1140,
											"end": 1146,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1140,
											"end": 1146,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1140,
											"end": 1146,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1140,
											"end": 1146,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1140,
											"end": 1146,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1140,
											"end": 1146,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1140,
											"end": 1146,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1140,
											"end": 1146,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1140,
											"end": 1146,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1140,
											"end": 1146,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1140,
											"end": 1146,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1146,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1146,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1068,
											"end": 1153,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1068,
											"end": 1153,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 526,
											"end": 563,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 526,
											"end": 563,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 526,
											"end": 563,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "1099"
										},
										{
											"begin": 526,
											"end": 563,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 526,
											"end": 563,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2517,
											"end": 2699,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 2517,
											"end": 2699,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2556,
											"end": 2571,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2605,
											"end": 2617,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "1097"
										},
										{
											"begin": 2586,
											"end": 2601,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 2586,
											"end": 2617,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2583,
											"end": 2627,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 2583,
											"end": 2627,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2626,
											"end": 2627,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2619,
											"end": 2627,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2619,
											"end": 2627,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2619,
											"end": 2627,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 2619,
											"end": 2627,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2583,
											"end": 2627,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 2583,
											"end": 2627,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2647,
											"end": 2692,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 2685,
											"end": 2691,
											"name": "PUSH",
											"source": 6,
											"value": "15180"
										},
										{
											"begin": 2647,
											"end": 2680,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 2667,
											"end": 2679,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "1097"
										},
										{
											"begin": 2647,
											"end": 2662,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 2647,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 2647,
											"end": 2666,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2647,
											"end": 2680,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2647,
											"end": 2680,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2647,
											"end": 2680,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2647,
											"end": 2680,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2647,
											"end": 2680,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2647,
											"end": 2680,
											"name": "tag",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 2647,
											"end": 2680,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2647,
											"end": 2684,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 2647,
											"end": 2684,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2647,
											"end": 2692,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2647,
											"end": 2692,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2647,
											"end": 2692,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2647,
											"end": 2692,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2647,
											"end": 2692,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2647,
											"end": 2692,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 2647,
											"end": 2692,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2637,
											"end": 2692,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2637,
											"end": 2692,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2699,
											"name": "tag",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 2517,
											"end": 2699,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2699,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2699,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2906,
											"end": 3085,
											"name": "tag",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 2906,
											"end": 3085,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2949,
											"end": 2960,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2972,
											"end": 2992,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2995,
											"end": 2999,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2995,
											"end": 2999,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2995,
											"end": 2999,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2995,
											"end": 2999,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2995,
											"end": 2999,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2995,
											"end": 2999,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2995,
											"end": 2999,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2995,
											"end": 2999,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2995,
											"end": 2999,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2995,
											"end": 2999,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2995,
											"end": 2999,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2995,
											"end": 3011,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2995,
											"end": 3011,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2995,
											"end": 3011,
											"name": "PUSH",
											"source": 6,
											"value": "18160DDD"
										},
										{
											"begin": 2995,
											"end": 3013,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2995,
											"end": 3013,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2995,
											"end": 3013,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2995,
											"end": 3013,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2995,
											"end": 3013,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2995,
											"end": 3013,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 2995,
											"end": 3013,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 2995,
											"end": 3013,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2995,
											"end": 3013,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2995,
											"end": 3013,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2995,
											"end": 3013,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2995,
											"end": 3013,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2995,
											"end": 3013,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2995,
											"end": 3013,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2995,
											"end": 3013,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2995,
											"end": 3013,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2995,
											"end": 3013,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2995,
											"end": 3013,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2995,
											"end": 3013,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2995,
											"end": 3013,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2995,
											"end": 3013,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 2995,
											"end": 3013,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2995,
											"end": 3013,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2995,
											"end": 3013,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2995,
											"end": 3013,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 2995,
											"end": 3013,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2995,
											"end": 3013,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2995,
											"end": 3013,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2995,
											"end": 3013,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2995,
											"end": 3013,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 2995,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2995,
											"end": 3013,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2995,
											"end": 3013,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 2995,
											"end": 3013,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 2995,
											"end": 3013,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2995,
											"end": 3013,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2995,
											"end": 3013,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2995,
											"end": 3013,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 2995,
											"end": 3013,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2995,
											"end": 3013,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2995,
											"end": 3013,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2995,
											"end": 3013,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2995,
											"end": 3013,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 2995,
											"end": 3013,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2995,
											"end": 3013,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2995,
											"end": 3013,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2995,
											"end": 3013,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 2995,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2995,
											"end": 3013,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2995,
											"end": 3013,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2995,
											"end": 3013,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2995,
											"end": 3013,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2995,
											"end": 3013,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2995,
											"end": 3013,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2995,
											"end": 3013,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2995,
											"end": 3013,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2995,
											"end": 3013,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2995,
											"end": 3013,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2995,
											"end": 3013,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2995,
											"end": 3013,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 2995,
											"end": 3013,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2995,
											"end": 3013,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2995,
											"end": 3013,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2995,
											"end": 3013,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2995,
											"end": 3013,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 2995,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2995,
											"end": 3013,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2995,
											"end": 3013,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2995,
											"end": 3013,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2995,
											"end": 3013,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2995,
											"end": 3013,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2995,
											"end": 3013,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2995,
											"end": 3013,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2995,
											"end": 3013,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2995,
											"end": 3013,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2995,
											"end": 3013,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2995,
											"end": 3013,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2995,
											"end": 3013,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2995,
											"end": 3013,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2995,
											"end": 3013,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2995,
											"end": 3013,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2995,
											"end": 3013,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 3013,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 3013,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3029,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 3062,
											"end": 3077,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3029,
											"end": 3057,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 423,
											"end": 427,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 3029,
											"end": 3042,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 3029,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 3029,
											"end": 3042,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3029,
											"end": 3042,
											"name": "tag",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 3029,
											"end": 3042,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3029,
											"end": 3046,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 3029,
											"end": 3046,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3029,
											"end": 3057,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3029,
											"end": 3057,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3029,
											"end": 3057,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3029,
											"end": 3057,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3029,
											"end": 3057,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3029,
											"end": 3057,
											"name": "tag",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 3029,
											"end": 3057,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3029,
											"end": 3061,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 3029,
											"end": 3061,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3029,
											"end": 3078,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3029,
											"end": 3078,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3029,
											"end": 3078,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3029,
											"end": 3078,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3029,
											"end": 3078,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3029,
											"end": 3078,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 3029,
											"end": 3078,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3023,
											"end": 3078,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3023,
											"end": 3078,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2906,
											"end": 3085,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2906,
											"end": 3085,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2906,
											"end": 3085,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2269,
											"end": 2393,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 2269,
											"end": 2393,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2312,
											"end": 2330,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2355,
											"end": 2361,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2355,
											"end": 2361,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2355,
											"end": 2361,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2361,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2361,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2361,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2355,
											"end": 2361,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2361,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2361,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2361,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2355,
											"end": 2361,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2371,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2355,
											"end": 2371,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2371,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 2380,
											"end": 2384,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2386,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2355,
											"end": 2386,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2386,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2386,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2355,
											"end": 2386,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2386,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 2355,
											"end": 2386,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2386,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2386,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2386,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2355,
											"end": 2386,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2386,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2386,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2386,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2355,
											"end": 2386,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2386,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2386,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2386,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2355,
											"end": 2386,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2386,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2386,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2386,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2386,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2355,
											"end": 2386,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2355,
											"end": 2386,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2386,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2386,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2386,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2386,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2386,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2386,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2386,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2386,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2386,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2386,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2386,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 2355,
											"end": 2386,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2386,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2355,
											"end": 2386,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2386,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2386,
											"name": "tag",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 2355,
											"end": 2386,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2386,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2386,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2386,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2386,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2386,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2386,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2386,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 2355,
											"end": 2386,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2386,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2386,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2355,
											"end": 2386,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2386,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2386,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2386,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2355,
											"end": 2386,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2386,
											"name": "tag",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 2355,
											"end": 2386,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2386,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2386,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2386,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2386,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2386,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2355,
											"end": 2386,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2386,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2386,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2355,
											"end": 2386,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2386,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2386,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2386,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 2355,
											"end": 2386,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2386,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2355,
											"end": 2386,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2386,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2386,
											"name": "tag",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 2355,
											"end": 2386,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2386,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2386,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2386,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2386,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2386,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2386,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2386,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2386,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2355,
											"end": 2386,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2386,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2386,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2386,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2386,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2386,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2386,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2386,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2342,
											"end": 2386,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2342,
											"end": 2386,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2269,
											"end": 2393,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2269,
											"end": 2393,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1994,
											"end": 2234,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1994,
											"end": 2234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1291,
											"end": 1303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1291,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1291,
											"end": 1303,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1291,
											"end": 1303,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1291,
											"end": 1303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1280,
											"end": 1303,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1280,
											"end": 1303,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1280,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 1280,
											"end": 1285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1280,
											"end": 1287,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1280,
											"end": 1287,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 1280,
											"end": 1287,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1280,
											"end": 1303,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1280,
											"end": 1303,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1280,
											"end": 1303,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "PUSH",
											"source": 0,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2102,
											"end": 2103,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2082,
											"end": 2104,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2082,
											"end": 2104,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2082,
											"end": 2090,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2082,
											"end": 2104,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2082,
											"end": 2104,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2082,
											"end": 2104,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2082,
											"end": 2104,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2147,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 2074,
											"end": 2147,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2147,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2147,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2147,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2074,
											"end": 2147,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2147,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2147,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2074,
											"end": 2147,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2147,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2147,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2147,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2074,
											"end": 2147,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2147,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2147,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2147,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2147,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2147,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2147,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2074,
											"end": 2147,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2147,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2147,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2074,
											"end": 2147,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2147,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2147,
											"name": "PUSH data",
											"source": 0,
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 2074,
											"end": 2147,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2074,
											"end": 2147,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2147,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2147,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2147,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2147,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2147,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2147,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2147,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2147,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2147,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2147,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2147,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2147,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2147,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2147,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 2074,
											"end": 2147,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2191,
											"end": 2199,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2162,
											"end": 2200,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2162,
											"end": 2200,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2183,
											"end": 2189,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2183,
											"end": 2189,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2183,
											"end": 2189,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2183,
											"end": 2189,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2183,
											"end": 2189,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2183,
											"end": 2189,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2183,
											"end": 2189,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2183,
											"end": 2189,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2183,
											"end": 2189,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2183,
											"end": 2189,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2162,
											"end": 2200,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2162,
											"end": 2200,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2162,
											"end": 2200,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2162,
											"end": 2200,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2162,
											"end": 2200,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2162,
											"end": 2200,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2162,
											"end": 2200,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2162,
											"end": 2200,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2162,
											"end": 2200,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2162,
											"end": 2200,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2162,
											"end": 2200,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2162,
											"end": 2200,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2219,
											"end": 2227,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2210,
											"end": 2216,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2210,
											"end": 2216,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2210,
											"end": 2227,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2210,
											"end": 2227,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2210,
											"end": 2227,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2210,
											"end": 2227,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2210,
											"end": 2227,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2210,
											"end": 2227,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2210,
											"end": 2227,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2210,
											"end": 2227,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2210,
											"end": 2227,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2210,
											"end": 2227,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2210,
											"end": 2227,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2210,
											"end": 2227,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2210,
											"end": 2227,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2210,
											"end": 2227,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2210,
											"end": 2227,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2210,
											"end": 2227,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2210,
											"end": 2227,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2210,
											"end": 2227,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1994,
											"end": 2234,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1994,
											"end": 2234,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3530,
											"end": 3745,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 3530,
											"end": 3745,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3588,
											"end": 3595,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3616,
											"end": 3617,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3611,
											"end": 3612,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3611,
											"end": 3617,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3607,
											"end": 3627,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3607,
											"end": 3627,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 3607,
											"end": 3627,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3626,
											"end": 3627,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3619,
											"end": 3627,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3619,
											"end": 3627,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3619,
											"end": 3627,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 3619,
											"end": 3627,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3607,
											"end": 3627,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 3607,
											"end": 3627,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3637,
											"end": 3646,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3653,
											"end": 3654,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3649,
											"end": 3650,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3649,
											"end": 3654,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3637,
											"end": 3654,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3637,
											"end": 3654,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3681,
											"end": 3682,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3676,
											"end": 3677,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3672,
											"end": 3673,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3672,
											"end": 3677,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3672,
											"end": 3677,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 3672,
											"end": 3677,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3672,
											"end": 3677,
											"name": "INVALID",
											"source": 1
										},
										{
											"begin": 3672,
											"end": 3677,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 3672,
											"end": 3677,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3672,
											"end": 3677,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3672,
											"end": 3682,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3664,
											"end": 3720,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 3664,
											"end": 3720,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3664,
											"end": 3720,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3664,
											"end": 3720,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3664,
											"end": 3720,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3664,
											"end": 3720,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3664,
											"end": 3720,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3664,
											"end": 3720,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3664,
											"end": 3720,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3664,
											"end": 3720,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3664,
											"end": 3720,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3664,
											"end": 3720,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3664,
											"end": 3720,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3664,
											"end": 3720,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3664,
											"end": 3720,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3664,
											"end": 3720,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3664,
											"end": 3720,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3664,
											"end": 3720,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3664,
											"end": 3720,
											"name": "PUSH",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 3664,
											"end": 3720,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3664,
											"end": 3720,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3664,
											"end": 3720,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3664,
											"end": 3720,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3664,
											"end": 3720,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3664,
											"end": 3720,
											"name": "PUSH data",
											"source": 1,
											"value": "9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3"
										},
										{
											"begin": 3664,
											"end": 3720,
											"name": "PUSH",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 3664,
											"end": 3720,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3664,
											"end": 3720,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 3664,
											"end": 3720,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3664,
											"end": 3720,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3664,
											"end": 3720,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3664,
											"end": 3720,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3664,
											"end": 3720,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3664,
											"end": 3720,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3664,
											"end": 3720,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3664,
											"end": 3720,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3664,
											"end": 3720,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3664,
											"end": 3720,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3664,
											"end": 3720,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3664,
											"end": 3720,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3664,
											"end": 3720,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 3664,
											"end": 3720,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3737,
											"end": 3738,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3730,
											"end": 3738,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3730,
											"end": 3738,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3730,
											"end": 3738,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3530,
											"end": 3745,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 3530,
											"end": 3745,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3530,
											"end": 3745,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3530,
											"end": 3745,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3530,
											"end": 3745,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3530,
											"end": 3745,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3530,
											"end": 3745,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4209,
											"end": 4359,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 4209,
											"end": 4359,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4267,
											"end": 4274,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4298,
											"end": 4299,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4294,
											"end": 4295,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4294,
											"end": 4299,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4286,
											"end": 4330,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 4286,
											"end": 4330,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4286,
											"end": 4330,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4286,
											"end": 4330,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4286,
											"end": 4330,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4286,
											"end": 4330,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4286,
											"end": 4330,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4286,
											"end": 4330,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4286,
											"end": 4330,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4286,
											"end": 4330,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4286,
											"end": 4330,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4286,
											"end": 4330,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4286,
											"end": 4330,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4286,
											"end": 4330,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4286,
											"end": 4330,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4286,
											"end": 4330,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4286,
											"end": 4330,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4286,
											"end": 4330,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4286,
											"end": 4330,
											"name": "PUSH",
											"source": 1,
											"value": "1A"
										},
										{
											"begin": 4286,
											"end": 4330,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4286,
											"end": 4330,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4286,
											"end": 4330,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4286,
											"end": 4330,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4286,
											"end": 4330,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4286,
											"end": 4330,
											"name": "PUSH",
											"source": 1,
											"value": "536166654D6174683A206469766973696F6E206279207A65726F000000000000"
										},
										{
											"begin": 4286,
											"end": 4330,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4286,
											"end": 4330,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4286,
											"end": 4330,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4286,
											"end": 4330,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4286,
											"end": 4330,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4286,
											"end": 4330,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4286,
											"end": 4330,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4286,
											"end": 4330,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4286,
											"end": 4330,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4286,
											"end": 4330,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4286,
											"end": 4330,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4286,
											"end": 4330,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4286,
											"end": 4330,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4286,
											"end": 4330,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4286,
											"end": 4330,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4286,
											"end": 4330,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 4286,
											"end": 4330,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4351,
											"end": 4352,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4347,
											"end": 4348,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4347,
											"end": 4352,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4347,
											"end": 4352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 4347,
											"end": 4352,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4347,
											"end": 4352,
											"name": "INVALID",
											"source": 1
										},
										{
											"begin": 4347,
											"end": 4352,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 4347,
											"end": 4352,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4347,
											"end": 4352,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4340,
											"end": 4352,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4340,
											"end": 4352,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4209,
											"end": 4359,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4209,
											"end": 4359,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4209,
											"end": 4359,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4209,
											"end": 4359,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4209,
											"end": 4359,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 598,
											"end": 702,
											"name": "tag",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 598,
											"end": 702,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 651,
											"end": 666,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 685,
											"end": 695,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 678,
											"end": 695,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 678,
											"end": 695,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 598,
											"end": 702,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 598,
											"end": 702,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 696,
											"end": 871,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 696,
											"end": 871,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 778,
											"end": 864,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 798,
											"end": 803,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 828,
											"end": 851,
											"name": "PUSH",
											"source": 3,
											"value": "A9059CBB"
										},
										{
											"begin": 828,
											"end": 851,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 828,
											"end": 851,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 853,
											"end": 855,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 857,
											"end": 862,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 805,
											"end": 863,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 805,
											"end": 863,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 805,
											"end": 863,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 805,
											"end": 863,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 805,
											"end": 863,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 805,
											"end": 863,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 805,
											"end": 863,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 805,
											"end": 863,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 805,
											"end": 863,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 805,
											"end": 863,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 805,
											"end": 863,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 805,
											"end": 863,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 805,
											"end": 863,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 805,
											"end": 863,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 805,
											"end": 863,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 805,
											"end": 863,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 805,
											"end": 863,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 805,
											"end": 863,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 805,
											"end": 863,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 805,
											"end": 863,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 805,
											"end": 863,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 805,
											"end": 863,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 805,
											"end": 863,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 805,
											"end": 863,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 805,
											"end": 863,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 805,
											"end": 863,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 805,
											"end": 863,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 805,
											"end": 863,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 805,
											"end": 863,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 805,
											"end": 863,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 805,
											"end": 863,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 805,
											"end": 863,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 805,
											"end": 863,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 805,
											"end": 863,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 805,
											"end": 863,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 805,
											"end": 863,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 805,
											"end": 863,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 805,
											"end": 863,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 805,
											"end": 863,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 805,
											"end": 863,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 805,
											"end": 863,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 805,
											"end": 863,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 805,
											"end": 863,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 805,
											"end": 863,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 805,
											"end": 863,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 805,
											"end": 863,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 805,
											"end": 863,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 805,
											"end": 863,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 805,
											"end": 863,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 805,
											"end": 863,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 805,
											"end": 863,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 805,
											"end": 863,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 805,
											"end": 863,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 805,
											"end": 863,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 778,
											"end": 797,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 778,
											"end": 864,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 778,
											"end": 864,
											"name": "tag",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 778,
											"end": 864,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 696,
											"end": 871,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 696,
											"end": 871,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 696,
											"end": 871,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 696,
											"end": 871,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3128,
											"end": 3283,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 3128,
											"end": 3283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3186,
											"end": 3193,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3218,
											"end": 3219,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3213,
											"end": 3214,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3213,
											"end": 3219,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3213,
											"end": 3219,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3205,
											"end": 3254,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 3205,
											"end": 3254,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3205,
											"end": 3254,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3205,
											"end": 3254,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3205,
											"end": 3254,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3205,
											"end": 3254,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3205,
											"end": 3254,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3205,
											"end": 3254,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3205,
											"end": 3254,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3205,
											"end": 3254,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3205,
											"end": 3254,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3205,
											"end": 3254,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3205,
											"end": 3254,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3205,
											"end": 3254,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3205,
											"end": 3254,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3205,
											"end": 3254,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3205,
											"end": 3254,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3205,
											"end": 3254,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3205,
											"end": 3254,
											"name": "PUSH",
											"source": 1,
											"value": "1E"
										},
										{
											"begin": 3205,
											"end": 3254,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3205,
											"end": 3254,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3205,
											"end": 3254,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3205,
											"end": 3254,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3205,
											"end": 3254,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3205,
											"end": 3254,
											"name": "PUSH",
											"source": 1,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 3205,
											"end": 3254,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3205,
											"end": 3254,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3205,
											"end": 3254,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3205,
											"end": 3254,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3205,
											"end": 3254,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3205,
											"end": 3254,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3205,
											"end": 3254,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3205,
											"end": 3254,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3205,
											"end": 3254,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3205,
											"end": 3254,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3205,
											"end": 3254,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3205,
											"end": 3254,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3205,
											"end": 3254,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3205,
											"end": 3254,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3205,
											"end": 3254,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3205,
											"end": 3254,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 3205,
											"end": 3254,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3275,
											"end": 3276,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3271,
											"end": 3272,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3271,
											"end": 3276,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3264,
											"end": 3276,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3264,
											"end": 3276,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3128,
											"end": 3283,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3128,
											"end": 3283,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3128,
											"end": 3283,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3128,
											"end": 3283,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3128,
											"end": 3283,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2959,
											"end": 3710,
											"name": "tag",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 2959,
											"end": 3710,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3378,
											"end": 3401,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3404,
											"end": 3473,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 3432,
											"end": 3436,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3404,
											"end": 3473,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3404,
											"end": 3473,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3404,
											"end": 3473,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3404,
											"end": 3473,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3404,
											"end": 3473,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3404,
											"end": 3473,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3404,
											"end": 3473,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3404,
											"end": 3473,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3404,
											"end": 3473,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3404,
											"end": 3473,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3404,
											"end": 3473,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3404,
											"end": 3473,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3404,
											"end": 3473,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3404,
											"end": 3473,
											"name": "PUSH",
											"source": 3,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 3404,
											"end": 3473,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3404,
											"end": 3473,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3404,
											"end": 3473,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3412,
											"end": 3417,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3404,
											"end": 3431,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3404,
											"end": 3431,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3404,
											"end": 3431,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 3404,
											"end": 3431,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3404,
											"end": 3473,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3404,
											"end": 3473,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3404,
											"end": 3473,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3404,
											"end": 3473,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3404,
											"end": 3473,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3404,
											"end": 3473,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3404,
											"end": 3473,
											"name": "tag",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 3404,
											"end": 3473,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3378,
											"end": 3473,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3378,
											"end": 3473,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3507,
											"end": 3508,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3487,
											"end": 3497,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3487,
											"end": 3504,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3487,
											"end": 3508,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 3483,
											"end": 3704,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3483,
											"end": 3704,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 3483,
											"end": 3704,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3627,
											"end": 3637,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3646,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3646,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3616,
											"end": 3646,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3646,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3646,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3646,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3616,
											"end": 3646,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3646,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3646,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3646,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 3616,
											"end": 3646,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3646,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3616,
											"end": 3646,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3646,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3646,
											"name": "tag",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 3616,
											"end": 3646,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3646,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3646,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3646,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3646,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3646,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3646,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3646,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3646,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3616,
											"end": 3646,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3646,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3646,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3646,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3646,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3646,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3646,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3646,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3608,
											"end": 3693,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 3608,
											"end": 3693,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3608,
											"end": 3693,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3608,
											"end": 3693,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3608,
											"end": 3693,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3608,
											"end": 3693,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3608,
											"end": 3693,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3608,
											"end": 3693,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3608,
											"end": 3693,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3608,
											"end": 3693,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3608,
											"end": 3693,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3608,
											"end": 3693,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3608,
											"end": 3693,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3608,
											"end": 3693,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3608,
											"end": 3693,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3608,
											"end": 3693,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3608,
											"end": 3693,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3608,
											"end": 3693,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3608,
											"end": 3693,
											"name": "PUSH",
											"source": 3,
											"value": "2A"
										},
										{
											"begin": 3608,
											"end": 3693,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3608,
											"end": 3693,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3608,
											"end": 3693,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3608,
											"end": 3693,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3608,
											"end": 3693,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3608,
											"end": 3693,
											"name": "PUSH data",
											"source": 3,
											"value": "E11AD79D1E4A7F2E5F376964CB99E8E8F7904E3FC16A109F7A7ECB9AA7956DCD"
										},
										{
											"begin": 3608,
											"end": 3693,
											"name": "PUSH",
											"source": 3,
											"value": "2A"
										},
										{
											"begin": 3608,
											"end": 3693,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3608,
											"end": 3693,
											"name": "CODECOPY",
											"source": 3
										},
										{
											"begin": 3608,
											"end": 3693,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3608,
											"end": 3693,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3608,
											"end": 3693,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3608,
											"end": 3693,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3608,
											"end": 3693,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3608,
											"end": 3693,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3608,
											"end": 3693,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3608,
											"end": 3693,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3608,
											"end": 3693,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3608,
											"end": 3693,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3608,
											"end": 3693,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3608,
											"end": 3693,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3608,
											"end": 3693,
											"name": "tag",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 3608,
											"end": 3693,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3483,
											"end": 3704,
											"name": "tag",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 3483,
											"end": 3704,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2959,
											"end": 3710,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2959,
											"end": 3710,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2959,
											"end": 3710,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2959,
											"end": 3710,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3573,
											"end": 3766,
											"name": "tag",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 3573,
											"end": 3766,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3676,
											"end": 3688,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3707,
											"end": 3759,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 3729,
											"end": 3735,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3737,
											"end": 3741,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3743,
											"end": 3744,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3746,
											"end": 3758,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3707,
											"end": 3728,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 3707,
											"end": 3759,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3707,
											"end": 3759,
											"name": "tag",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 3707,
											"end": 3759,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3700,
											"end": 3759,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3700,
											"end": 3759,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3573,
											"end": 3766,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3573,
											"end": 3766,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3573,
											"end": 3766,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3573,
											"end": 3766,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3573,
											"end": 3766,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3573,
											"end": 3766,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4600,
											"end": 5123,
											"name": "tag",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 4600,
											"end": 5123,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4727,
											"end": 4739,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 4784,
											"end": 4789,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4759,
											"end": 4780,
											"name": "SELFBALANCE",
											"source": 4
										},
										{
											"begin": 4759,
											"end": 4789,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4759,
											"end": 4789,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4751,
											"end": 4832,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 4751,
											"end": 4832,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4751,
											"end": 4832,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4751,
											"end": 4832,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4751,
											"end": 4832,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4751,
											"end": 4832,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4751,
											"end": 4832,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4751,
											"end": 4832,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4751,
											"end": 4832,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4751,
											"end": 4832,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4751,
											"end": 4832,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4751,
											"end": 4832,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4751,
											"end": 4832,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4751,
											"end": 4832,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4751,
											"end": 4832,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4751,
											"end": 4832,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4751,
											"end": 4832,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4751,
											"end": 4832,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4751,
											"end": 4832,
											"name": "PUSH",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 4751,
											"end": 4832,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4751,
											"end": 4832,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4751,
											"end": 4832,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4751,
											"end": 4832,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4751,
											"end": 4832,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4751,
											"end": 4832,
											"name": "PUSH data",
											"source": 4,
											"value": "565F1A77334FC4792800921178C71E4521ACFFAB18FF9E7885B49377EE80AB4C"
										},
										{
											"begin": 4751,
											"end": 4832,
											"name": "PUSH",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 4751,
											"end": 4832,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4751,
											"end": 4832,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 4751,
											"end": 4832,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4751,
											"end": 4832,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4751,
											"end": 4832,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4751,
											"end": 4832,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4751,
											"end": 4832,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4751,
											"end": 4832,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4751,
											"end": 4832,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4751,
											"end": 4832,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4751,
											"end": 4832,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4751,
											"end": 4832,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4751,
											"end": 4832,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4751,
											"end": 4832,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4751,
											"end": 4832,
											"name": "tag",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 4751,
											"end": 4832,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4850,
											"end": 4868,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 4861,
											"end": 4867,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4850,
											"end": 4860,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 4850,
											"end": 4868,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4850,
											"end": 4868,
											"name": "tag",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 4850,
											"end": 4868,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4842,
											"end": 4902,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 4842,
											"end": 4902,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4842,
											"end": 4902,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4842,
											"end": 4902,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4842,
											"end": 4902,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4842,
											"end": 4902,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4842,
											"end": 4902,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4842,
											"end": 4902,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4842,
											"end": 4902,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4842,
											"end": 4902,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4842,
											"end": 4902,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4842,
											"end": 4902,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4842,
											"end": 4902,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4842,
											"end": 4902,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4842,
											"end": 4902,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4842,
											"end": 4902,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4842,
											"end": 4902,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4842,
											"end": 4902,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4842,
											"end": 4902,
											"name": "PUSH",
											"source": 4,
											"value": "1D"
										},
										{
											"begin": 4842,
											"end": 4902,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4842,
											"end": 4902,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4842,
											"end": 4902,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4842,
											"end": 4902,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4842,
											"end": 4902,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4842,
											"end": 4902,
											"name": "PUSH",
											"source": 4,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 4842,
											"end": 4902,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4842,
											"end": 4902,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4842,
											"end": 4902,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4842,
											"end": 4902,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4842,
											"end": 4902,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4842,
											"end": 4902,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4842,
											"end": 4902,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4842,
											"end": 4902,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4842,
											"end": 4902,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4842,
											"end": 4902,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4842,
											"end": 4902,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4842,
											"end": 4902,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4842,
											"end": 4902,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4842,
											"end": 4902,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4842,
											"end": 4902,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4842,
											"end": 4902,
											"name": "tag",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 4842,
											"end": 4902,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4973,
											"end": 4985,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4987,
											"end": 5010,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5020,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5025,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5014,
											"end": 5025,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5034,
											"end": 5039,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5042,
											"end": 5046,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "tag",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "tag",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "PUSH",
											"source": 4,
											"value": "3F"
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "tag",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "tag",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4972,
											"end": 5047,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4972,
											"end": 5047,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4972,
											"end": 5047,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4972,
											"end": 5047,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5064,
											"end": 5116,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 5082,
											"end": 5089,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5091,
											"end": 5101,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5103,
											"end": 5115,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5064,
											"end": 5081,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 5064,
											"end": 5116,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5064,
											"end": 5116,
											"name": "tag",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 5064,
											"end": 5116,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5057,
											"end": 5116,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5057,
											"end": 5116,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5057,
											"end": 5116,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5057,
											"end": 5116,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4600,
											"end": 5123,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 4600,
											"end": 5123,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4600,
											"end": 5123,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4600,
											"end": 5123,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4600,
											"end": 5123,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4600,
											"end": 5123,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4600,
											"end": 5123,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 718,
											"end": 1131,
											"name": "tag",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 718,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 778,
											"end": 782,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 981,
											"end": 993,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1097,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1078,
											"end": 1098,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 1070,
											"end": 1098,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1070,
											"end": 1098,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1123,
											"end": 1124,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1116,
											"end": 1120,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1124,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1109,
											"end": 1124,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1109,
											"end": 1124,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1109,
											"end": 1124,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 718,
											"end": 1131,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 718,
											"end": 1131,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 718,
											"end": 1131,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 718,
											"end": 1131,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7083,
											"end": 7808,
											"name": "tag",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 7083,
											"end": 7808,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7198,
											"end": 7210,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 7226,
											"end": 7233,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7222,
											"end": 7802,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7222,
											"end": 7802,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 7222,
											"end": 7802,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7256,
											"end": 7266,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7249,
											"end": 7266,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7249,
											"end": 7266,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7249,
											"end": 7266,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 7249,
											"end": 7266,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7222,
											"end": 7802,
											"name": "tag",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 7222,
											"end": 7802,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7387,
											"end": 7388,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7367,
											"end": 7377,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7367,
											"end": 7384,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7367,
											"end": 7388,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 7363,
											"end": 7792,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7363,
											"end": 7792,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 7363,
											"end": 7792,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7625,
											"end": 7635,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7619,
											"end": 7636,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7685,
											"end": 7700,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7672,
											"end": 7682,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7668,
											"end": 7670,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7664,
											"end": 7683,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7657,
											"end": 7701,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7574,
											"end": 7719,
											"name": "tag",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 7574,
											"end": 7719,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7764,
											"end": 7776,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "tag",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "tag",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "tag",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7808,
											"name": "tag",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 7083,
											"end": 7808,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7808,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7808,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7808,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7808,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7808,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7808,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										}
									],
									".data": {
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"565F1A77334FC4792800921178C71E4521ACFFAB18FF9E7885B49377EE80AB4C": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
										"9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
										"B669E18AFDE06DD7C948323CC96D872C8F871B51C6D9576E3A7C68B3CF92211": "416c6c79426f6e643a636c61696d496368693a3a20696e73756666696369656e7420416c6c792062616c616e6365",
										"C390CDC2DAD4AE97EBF57885FF8329C5BA9DB4090E4AE8E26C397B65531F1FEE": "416c6c79426f6e643a636c61696d496368693a3a20696e737566666963656e7420416c6c7920616c6c6f77616e6365",
										"E11AD79D1E4A7F2E5F376964CB99E8E8F7904E3FC16A109F7A7ECB9AA7956DCD": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
										"F369DE33193FA9AD14F9BC77962CCC61DEA2AB7E55BABF0D95E6159628A429BD": "416c6c79426f6e643a656d657267656e637957697468647261773a3a20746f2063616e6e6f7420626520746865203078302061646472657373"
									}
								},
								"FB3D24C9BB7CE198BE44568979120F7D00952FE68679C4FE4B5C2D3BB0A9F077": "416c6c79426f6e643a636f6e7374727563746f723a3a20636f6d6d656e63656d656e745f2063616e6e6f7420626520696e207468652070617374"
							}
						},
						"methodIdentifiers": {
							"claimIchi(uint256,address)": "85dd19c0",
							"commencement()": "76aabef4",
							"complete()": "522e1177",
							"daysOld()": "a4c01502",
							"durationDays()": "9cd56d03",
							"emergencyWithdraw(address,uint256,address)": "551512de",
							"ichiBalance()": "eb7e2856",
							"ichiForAlly(uint256)": "34d1adb5",
							"ichiPerAlly()": "eb01f149",
							"owner()": "8da5cb5b",
							"redeemablePercent()": "814d2832",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"userBalances(address)": "26224c64"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"ichiV2_\",\"type\":\"address\"},{\"internalType\":\"contract IAlly\",\"name\":\"ally_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"commencement_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"durationDays_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ally\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ichi\",\"type\":\"uint256\"}],\"name\":\"ClaimIchi\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract IERC20\",\"name\":\"ichiV2\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IAlly\",\"name\":\"ally\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"commencement\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"durationDays\",\"type\":\"uint256\"}],\"name\":\"Deployed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"EmergencyWithdrawal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountAlly\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"claimIchi\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIchi\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"commencement\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"complete\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isComplete\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"daysOld\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"elapsed\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"durationDays\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ichiBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"ichiOnHand\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountAlly\",\"type\":\"uint256\"}],\"name\":\"ichiForAlly\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIchi\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ichiPerAlly\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"p18\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"redeemablePercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"p18\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"userBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"allyBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimable\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"uponCompletion\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"following the airdrop, the deployer is required to burn any surplus Ally (because totalSupply() is used in calculations) and send ICHI V2 to the contract.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AllyBond.sol\":\"AllyBond\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x549c5343ad9f7e3f38aa4c4761854403502574bbc15b822db2ce892ff9b79da7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19c0dfbf7bb7744af0c03156e372d0096e0d07de8805ead7722243b8b42276a3\",\"dweb:/ipfs/QmPEFDvi6mJZ3sVii3uBs3CQzAARXPFwCKiHG5zkiCmC4V\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xe22a1fc7400ae196eba2ad1562d0386462b00a6363b742d55a2fd2021a58586f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a635cec58fb4141a16cfd408f1a21ac944c335a3beaba541c35d2e95c04536f\",\"dweb:/ipfs/QmXWcz73UenN1ji8jiWMbzxHjjfLbNQwLVKTEB5zNFE34K\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbd74f587ab9b9711801baf667db1426e4a03fd2d7f15af33e0e0d0394e7cef76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d0913dfbfce90d170df0d496ad7596c0778518e5fa7aba6c32562522546f66b\",\"dweb:/ipfs/QmR6B8nLj2PJf5e1JWD9Nk7ErkAwkqUwadCnvE82FJr1RU\"]},\"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0xc77dd6233a82c7c6e3dc49da8f3456baa00ecd3ea4dfa9222002a9aebf155dcd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e5f78a5b3e707177aa47371e008a54b83dbd28a52055d1746534502b010c21b\",\"dweb:/ipfs/Qmeqfky5DvkMZZY3RtP6kYhFD5bZrPAMVPbqkwWhoUjZ3u\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf89f005a3d98f7768cdee2583707db0ac725cf567d455751af32ee68132f3db3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f963d438177764b5f43f637c02311c951c0f0025d12fe1ac7e62e295bf416c41\",\"dweb:/ipfs/QmcfVb9JsWrYeTwFUJsKVHpKB7EaWBKydAH9S4sKg2pzcK\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]},\"contracts/AllyBond.sol\":{\"keccak256\":\"0xf3e080f143974b9df8d344d83008438feaa70f9ba6f834fff23f7bdbd42f863f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://a939ee8df3b6529d5751292629038e9223939a7909bc14099845bcb103867401\",\"dweb:/ipfs/QmZBNJPMF1Ehq5KcnuLGT46qFzj7yZ4KNNFheaSM8WAYKY\"]},\"contracts/IAlly.sol\":{\"keccak256\":\"0x53c181d6f7218d96c2ca2816cad1ae64e0f43b673e5f619641de08b3fb5f2dff\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://6bfa6a38b19aa78627b39c7087fd4777118da3790160fe13cb5d38f66a11dd84\",\"dweb:/ipfs/QmX5mGX94KwDHPacasbWkMiFMdTPhZL5bqrUhpCbfRFqjh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/AllyBond.sol:AllyBond",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1090,
								"contract": "contracts/AllyBond.sol:AllyBond",
								"label": "ichiV2",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)542"
							},
							{
								"astId": 1092,
								"contract": "contracts/AllyBond.sol:AllyBond",
								"label": "ally",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IAlly)1451"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IAlly)1451": {
								"encoding": "inplace",
								"label": "contract IAlly",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)542": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"constructor": {
								"notice": "following the airdrop, the deployer is required to burn any surplus Ally (because totalSupply() is used in calculations) and send ICHI V2 to the contract."
							}
						},
						"version": 1
					}
				}
			},
			"contracts/IAlly.sol": {
				"IAlly": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IAlly.sol\":\"IAlly\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbd74f587ab9b9711801baf667db1426e4a03fd2d7f15af33e0e0d0394e7cef76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d0913dfbfce90d170df0d496ad7596c0778518e5fa7aba6c32562522546f66b\",\"dweb:/ipfs/QmR6B8nLj2PJf5e1JWD9Nk7ErkAwkqUwadCnvE82FJr1RU\"]},\"contracts/IAlly.sol\":{\"keccak256\":\"0x53c181d6f7218d96c2ca2816cad1ae64e0f43b673e5f619641de08b3fb5f2dff\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://6bfa6a38b19aa78627b39c7087fd4777118da3790160fe13cb5d38f66a11dd84\",\"dweb:/ipfs/QmX5mGX94KwDHPacasbWkMiFMdTPhZL5bqrUhpCbfRFqjh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1074
						],
						"Ownable": [
							109
						]
					},
					"id": 110,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 110,
							"sourceUnit": 1075,
							"src": "58:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1074,
										"src": "613:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$1074",
											"typeString": "contract Context"
										}
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "613:7:0"
								}
							],
							"contractDependencies": [
								1074
							],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "89:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 109,
							"linearizedBaseContracts": [
								109,
								1074
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"scope": 109,
									"src": "627:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "627:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 13,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "683:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "714:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "714:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "682:57:0"
									},
									"src": "656:84:0"
								},
								{
									"body": {
										"id": 34,
										"nodeType": "Block",
										"src": "857:135:0",
										"statements": [
											{
												"assignments": [
													18
												],
												"declarations": [
													{
														"constant": false,
														"id": 18,
														"mutability": "mutable",
														"name": "msgSender",
														"nodeType": "VariableDeclaration",
														"scope": 34,
														"src": "867:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 17,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "867:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 21,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 19,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1062,
														"src": "887:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "887:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "867:32:0"
											},
											{
												"expression": {
													"id": 24,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 22,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "909:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 23,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 18,
														"src": "918:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "909:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 25,
												"nodeType": "ExpressionStatement",
												"src": "909:18:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 29,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "971:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 28,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "963:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 27,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "963:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 30,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "963:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 31,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "975:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 26,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "942:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 32,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "942:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 33,
												"nodeType": "EmitStatement",
												"src": "937:48:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "746:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 35,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "854:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "857:0:0"
									},
									"scope": 109,
									"src": "842:150:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "1123:30:0",
										"statements": [
											{
												"expression": {
													"id": 41,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1140:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 40,
												"id": 42,
												"nodeType": "Return",
												"src": "1133:13:0"
											}
										]
									},
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "998:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 44,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1082:2:0"
									},
									"returnParameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1114:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1114:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1113:9:0"
									},
									"scope": 109,
									"src": "1068:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1262:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 52,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 48,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 44,
																	"src": "1280:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 49,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1280:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 50,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1062,
																	"src": "1291:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 51,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1291:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1280:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1305:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 47,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1272:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1272:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1272:68:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1350:1:0"
											}
										]
									},
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1159:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:2:0"
									},
									"src": "1241:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "1754:91:0",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"id": 65,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "1790:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 68,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1806:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 67,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1798:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 66,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1798:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 69,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1798:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 64,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "1769:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 70,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1769:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 71,
												"nodeType": "EmitStatement",
												"src": "1764:45:0"
											},
											{
												"expression": {
													"id": 77,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 72,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "1819:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1836:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1828:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 73,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1828:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 76,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1828:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1819:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 78,
												"nodeType": "ExpressionStatement",
												"src": "1819:19:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1364:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 62,
											"modifierName": {
												"id": 61,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 58,
												"src": "1744:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1744:9:0"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1726:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1754:0:0"
									},
									"scope": 109,
									"src": "1700:145:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 107,
										"nodeType": "Block",
										"src": "2064:170:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 89,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 83,
																"src": "2082:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 92,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2102:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 91,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2094:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 90,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2094:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 93,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2094:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "2082:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 95,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2106:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 88,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2074:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 96,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2074:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 97,
												"nodeType": "ExpressionStatement",
												"src": "2074:73:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 99,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "2183:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 100,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "2191:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 98,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2162:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2162:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 102,
												"nodeType": "EmitStatement",
												"src": "2157:43:0"
											},
											{
												"expression": {
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 103,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2210:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 104,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 83,
														"src": "2219:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2210:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 106,
												"nodeType": "ExpressionStatement",
												"src": "2210:17:0"
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "1851:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 108,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 86,
											"modifierName": {
												"id": 85,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 58,
												"src": "2054:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2054:9:0"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "2021:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2021:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2020:18:0"
									},
									"returnParameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2064:0:0"
									},
									"scope": 109,
									"src": "1994:240:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 110,
							"src": "584:1652:0"
						}
					],
					"src": "33:2204:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							464
						]
					},
					"id": 465,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 111,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 112,
								"nodeType": "StructuredDocumentation",
								"src": "58:563:1",
								"text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 464,
							"linearizedBaseContracts": [
								464
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 142,
										"nodeType": "Block",
										"src": "857:98:1",
										"statements": [
											{
												"assignments": [
													125
												],
												"declarations": [
													{
														"constant": false,
														"id": 125,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 142,
														"src": "867:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 124,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "867:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 129,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 126,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "879:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 127,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 117,
														"src": "883:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "879:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "867:17:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 130,
														"name": "c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 125,
														"src": "898:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 131,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "902:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "898:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 137,
												"nodeType": "IfStatement",
												"src": "894:28:1",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 133,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "913:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 134,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "920:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 135,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "912:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 123,
													"id": 136,
													"nodeType": "Return",
													"src": "905:17:1"
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 138,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "940:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"id": 139,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 125,
															"src": "946:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 140,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "939:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 123,
												"id": 141,
												"nodeType": "Return",
												"src": "932:16:1"
											}
										]
									},
									"documentation": {
										"id": 113,
										"nodeType": "StructuredDocumentation",
										"src": "645:131:1",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 143,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "797:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "797:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "808:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "808:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "796:22:1"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "842:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 119,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "842:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "848:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "848:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "841:15:1"
									},
									"scope": 464,
									"src": "781:174:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 169,
										"nodeType": "Block",
										"src": "1177:75:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 155,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 148,
														"src": "1191:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 156,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1195:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1191:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 162,
												"nodeType": "IfStatement",
												"src": "1187:28:1",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 158,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1206:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 159,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1213:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 160,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1205:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 154,
													"id": 161,
													"nodeType": "Return",
													"src": "1198:17:1"
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 163,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1233:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 166,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 164,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 146,
																"src": "1239:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 165,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 148,
																"src": "1243:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1239:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 167,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1232:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 154,
												"id": 168,
												"nodeType": "Return",
												"src": "1225:20:1"
											}
										]
									},
									"documentation": {
										"id": 144,
										"nodeType": "StructuredDocumentation",
										"src": "961:135:1",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 170,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "1117:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1117:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "1128:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1128:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1116:22:1"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "1162:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 150,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1162:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "1168:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 152,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1168:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1161:15:1"
									},
									"scope": 464,
									"src": "1101:151:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 210,
										"nodeType": "Block",
										"src": "1476:359:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 182,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 173,
														"src": "1708:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 183,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1713:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1708:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 189,
												"nodeType": "IfStatement",
												"src": "1704:28:1",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "74727565",
																"id": 185,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1724:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															{
																"hexValue": "30",
																"id": 186,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1730:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 187,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1723:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 181,
													"id": 188,
													"nodeType": "Return",
													"src": "1716:16:1"
												}
											},
											{
												"assignments": [
													191
												],
												"declarations": [
													{
														"constant": false,
														"id": 191,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 210,
														"src": "1742:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 190,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1742:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 195,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 192,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 173,
														"src": "1754:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 193,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 175,
														"src": "1758:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1754:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1742:17:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 198,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 196,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 191,
															"src": "1773:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 197,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "1777:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1773:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 199,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 175,
														"src": "1782:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1773:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 205,
												"nodeType": "IfStatement",
												"src": "1769:33:1",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 201,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1793:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 202,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1800:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 203,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1792:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 181,
													"id": 204,
													"nodeType": "Return",
													"src": "1785:17:1"
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 206,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1820:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"id": 207,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 191,
															"src": "1826:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 208,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1819:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 181,
												"id": 209,
												"nodeType": "Return",
												"src": "1812:16:1"
											}
										]
									},
									"documentation": {
										"id": 171,
										"nodeType": "StructuredDocumentation",
										"src": "1258:137:1",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "1416:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1416:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "1427:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1427:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1415:22:1"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "1461:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 177,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1461:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "1467:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1467:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1460:15:1"
									},
									"scope": 464,
									"src": "1400:435:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 237,
										"nodeType": "Block",
										"src": "2060:76:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 223,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 216,
														"src": "2074:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 224,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2079:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2074:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 230,
												"nodeType": "IfStatement",
												"src": "2070:29:1",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 226,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2090:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 227,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2097:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 228,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2089:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 222,
													"id": 229,
													"nodeType": "Return",
													"src": "2082:17:1"
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 231,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2117:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 234,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 232,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 214,
																"src": "2123:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 233,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 216,
																"src": "2127:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2123:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 235,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2116:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 222,
												"id": 236,
												"nodeType": "Return",
												"src": "2109:20:1"
											}
										]
									},
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "1841:138:1",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 238,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2000:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2000:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2011:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2011:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1999:22:1"
									},
									"returnParameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2045:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 218,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2045:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2051:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2051:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2044:15:1"
									},
									"scope": 464,
									"src": "1984:152:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 264,
										"nodeType": "Block",
										"src": "2371:76:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 250,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "2385:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 251,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2390:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2385:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 257,
												"nodeType": "IfStatement",
												"src": "2381:29:1",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 253,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2401:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 254,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2408:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 255,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2400:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 249,
													"id": 256,
													"nodeType": "Return",
													"src": "2393:17:1"
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2428:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 261,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 259,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 241,
																"src": "2434:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 260,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 243,
																"src": "2438:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2434:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 262,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2427:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 249,
												"id": 263,
												"nodeType": "Return",
												"src": "2420:20:1"
											}
										]
									},
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "2142:148:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 265,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "2311:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2311:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "2322:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2322:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2310:22:1"
									},
									"returnParameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "2356:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 245,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2356:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "2362:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 247,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2362:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2355:15:1"
									},
									"scope": 464,
									"src": "2295:152:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 290,
										"nodeType": "Block",
										"src": "2749:108:1",
										"statements": [
											{
												"assignments": [
													276
												],
												"declarations": [
													{
														"constant": false,
														"id": 276,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 290,
														"src": "2759:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 275,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2759:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 280,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 277,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 268,
														"src": "2771:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 278,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 270,
														"src": "2775:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2771:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2759:17:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 284,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 282,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 276,
																"src": "2794:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 283,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 268,
																"src": "2799:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2794:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 285,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2802:29:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 281,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2786:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2786:46:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 287,
												"nodeType": "ExpressionStatement",
												"src": "2786:46:1"
											},
											{
												"expression": {
													"id": 288,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 276,
													"src": "2849:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 274,
												"id": 289,
												"nodeType": "Return",
												"src": "2842:8:1"
											}
										]
									},
									"documentation": {
										"id": 266,
										"nodeType": "StructuredDocumentation",
										"src": "2453:224:1",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 291,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "2695:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2695:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "2706:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2706:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2694:22:1"
									},
									"returnParameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "2740:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2740:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2739:9:1"
									},
									"scope": 464,
									"src": "2682:175:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 312,
										"nodeType": "Block",
										"src": "3195:88:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 304,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 302,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 296,
																"src": "3213:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 303,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 294,
																"src": "3218:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3213:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 305,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3221:32:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 301,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3205:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3205:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 307,
												"nodeType": "ExpressionStatement",
												"src": "3205:49:1"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 308,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "3271:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 309,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 296,
														"src": "3275:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3271:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 300,
												"id": 311,
												"nodeType": "Return",
												"src": "3264:12:1"
											}
										]
									},
									"documentation": {
										"id": 292,
										"nodeType": "StructuredDocumentation",
										"src": "2863:260:1",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 313,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "3141:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 293,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3141:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "3152:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3152:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3140:22:1"
									},
									"returnParameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "3186:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 298,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3186:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3185:9:1"
									},
									"scope": 464,
									"src": "3128:155:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 346,
										"nodeType": "Block",
										"src": "3597:148:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 323,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 316,
														"src": "3611:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 324,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3616:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3611:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 328,
												"nodeType": "IfStatement",
												"src": "3607:20:1",
												"trueBody": {
													"expression": {
														"hexValue": "30",
														"id": 326,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3626:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 322,
													"id": 327,
													"nodeType": "Return",
													"src": "3619:8:1"
												}
											},
											{
												"assignments": [
													330
												],
												"declarations": [
													{
														"constant": false,
														"id": 330,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 346,
														"src": "3637:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 329,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3637:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 334,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 331,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 316,
														"src": "3649:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 332,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 318,
														"src": "3653:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3649:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3637:17:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 340,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 338,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 336,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 330,
																	"src": "3672:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 337,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 316,
																	"src": "3676:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3672:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 339,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 318,
																"src": "3681:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3672:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 341,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3684:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 335,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3664:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3664:56:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 343,
												"nodeType": "ExpressionStatement",
												"src": "3664:56:1"
											},
											{
												"expression": {
													"id": 344,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 330,
													"src": "3737:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 322,
												"id": 345,
												"nodeType": "Return",
												"src": "3730:8:1"
											}
										]
									},
									"documentation": {
										"id": 314,
										"nodeType": "StructuredDocumentation",
										"src": "3289:236:1",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 347,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "3543:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3543:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "3554:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3554:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3542:22:1"
									},
									"returnParameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "3588:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3588:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3587:9:1"
									},
									"scope": 464,
									"src": "3530:215:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 368,
										"nodeType": "Block",
										"src": "4276:83:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 358,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 352,
																"src": "4294:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 359,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4298:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4294:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4301:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 357,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4286:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4286:44:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 363,
												"nodeType": "ExpressionStatement",
												"src": "4286:44:1"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 364,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 350,
														"src": "4347:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 365,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 352,
														"src": "4351:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4347:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 356,
												"id": 367,
												"nodeType": "Return",
												"src": "4340:12:1"
											}
										]
									},
									"documentation": {
										"id": 348,
										"nodeType": "StructuredDocumentation",
										"src": "3751:453:1",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 369,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "4222:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4222:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "4233:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 351,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4233:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4221:22:1"
									},
									"returnParameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "4267:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4267:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4266:9:1"
									},
									"scope": 464,
									"src": "4209:150:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 390,
										"nodeType": "Block",
										"src": "4879:81:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 382,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 380,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 374,
																"src": "4897:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 381,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4901:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4897:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 383,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4904:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 379,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4889:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4889:42:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 385,
												"nodeType": "ExpressionStatement",
												"src": "4889:42:1"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 386,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 372,
														"src": "4948:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 387,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 374,
														"src": "4952:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4948:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 378,
												"id": 389,
												"nodeType": "Return",
												"src": "4941:12:1"
											}
										]
									},
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "4365:442:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 391,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "4825:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4825:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "4836:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4836:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4824:22:1"
									},
									"returnParameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "4870:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4869:9:1"
									},
									"scope": 464,
									"src": "4812:148:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 414,
										"nodeType": "Block",
										"src": "5519:68:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 406,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 404,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 396,
																"src": "5537:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 405,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 394,
																"src": "5542:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5537:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 407,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 398,
															"src": "5545:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 403,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5529:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5529:29:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 409,
												"nodeType": "ExpressionStatement",
												"src": "5529:29:1"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 410,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 394,
														"src": "5575:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 411,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 396,
														"src": "5579:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5575:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 402,
												"id": 413,
												"nodeType": "Return",
												"src": "5568:12:1"
											}
										]
									},
									"documentation": {
										"id": 392,
										"nodeType": "StructuredDocumentation",
										"src": "4966:453:1",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 415,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "5437:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5437:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "5448:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 395,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5448:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "5459:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 397,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5459:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5436:50:1"
									},
									"returnParameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "5510:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 400,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5510:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5509:9:1"
									},
									"scope": 464,
									"src": "5424:163:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 438,
										"nodeType": "Block",
										"src": "6339:67:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 428,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 420,
																"src": "6357:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 429,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6361:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6357:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 431,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 422,
															"src": "6364:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 427,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6349:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6349:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 433,
												"nodeType": "ExpressionStatement",
												"src": "6349:28:1"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 434,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 418,
														"src": "6394:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 435,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 420,
														"src": "6398:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6394:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 426,
												"id": 437,
												"nodeType": "Return",
												"src": "6387:12:1"
											}
										]
									},
									"documentation": {
										"id": 416,
										"nodeType": "StructuredDocumentation",
										"src": "5593:646:1",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryDiv}.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 439,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "6257:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 417,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6257:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "6268:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 419,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6268:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "6279:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 421,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6279:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6256:50:1"
									},
									"returnParameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "6330:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 424,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6330:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6329:9:1"
									},
									"scope": 464,
									"src": "6244:162:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 462,
										"nodeType": "Block",
										"src": "7147:67:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 454,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 452,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 444,
																"src": "7165:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 453,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7169:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7165:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 455,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "7172:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 451,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7157:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7157:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 457,
												"nodeType": "ExpressionStatement",
												"src": "7157:28:1"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 458,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 442,
														"src": "7202:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 459,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 444,
														"src": "7206:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7202:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 450,
												"id": 461,
												"nodeType": "Return",
												"src": "7195:12:1"
											}
										]
									},
									"documentation": {
										"id": 440,
										"nodeType": "StructuredDocumentation",
										"src": "6412:635:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 463,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "7065:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 441,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7065:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "7076:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 443,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7076:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "7087:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 445,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7087:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7064:50:1"
									},
									"returnParameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "7138:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 448,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7138:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7137:9:1"
									},
									"scope": 464,
									"src": "7052:162:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 465,
							"src": "622:6594:1"
						}
					],
					"src": "33:7184:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							542
						]
					},
					"id": 543,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 466,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 467,
								"nodeType": "StructuredDocumentation",
								"src": "58:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 542,
							"linearizedBaseContracts": [
								542
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 468,
										"nodeType": "StructuredDocumentation",
										"src": "152:66:2",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 473,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "243:2:2"
									},
									"returnParameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "269:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 470,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "269:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "268:9:2"
									},
									"scope": 542,
									"src": "223:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 474,
										"nodeType": "StructuredDocumentation",
										"src": "284:72:2",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 481,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "380:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 475,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "380:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "379:17:2"
									},
									"returnParameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "420:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 478,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "420:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "419:9:2"
									},
									"scope": 542,
									"src": "361:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 482,
										"nodeType": "StructuredDocumentation",
										"src": "435:209:2",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 491,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "667:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 483,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "667:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "686:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 485,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "686:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "666:35:2"
									},
									"returnParameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "720:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 488,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "720:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "719:6:2"
									},
									"scope": 542,
									"src": "649:77:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "732:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 501,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "1020:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1020:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "1035:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 495,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1035:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1019:32:2"
									},
									"returnParameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "1075:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 498,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1075:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1074:9:2"
									},
									"scope": 542,
									"src": "1001:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 502,
										"nodeType": "StructuredDocumentation",
										"src": "1090:642:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 511,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "1754:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 503,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1754:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "1771:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 505,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1771:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1753:33:2"
									},
									"returnParameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "1805:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 508,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1805:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:6:2"
									},
									"scope": 542,
									"src": "1737:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 512,
										"nodeType": "StructuredDocumentation",
										"src": "1817:296:2",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 523,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "2140:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 513,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2140:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "2156:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 515,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2156:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "2175:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 517,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2175:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2139:51:2"
									},
									"returnParameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "2209:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 520,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2209:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2208:6:2"
									},
									"scope": 542,
									"src": "2118:97:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 524,
										"nodeType": "StructuredDocumentation",
										"src": "2221:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 532,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "2399:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2399:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 528,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "2421:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 527,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2421:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 530,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "2441:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 529,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2441:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2398:57:2"
									},
									"src": "2384:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 533,
										"nodeType": "StructuredDocumentation",
										"src": "2462:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 541,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 535,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "2630:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 534,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2630:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 537,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "2653:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 536,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 539,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "2678:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 538,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2678:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2629:63:2"
									},
									"src": "2615:78:2"
								}
							],
							"scope": 543,
							"src": "129:2566:2"
						}
					],
					"src": "33:2663:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							1051
						],
						"IERC20": [
							542
						],
						"SafeERC20": [
							755
						],
						"SafeMath": [
							464
						]
					},
					"id": 756,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 544,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 545,
							"nodeType": "ImportDirective",
							"scope": 756,
							"sourceUnit": 543,
							"src": "58:22:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
							"file": "../../math/SafeMath.sol",
							"id": 546,
							"nodeType": "ImportDirective",
							"scope": 756,
							"sourceUnit": 465,
							"src": "81:33:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 547,
							"nodeType": "ImportDirective",
							"scope": 756,
							"sourceUnit": 1052,
							"src": "115:33:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 548,
								"nodeType": "StructuredDocumentation",
								"src": "150:457:3",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 755,
							"linearizedBaseContracts": [
								755
							],
							"name": "SafeERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 551,
									"libraryName": {
										"id": 549,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 464,
										"src": "638:8:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$464",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "632:27:3",
									"typeName": {
										"id": 550,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "651:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 554,
									"libraryName": {
										"id": 552,
										"name": "Address",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1051,
										"src": "670:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Address_$1051",
											"typeString": "library Address"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "664:26:3",
									"typeName": {
										"id": 553,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "682:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 575,
										"nodeType": "Block",
										"src": "768:103:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 564,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 556,
															"src": "798:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$542",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 567,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 556,
																			"src": "828:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$542",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 568,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 491,
																		"src": "828:14:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 569,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "828:23:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 570,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 558,
																	"src": "853:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 571,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 560,
																	"src": "857:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 565,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "805:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 566,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "805:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 572,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "805:58:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$542",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 563,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 754,
														"src": "778:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$542_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "778:86:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 574,
												"nodeType": "ExpressionStatement",
												"src": "778:86:3"
											}
										]
									},
									"id": 576,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "718:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$542",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 555,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 542,
													"src": "718:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$542",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "732:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 557,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "732:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "744:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 559,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "744:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "717:41:3"
									},
									"returnParameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "768:0:3"
									},
									"scope": 755,
									"src": "696:175:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 600,
										"nodeType": "Block",
										"src": "967:113:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 588,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 578,
															"src": "997:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$542",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 591,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 578,
																			"src": "1027:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$542",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 592,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 523,
																		"src": "1027:18:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 593,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1027:27:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 594,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 580,
																	"src": "1056:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 595,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 582,
																	"src": "1062:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 596,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 584,
																	"src": "1066:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 589,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1004:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 590,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1004:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 597,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1004:68:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$542",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 587,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 754,
														"src": "977:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$542_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "977:96:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 599,
												"nodeType": "ExpressionStatement",
												"src": "977:96:3"
											}
										]
									},
									"id": 601,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "903:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$542",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 577,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 542,
													"src": "903:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$542",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "917:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 579,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "917:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "931:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 581,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "943:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 583,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "943:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "902:55:3"
									},
									"returnParameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "967:0:3"
									},
									"scope": 755,
									"src": "877:203:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 643,
										"nodeType": "Block",
										"src": "1416:537:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 627,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 614,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 612,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 608,
																			"src": "1705:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 613,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1714:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1705:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 615,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1704:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 625,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 620,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "1745:4:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$755",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$755",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 619,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1737:7:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 618,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1737:7:3",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 621,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1737:13:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 622,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 606,
																					"src": "1752:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 616,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 604,
																					"src": "1721:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$542",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 617,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 501,
																				"src": "1721:15:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 623,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1721:39:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 624,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1764:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1721:44:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 626,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1720:46:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1704:62:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 628,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1780:56:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 611,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1696:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1696:150:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 630,
												"nodeType": "ExpressionStatement",
												"src": "1696:150:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 632,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 604,
															"src": "1876:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$542",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 635,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 604,
																			"src": "1906:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$542",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 636,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 511,
																		"src": "1906:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 637,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1906:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 638,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 606,
																	"src": "1930:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 639,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 608,
																	"src": "1939:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 633,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1883:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 634,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1883:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 640,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1883:62:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$542",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 631,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 754,
														"src": "1856:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$542_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1856:90:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 642,
												"nodeType": "ExpressionStatement",
												"src": "1856:90:3"
											}
										]
									},
									"documentation": {
										"id": 602,
										"nodeType": "StructuredDocumentation",
										"src": "1086:249:3",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 644,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "1361:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$542",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 603,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 542,
													"src": "1361:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$542",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "1375:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1375:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "1392:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 607,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1392:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1360:46:3"
									},
									"returnParameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1416:0:3"
									},
									"scope": 755,
									"src": "1340:613:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 679,
										"nodeType": "Block",
										"src": "2045:197:3",
										"statements": [
											{
												"assignments": [
													654
												],
												"declarations": [
													{
														"constant": false,
														"id": 654,
														"mutability": "mutable",
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"scope": 679,
														"src": "2055:20:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 653,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2055:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 666,
												"initialValue": {
													"arguments": [
														{
															"id": 664,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 650,
															"src": "2122:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 659,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2102:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$755",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$755",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 658,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2094:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 657,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2094:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 660,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2094:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 661,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 648,
																	"src": "2109:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 655,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 646,
																	"src": "2078:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$542",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 656,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 501,
																"src": "2078:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 662,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2078:39:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 663,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 291,
														"src": "2078:43:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2078:50:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2055:73:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 668,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 646,
															"src": "2158:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$542",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 671,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 646,
																			"src": "2188:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$542",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 672,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 511,
																		"src": "2188:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 673,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2188:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 674,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 648,
																	"src": "2212:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 675,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 654,
																	"src": "2221:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 669,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2165:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 670,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2165:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 676,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2165:69:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$542",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 667,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 754,
														"src": "2138:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$542_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2138:97:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 678,
												"nodeType": "ExpressionStatement",
												"src": "2138:97:3"
											}
										]
									},
									"id": 680,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 646,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "1990:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$542",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 645,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 542,
													"src": "1990:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$542",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "2004:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 647,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2004:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 650,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "2021:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 649,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2021:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1989:46:3"
									},
									"returnParameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2045:0:3"
									},
									"scope": 755,
									"src": "1959:283:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 716,
										"nodeType": "Block",
										"src": "2334:242:3",
										"statements": [
											{
												"assignments": [
													690
												],
												"declarations": [
													{
														"constant": false,
														"id": 690,
														"mutability": "mutable",
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"scope": 716,
														"src": "2344:20:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 689,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2344:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 703,
												"initialValue": {
													"arguments": [
														{
															"id": 700,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 686,
															"src": "2411:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 701,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2418:43:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
															},
															"value": "SafeERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 695,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2391:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$755",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$755",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 694,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2383:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 693,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2383:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 696,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2383:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 697,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 684,
																	"src": "2398:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 691,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 682,
																	"src": "2367:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$542",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 692,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 501,
																"src": "2367:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 698,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2367:39:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 699,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 415,
														"src": "2367:43:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2367:95:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2344:118:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 705,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 682,
															"src": "2492:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$542",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 708,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 682,
																			"src": "2522:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$542",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 709,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 511,
																		"src": "2522:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 710,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2522:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 711,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 684,
																	"src": "2546:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 712,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 690,
																	"src": "2555:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 706,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2499:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 707,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2499:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 713,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2499:69:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$542",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 704,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 754,
														"src": "2472:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$542_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2472:97:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 715,
												"nodeType": "ExpressionStatement",
												"src": "2472:97:3"
											}
										]
									},
									"id": 717,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "2279:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$542",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 681,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 542,
													"src": "2279:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$542",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "2293:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 683,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2293:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "2310:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 685,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2310:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2278:46:3"
									},
									"returnParameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2334:0:3"
									},
									"scope": 755,
									"src": "2248:328:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 753,
										"nodeType": "Block",
										"src": "3029:681:3",
										"statements": [
											{
												"assignments": [
													726
												],
												"declarations": [
													{
														"constant": false,
														"id": 726,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 753,
														"src": "3378:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 725,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3378:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 735,
												"initialValue": {
													"arguments": [
														{
															"id": 732,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 722,
															"src": "3432:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 733,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3438:34:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 729,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 720,
																	"src": "3412:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$542",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$542",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3404:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 727,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3404:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 730,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3404:14:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 731,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 846,
														"src": "3404:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3404:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3378:95:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 736,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 726,
															"src": "3487:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 737,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3487:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 738,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3507:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3487:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 752,
												"nodeType": "IfStatement",
												"src": "3483:221:3",
												"trueBody": {
													"id": 751,
													"nodeType": "Block",
													"src": "3510:194:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 743,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 726,
																				"src": "3627:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 745,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3640:4:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 744,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "3640:4:3",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 746,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3639:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 741,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3616:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 742,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "3616:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 747,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3616:30:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 748,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3648:44:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 740,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3608:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 749,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3608:85:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 750,
															"nodeType": "ExpressionStatement",
															"src": "3608:85:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 718,
										"nodeType": "StructuredDocumentation",
										"src": "2582:372:3",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 754,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "2988:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$542",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 719,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 542,
													"src": "2988:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$542",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "3002:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 721,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3002:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2987:33:3"
									},
									"returnParameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3029:0:3"
									},
									"scope": 755,
									"src": "2959:751:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 756,
							"src": "608:3104:3"
						}
					],
					"src": "33:3680:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1051
						]
					},
					"id": 1052,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 757,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 758,
								"nodeType": "StructuredDocumentation",
								"src": "58:67:4",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1051,
							"linearizedBaseContracts": [
								1051
							],
							"name": "Address",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 774,
										"nodeType": "Block",
										"src": "784:347:4",
										"statements": [
											{
												"assignments": [
													767
												],
												"declarations": [
													{
														"constant": false,
														"id": 767,
														"mutability": "mutable",
														"name": "size",
														"nodeType": "VariableDeclaration",
														"scope": 774,
														"src": "981:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 766,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "981:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 768,
												"nodeType": "VariableDeclarationStatement",
												"src": "981:12:4"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1068:32:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1070:28:4",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1090:7:4"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1078:11:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1078:20:4"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1070:4:4"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 761,
														"isOffset": false,
														"isSlot": false,
														"src": "1090:7:4",
														"valueSize": 1
													},
													{
														"declaration": 767,
														"isOffset": false,
														"isSlot": false,
														"src": "1070:4:4",
														"valueSize": 1
													}
												],
												"id": 769,
												"nodeType": "InlineAssembly",
												"src": "1059:41:4"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 770,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "1116:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 771,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1123:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1116:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 765,
												"id": 773,
												"nodeType": "Return",
												"src": "1109:15:4"
											}
										]
									},
									"documentation": {
										"id": 759,
										"nodeType": "StructuredDocumentation",
										"src": "148:565:4",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 775,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 775,
												"src": "738:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:17:4"
									},
									"returnParameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 775,
												"src": "778:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 763,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "778:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "777:6:4"
									},
									"scope": 1051,
									"src": "718:413:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 808,
										"nodeType": "Block",
										"src": "2119:320:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 790,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 786,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2145:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1051",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1051",
																				"typeString": "library Address"
																			}
																		],
																		"id": 785,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2137:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 784,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2137:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 787,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2137:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 788,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2137:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 789,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 780,
																"src": "2162:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2137:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 791,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2170:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 783,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2129:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2129:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 793,
												"nodeType": "ExpressionStatement",
												"src": "2129:73:4"
											},
											{
												"assignments": [
													795,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 795,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 808,
														"src": "2291:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 794,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2291:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 802,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 800,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2341:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 796,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 778,
																"src": "2309:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 797,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2309:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 799,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 798,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 780,
																"src": "2332:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2309:31:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 801,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2309:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2290:54:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 804,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "2362:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 805,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2371:60:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 803,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2354:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2354:78:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 807,
												"nodeType": "ExpressionStatement",
												"src": "2354:78:4"
											}
										]
									},
									"documentation": {
										"id": 776,
										"nodeType": "StructuredDocumentation",
										"src": "1137:906:4",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 809,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 778,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 809,
												"src": "2067:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 777,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2067:15:4",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 780,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 809,
												"src": "2094:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 779,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2094:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2066:43:4"
									},
									"returnParameters": {
										"id": 782,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2119:0:4"
									},
									"scope": 1051,
									"src": "2048:391:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 825,
										"nodeType": "Block",
										"src": "3269:82:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 820,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 812,
															"src": "3297:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 821,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 814,
															"src": "3305:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 822,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3311:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 819,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															826,
															846
														],
														"referencedDeclaration": 846,
														"src": "3284:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3284:60:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 818,
												"id": 824,
												"nodeType": "Return",
												"src": "3277:67:4"
											}
										]
									},
									"documentation": {
										"id": 810,
										"nodeType": "StructuredDocumentation",
										"src": "2445:730:4",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain`call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 826,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 812,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "3202:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 811,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3202:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 814,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "3218:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 813,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3218:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3201:35:4"
									},
									"returnParameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "3255:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 816,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3255:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3254:14:4"
									},
									"scope": 1051,
									"src": "3180:171:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 845,
										"nodeType": "Block",
										"src": "3690:76:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 839,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 829,
															"src": "3729:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 840,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 831,
															"src": "3737:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 841,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3743:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 842,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 833,
															"src": "3746:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 838,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															866,
															916
														],
														"referencedDeclaration": 916,
														"src": "3707:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 843,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3707:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 837,
												"id": 844,
												"nodeType": "Return",
												"src": "3700:59:4"
											}
										]
									},
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "3357:211:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 846,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 846,
												"src": "3595:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3595:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 846,
												"src": "3611:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 830,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3611:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 846,
												"src": "3630:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 832,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3630:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3594:63:4"
									},
									"returnParameters": {
										"id": 837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 836,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 846,
												"src": "3676:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 835,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3676:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3675:14:4"
									},
									"scope": 1051,
									"src": "3573:193:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 865,
										"nodeType": "Block",
										"src": "4241:111:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 859,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 849,
															"src": "4280:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 860,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 851,
															"src": "4288:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 861,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 853,
															"src": "4294:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 862,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4301:43:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 858,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															866,
															916
														],
														"referencedDeclaration": 916,
														"src": "4258:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 863,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4258:87:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 857,
												"id": 864,
												"nodeType": "Return",
												"src": "4251:94:4"
											}
										]
									},
									"documentation": {
										"id": 847,
										"nodeType": "StructuredDocumentation",
										"src": "3772:351:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 866,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "4159:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4159:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "4175:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 850,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4175:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "4194:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 852,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4194:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4158:50:4"
									},
									"returnParameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "4227:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 855,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4227:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4226:14:4"
									},
									"scope": 1051,
									"src": "4128:224:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 915,
										"nodeType": "Block",
										"src": "4741:382:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 887,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 883,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4767:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1051",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1051",
																				"typeString": "library Address"
																			}
																		],
																		"id": 882,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4759:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 881,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4759:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 884,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4759:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 885,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "4759:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 886,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 873,
																"src": "4784:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4759:30:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 888,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4791:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 880,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4751:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4751:81:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 890,
												"nodeType": "ExpressionStatement",
												"src": "4751:81:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 893,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 869,
																	"src": "4861:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 892,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 775,
																"src": "4850:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 894,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4850:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 895,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4870:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 891,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4842:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4842:60:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 897,
												"nodeType": "ExpressionStatement",
												"src": "4842:60:4"
											},
											{
												"assignments": [
													899,
													901
												],
												"declarations": [
													{
														"constant": false,
														"id": 899,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 915,
														"src": "4973:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 898,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4973:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 901,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 915,
														"src": "4987:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 900,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4987:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 908,
												"initialValue": {
													"arguments": [
														{
															"id": 906,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 871,
															"src": "5042:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 902,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 869,
																"src": "5014:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 903,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5014:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 905,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 904,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 873,
																"src": "5034:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5014:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 907,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5014:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4972:75:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 910,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 899,
															"src": "5082:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 911,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 901,
															"src": "5091:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 912,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "5103:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 909,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1050,
														"src": "5064:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5064:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 879,
												"id": 914,
												"nodeType": "Return",
												"src": "5057:59:4"
											}
										]
									},
									"documentation": {
										"id": 867,
										"nodeType": "StructuredDocumentation",
										"src": "4358:237:4",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 916,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "4631:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4631:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "4647:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 870,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4647:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "4666:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 872,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4666:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "4681:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 874,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4681:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4630:78:4"
									},
									"returnParameters": {
										"id": 879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 878,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "4727:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 877,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4727:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4726:14:4"
									},
									"scope": 1051,
									"src": "4600:523:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 932,
										"nodeType": "Block",
										"src": "5400:97:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 927,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 919,
															"src": "5436:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 928,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 921,
															"src": "5444:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 929,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5450:39:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 926,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															933,
															968
														],
														"referencedDeclaration": 968,
														"src": "5417:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 930,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5417:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 925,
												"id": 931,
												"nodeType": "Return",
												"src": "5410:80:4"
											}
										]
									},
									"documentation": {
										"id": 917,
										"nodeType": "StructuredDocumentation",
										"src": "5129:166:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 933,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 919,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "5328:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 918,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5328:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 921,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "5344:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 920,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5344:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5327:35:4"
									},
									"returnParameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "5386:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 923,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5386:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5385:14:4"
									},
									"scope": 1051,
									"src": "5300:197:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 967,
										"nodeType": "Block",
										"src": "5809:288:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 947,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 936,
																	"src": "5838:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 946,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 775,
																"src": "5827:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 948,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5827:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 949,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5847:38:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 945,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5819:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 950,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5819:67:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 951,
												"nodeType": "ExpressionStatement",
												"src": "5819:67:4"
											},
											{
												"assignments": [
													953,
													955
												],
												"declarations": [
													{
														"constant": false,
														"id": 953,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 967,
														"src": "5957:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 952,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5957:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 955,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 967,
														"src": "5971:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 954,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5971:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 960,
												"initialValue": {
													"arguments": [
														{
															"id": 958,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 938,
															"src": "6016:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 956,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 936,
															"src": "5998:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 957,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "5998:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5998:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5956:65:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 962,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 953,
															"src": "6056:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 963,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 955,
															"src": "6065:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 964,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 940,
															"src": "6077:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 961,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1050,
														"src": "6038:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6038:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 944,
												"id": 966,
												"nodeType": "Return",
												"src": "6031:59:4"
											}
										]
									},
									"documentation": {
										"id": 934,
										"nodeType": "StructuredDocumentation",
										"src": "5503:173:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 968,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "5709:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 935,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5709:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 938,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "5725:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 937,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5725:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "5744:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 939,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5744:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5708:63:4"
									},
									"returnParameters": {
										"id": 944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 943,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "5795:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 942,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5795:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5794:14:4"
									},
									"scope": 1051,
									"src": "5681:416:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 984,
										"nodeType": "Block",
										"src": "6373:101:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 979,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 971,
															"src": "6411:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 980,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 973,
															"src": "6419:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 981,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6425:41:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 978,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															985,
															1020
														],
														"referencedDeclaration": 1020,
														"src": "6390:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 982,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6390:77:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 977,
												"id": 983,
												"nodeType": "Return",
												"src": "6383:84:4"
											}
										]
									},
									"documentation": {
										"id": 969,
										"nodeType": "StructuredDocumentation",
										"src": "6103:168:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 985,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 971,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "6306:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 970,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6306:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "6322:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 972,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6322:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6305:35:4"
									},
									"returnParameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "6359:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 975,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6359:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6358:14:4"
									},
									"scope": 1051,
									"src": "6276:198:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1019,
										"nodeType": "Block",
										"src": "6785:292:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 999,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 988,
																	"src": "6814:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 998,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 775,
																"src": "6803:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1000,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6803:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1001,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6823:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 997,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6795:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1002,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6795:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1003,
												"nodeType": "ExpressionStatement",
												"src": "6795:69:4"
											},
											{
												"assignments": [
													1005,
													1007
												],
												"declarations": [
													{
														"constant": false,
														"id": 1005,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 1019,
														"src": "6935:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1004,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6935:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1007,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 1019,
														"src": "6949:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1006,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6949:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1012,
												"initialValue": {
													"arguments": [
														{
															"id": 1010,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 990,
															"src": "6996:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1008,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 988,
															"src": "6976:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1009,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "6976:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6976:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6934:67:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1014,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1005,
															"src": "7036:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1015,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1007,
															"src": "7045:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1016,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 992,
															"src": "7057:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1013,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1050,
														"src": "7018:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1017,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7018:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 996,
												"id": 1018,
												"nodeType": "Return",
												"src": "7011:59:4"
											}
										]
									},
									"documentation": {
										"id": 986,
										"nodeType": "StructuredDocumentation",
										"src": "6480:175:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1020,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 988,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 1020,
												"src": "6690:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 987,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6690:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1020,
												"src": "6706:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 989,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6706:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 1020,
												"src": "6725:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 991,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6725:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6689:63:4"
									},
									"returnParameters": {
										"id": 996,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 995,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1020,
												"src": "6771:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 994,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6771:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6770:14:4"
									},
									"scope": 1051,
									"src": "6660:417:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1049,
										"nodeType": "Block",
										"src": "7212:596:4",
										"statements": [
											{
												"condition": {
													"id": 1031,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1022,
													"src": "7226:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1047,
													"nodeType": "Block",
													"src": "7283:519:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1038,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1035,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1024,
																		"src": "7367:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1036,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7367:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1037,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7387:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7367:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1045,
																"nodeType": "Block",
																"src": "7739:53:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1042,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1026,
																					"src": "7764:12:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 1041,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "7757:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 1043,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7757:20:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1044,
																		"nodeType": "ExpressionStatement",
																		"src": "7757:20:4"
																	}
																]
															},
															"id": 1046,
															"nodeType": "IfStatement",
															"src": "7363:429:4",
															"trueBody": {
																"id": 1040,
																"nodeType": "Block",
																"src": "7390:343:4",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "7574:145:4",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "7596:40:4",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "7625:10:4"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "7619:5:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7619:17:4"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "7600:15:4",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7668:2:4",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "7672:10:4"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7664:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7664:19:4"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "7685:15:4"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "7657:6:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7657:44:4"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7657:44:4"
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 1024,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7625:10:4",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1024,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7672:10:4",
																				"valueSize": 1
																			}
																		],
																		"id": 1039,
																		"nodeType": "InlineAssembly",
																		"src": "7565:154:4"
																	}
																]
															}
														}
													]
												},
												"id": 1048,
												"nodeType": "IfStatement",
												"src": "7222:580:4",
												"trueBody": {
													"id": 1034,
													"nodeType": "Block",
													"src": "7235:42:4",
													"statements": [
														{
															"expression": {
																"id": 1032,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1024,
																"src": "7256:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1030,
															"id": 1033,
															"nodeType": "Return",
															"src": "7249:17:4"
														}
													]
												}
											}
										]
									},
									"id": 1050,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_verifyCallResult",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "success",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "7110:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1021,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7110:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1024,
												"mutability": "mutable",
												"name": "returndata",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "7124:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1023,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7124:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "7149:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1025,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7149:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7109:67:4"
									},
									"returnParameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "7198:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1028,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7198:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7197:14:4"
									},
									"scope": 1051,
									"src": "7083:725:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1052,
							"src": "126:7684:4"
						}
					],
					"src": "33:7778:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1074
						]
					},
					"id": 1075,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1053,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1074,
							"linearizedBaseContracts": [
								1074
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1061,
										"nodeType": "Block",
										"src": "668:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1058,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "685:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1059,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "685:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 1057,
												"id": 1060,
												"nodeType": "Return",
												"src": "678:17:5"
											}
										]
									},
									"id": 1062,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1054,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "617:2:5"
									},
									"returnParameters": {
										"id": 1057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "651:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1055,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "651:15:5",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "650:17:5"
									},
									"scope": 1074,
									"src": "598:104:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1072,
										"nodeType": "Block",
										"src": "773:165:5",
										"statements": [
											{
												"expression": {
													"id": 1067,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4294967268,
													"src": "783:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$1074",
														"typeString": "contract Context"
													}
												},
												"id": 1068,
												"nodeType": "ExpressionStatement",
												"src": "783:4:5"
											},
											{
												"expression": {
													"expression": {
														"id": 1069,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "923:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "923:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1066,
												"id": 1071,
												"nodeType": "Return",
												"src": "916:15:5"
											}
										]
									},
									"id": 1073,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "725:2:5"
									},
									"returnParameters": {
										"id": 1066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1065,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1073,
												"src": "759:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1064,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "759:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "758:14:5"
									},
									"scope": 1074,
									"src": "708:230:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1075,
							"src": "566:374:5"
						}
					],
					"src": "33:908:5"
				},
				"id": 5
			},
			"contracts/AllyBond.sol": {
				"ast": {
					"absolutePath": "contracts/AllyBond.sol",
					"exportedSymbols": {
						"Address": [
							1051
						],
						"AllyBond": [
							1440
						],
						"Context": [
							1074
						],
						"IAlly": [
							1451
						],
						"IERC20": [
							542
						],
						"Ownable": [
							109
						],
						"SafeERC20": [
							755
						],
						"SafeMath": [
							464
						]
					},
					"id": 1441,
					"license": "BUSL-1.1",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1076,
							"literals": [
								"solidity",
								"0.7",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "38:22:6"
						},
						{
							"absolutePath": "contracts/IAlly.sol",
							"file": "./IAlly.sol",
							"id": 1077,
							"nodeType": "ImportDirective",
							"scope": 1441,
							"sourceUnit": 1452,
							"src": "62:21:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/SafeERC20.sol",
							"id": 1078,
							"nodeType": "ImportDirective",
							"scope": 1441,
							"sourceUnit": 756,
							"src": "84:59:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/math/SafeMath.sol",
							"id": 1079,
							"nodeType": "ImportDirective",
							"scope": 1441,
							"sourceUnit": 465,
							"src": "144:51:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1080,
							"nodeType": "ImportDirective",
							"scope": 1441,
							"sourceUnit": 110,
							"src": "196:52:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1081,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 109,
										"src": "271:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$109",
											"typeString": "contract Ownable"
										}
									},
									"id": 1082,
									"nodeType": "InheritanceSpecifier",
									"src": "271:7:6"
								}
							],
							"contractDependencies": [
								109,
								1074
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1440,
							"linearizedBaseContracts": [
								1440,
								109,
								1074
							],
							"name": "AllyBond",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1085,
									"libraryName": {
										"id": 1083,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 464,
										"src": "292:8:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$464",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "286:27:6",
									"typeName": {
										"id": 1084,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "305:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 1088,
									"libraryName": {
										"id": 1086,
										"name": "SafeERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 755,
										"src": "324:9:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeERC20_$755",
											"typeString": "library SafeERC20"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "318:27:6",
									"typeName": {
										"id": 1087,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 542,
										"src": "338:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$542",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"id": 1090,
									"mutability": "mutable",
									"name": "ichiV2",
									"nodeType": "VariableDeclaration",
									"scope": 1440,
									"src": "351:13:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$542",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1089,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 542,
										"src": "351:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$542",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1092,
									"mutability": "mutable",
									"name": "ally",
									"nodeType": "VariableDeclaration",
									"scope": 1440,
									"src": "370:10:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IAlly_$1451",
										"typeString": "contract IAlly"
									},
									"typeName": {
										"id": 1091,
										"name": "IAlly",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1451,
										"src": "370:5:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IAlly_$1451",
											"typeString": "contract IAlly"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1095,
									"mutability": "constant",
									"name": "PRECISION",
									"nodeType": "VariableDeclaration",
									"scope": 1440,
									"src": "386:41:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1093,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "386:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31653138",
										"id": 1094,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "423:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"value": "1e18"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "76aabef4",
									"id": 1097,
									"mutability": "immutable",
									"name": "commencement",
									"nodeType": "VariableDeclaration",
									"scope": 1440,
									"src": "483:37:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1096,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "483:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9cd56d03",
									"id": 1099,
									"mutability": "immutable",
									"name": "durationDays",
									"nodeType": "VariableDeclaration",
									"scope": 1440,
									"src": "526:37:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1098,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "526:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 1109,
									"name": "Deployed",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1101,
												"indexed": false,
												"mutability": "mutable",
												"name": "ichiV2",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "585:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$542",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1100,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 542,
													"src": "585:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$542",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1103,
												"indexed": false,
												"mutability": "mutable",
												"name": "ally",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "600:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IAlly_$1451",
													"typeString": "contract IAlly"
												},
												"typeName": {
													"id": 1102,
													"name": "IAlly",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1451,
													"src": "600:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IAlly_$1451",
														"typeString": "contract IAlly"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1105,
												"indexed": false,
												"mutability": "mutable",
												"name": "commencement",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "612:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1104,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1107,
												"indexed": false,
												"mutability": "mutable",
												"name": "durationDays",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "634:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "584:71:6"
									},
									"src": "570:86:6"
								},
								{
									"anonymous": false,
									"id": 1119,
									"name": "ClaimIchi",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1111,
												"indexed": false,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 1119,
												"src": "677:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "677:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1113,
												"indexed": false,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1119,
												"src": "691:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "691:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1115,
												"indexed": false,
												"mutability": "mutable",
												"name": "ally",
												"nodeType": "VariableDeclaration",
												"scope": 1119,
												"src": "703:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "703:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1117,
												"indexed": false,
												"mutability": "mutable",
												"name": "ichi",
												"nodeType": "VariableDeclaration",
												"scope": 1119,
												"src": "717:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "717:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "676:54:6"
									},
									"src": "661:70:6"
								},
								{
									"anonymous": false,
									"id": 1127,
									"name": "EmergencyWithdrawal",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1121,
												"indexed": false,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "762:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$542",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1120,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 542,
													"src": "762:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$542",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1123,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "776:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "776:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1125,
												"indexed": false,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "792:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "792:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "761:42:6"
									},
									"src": "736:68:6"
								},
								{
									"body": {
										"id": 1170,
										"nodeType": "Block",
										"src": "1077:313:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1143,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1140,
																"name": "commencement_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1134,
																"src": "1095:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"id": 1141,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "1112:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1142,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "1112:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1095:32:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c6c79426f6e643a636f6e7374727563746f723a3a20636f6d6d656e63656d656e745f2063616e6e6f7420626520696e207468652070617374",
															"id": 1144,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1129:60:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fb3d24c9bb7ce198be44568979120f7d00952fe68679c4fe4b5c2d3bb0a9f077",
																"typeString": "literal_string \"AllyBond:constructor:: commencement_ cannot be in the past\""
															},
															"value": "AllyBond:constructor:: commencement_ cannot be in the past"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fb3d24c9bb7ce198be44568979120f7d00952fe68679c4fe4b5c2d3bb0a9f077",
																"typeString": "literal_string \"AllyBond:constructor:: commencement_ cannot be in the past\""
															}
														],
														"id": 1139,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1087:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1087:103:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1146,
												"nodeType": "ExpressionStatement",
												"src": "1087:103:6"
											},
											{
												"expression": {
													"id": 1149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1147,
														"name": "ichiV2",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1090,
														"src": "1200:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$542",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1148,
														"name": "ichiV2_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1130,
														"src": "1209:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$542",
															"typeString": "contract IERC20"
														}
													},
													"src": "1200:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$542",
														"typeString": "contract IERC20"
													}
												},
												"id": 1150,
												"nodeType": "ExpressionStatement",
												"src": "1200:16:6"
											},
											{
												"expression": {
													"id": 1153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1151,
														"name": "ally",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1092,
														"src": "1226:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IAlly_$1451",
															"typeString": "contract IAlly"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1152,
														"name": "ally_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1132,
														"src": "1233:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IAlly_$1451",
															"typeString": "contract IAlly"
														}
													},
													"src": "1226:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IAlly_$1451",
														"typeString": "contract IAlly"
													}
												},
												"id": 1154,
												"nodeType": "ExpressionStatement",
												"src": "1226:12:6"
											},
											{
												"expression": {
													"id": 1157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1155,
														"name": "commencement",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1097,
														"src": "1248:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1156,
														"name": "commencement_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1134,
														"src": "1263:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1248:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1158,
												"nodeType": "ExpressionStatement",
												"src": "1248:28:6"
											},
											{
												"expression": {
													"id": 1161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1159,
														"name": "durationDays",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1099,
														"src": "1286:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1160,
														"name": "durationDays_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1136,
														"src": "1301:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1286:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1162,
												"nodeType": "ExpressionStatement",
												"src": "1286:28:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1164,
															"name": "ichiV2_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1130,
															"src": "1338:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$542",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 1165,
															"name": "ally_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1132,
															"src": "1347:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IAlly_$1451",
																"typeString": "contract IAlly"
															}
														},
														{
															"id": 1166,
															"name": "commencement_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1134,
															"src": "1354:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1167,
															"name": "durationDays_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1136,
															"src": "1369:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$542",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_contract$_IAlly_$1451",
																"typeString": "contract IAlly"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1163,
														"name": "Deployed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1109,
														"src": "1329:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_contract$_IERC20_$542_$_t_contract$_IAlly_$1451_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,contract IAlly,uint256,uint256)"
														}
													},
													"id": 1168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1329:54:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1169,
												"nodeType": "EmitStatement",
												"src": "1324:59:6"
											}
										]
									},
									"documentation": {
										"id": 1128,
										"nodeType": "StructuredDocumentation",
										"src": "810:175:6",
										"text": "@notice following the airdrop, the deployer is required to burn any surplus Ally\n (because totalSupply() is used in calculations) and send ICHI V2 to the contract."
									},
									"id": 1171,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1130,
												"mutability": "mutable",
												"name": "ichiV2_",
												"nodeType": "VariableDeclaration",
												"scope": 1171,
												"src": "1002:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$542",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1129,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 542,
													"src": "1002:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$542",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1132,
												"mutability": "mutable",
												"name": "ally_",
												"nodeType": "VariableDeclaration",
												"scope": 1171,
												"src": "1018:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IAlly_$1451",
													"typeString": "contract IAlly"
												},
												"typeName": {
													"id": 1131,
													"name": "IAlly",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1451,
													"src": "1018:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IAlly_$1451",
														"typeString": "contract IAlly"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1134,
												"mutability": "mutable",
												"name": "commencement_",
												"nodeType": "VariableDeclaration",
												"scope": 1171,
												"src": "1031:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1031:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1136,
												"mutability": "mutable",
												"name": "durationDays_",
												"nodeType": "VariableDeclaration",
												"scope": 1171,
												"src": "1054:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1054:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1001:75:6"
									},
									"returnParameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1077:0:6"
									},
									"scope": 1440,
									"src": "990:400:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1245,
										"nodeType": "Block",
										"src": "1484:489:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1187,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1181,
																"name": "amountAlly",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1173,
																"src": "1502:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1184,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1531:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1185,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1531:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	],
																	"expression": {
																		"id": 1182,
																		"name": "ally",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1092,
																		"src": "1516:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IAlly_$1451",
																			"typeString": "contract IAlly"
																		}
																	},
																	"id": 1183,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 481,
																	"src": "1516:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1186,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1516:26:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1502:40:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c6c79426f6e643a636c61696d496368693a3a20696e73756666696369656e7420416c6c792062616c616e6365",
															"id": 1188,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1544:48:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0b669e18afde06dd7c948323cc96d872c8f871b51c6d9576e3a7c68b3cf92211",
																"typeString": "literal_string \"AllyBond:claimIchi:: insufficient Ally balance\""
															},
															"value": "AllyBond:claimIchi:: insufficient Ally balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0b669e18afde06dd7c948323cc96d872c8f871b51c6d9576e3a7c68b3cf92211",
																"typeString": "literal_string \"AllyBond:claimIchi:: insufficient Ally balance\""
															}
														],
														"id": 1180,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1494:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1494:99:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1190,
												"nodeType": "ExpressionStatement",
												"src": "1494:99:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1202,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1192,
																"name": "amountAlly",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1173,
																"src": "1611:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1195,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1640:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1196,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1640:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1199,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1660:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_AllyBond_$1440",
																					"typeString": "contract AllyBond"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_AllyBond_$1440",
																					"typeString": "contract AllyBond"
																				}
																			],
																			"id": 1198,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1652:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1197,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1652:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1200,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1652:13:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1193,
																		"name": "ally",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1092,
																		"src": "1625:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IAlly_$1451",
																			"typeString": "contract IAlly"
																		}
																	},
																	"id": 1194,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "allowance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 501,
																	"src": "1625:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view external returns (uint256)"
																	}
																},
																"id": 1201,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1625:41:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1611:55:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c6c79426f6e643a636c61696d496368693a3a20696e737566666963656e7420416c6c7920616c6c6f77616e6365",
															"id": 1203,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1668:49:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c390cdc2dad4ae97ebf57885ff8329c5ba9db4090e4ae8e26c397b65531f1fee",
																"typeString": "literal_string \"AllyBond:claimIchi:: insufficent Ally allowance\""
															},
															"value": "AllyBond:claimIchi:: insufficent Ally allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c390cdc2dad4ae97ebf57885ff8329c5ba9db4090e4ae8e26c397b65531f1fee",
																"typeString": "literal_string \"AllyBond:claimIchi:: insufficent Ally allowance\""
															}
														],
														"id": 1191,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1603:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1603:115:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1205,
												"nodeType": "ExpressionStatement",
												"src": "1603:115:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1209,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1746:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1210,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1746:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"arguments": [
																{
																	"id": 1213,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1766:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_AllyBond_$1440",
																		"typeString": "contract AllyBond"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_AllyBond_$1440",
																		"typeString": "contract AllyBond"
																	}
																],
																"id": 1212,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1758:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1211,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1758:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1214,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1758:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1215,
															"name": "amountAlly",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1173,
															"src": "1773:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1206,
															"name": "ally",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1092,
															"src": "1728:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IAlly_$1451",
																"typeString": "contract IAlly"
															}
														},
														"id": 1208,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 523,
														"src": "1728:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 1216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1728:56:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1217,
												"nodeType": "ExpressionStatement",
												"src": "1728:56:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1221,
															"name": "amountAlly",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1173,
															"src": "1804:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1218,
															"name": "ally",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1092,
															"src": "1794:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IAlly_$1451",
																"typeString": "contract IAlly"
															}
														},
														"id": 1220,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "burn",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1450,
														"src": "1794:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256) external"
														}
													},
													"id": 1222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1794:21:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1223,
												"nodeType": "ExpressionStatement",
												"src": "1794:21:6"
											},
											{
												"expression": {
													"id": 1228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1224,
														"name": "amountIchi",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1178,
														"src": "1825:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1226,
																"name": "amountAlly",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1173,
																"src": "1850:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1225,
															"name": "ichiForAlly",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1398,
															"src": "1838:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256) view returns (uint256)"
															}
														},
														"id": 1227,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1838:23:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1825:36:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1229,
												"nodeType": "ExpressionStatement",
												"src": "1825:36:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1233,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1175,
															"src": "1887:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1234,
															"name": "amountIchi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1178,
															"src": "1891:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1230,
															"name": "ichiV2",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1090,
															"src": "1871:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$542",
																"typeString": "contract IERC20"
															}
														},
														"id": 1232,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 491,
														"src": "1871:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1871:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1236,
												"nodeType": "ExpressionStatement",
												"src": "1871:31:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1238,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1927:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1239,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1927:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1240,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1175,
															"src": "1939:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1241,
															"name": "amountAlly",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1173,
															"src": "1943:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1242,
															"name": "amountIchi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1178,
															"src": "1955:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1237,
														"name": "ClaimIchi",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1119,
														"src": "1917:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1917:49:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1244,
												"nodeType": "EmitStatement",
												"src": "1912:54:6"
											}
										]
									},
									"functionSelector": "85dd19c0",
									"id": 1246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claimIchi",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1173,
												"mutability": "mutable",
												"name": "amountAlly",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "1415:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1415:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1175,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "1435:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1435:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1414:32:6"
									},
									"returnParameters": {
										"id": 1179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1178,
												"mutability": "mutable",
												"name": "amountIchi",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "1464:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1464:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1463:20:6"
									},
									"scope": 1440,
									"src": "1396:577:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1280,
										"nodeType": "Block",
										"src": "2067:196:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1258,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1252,
																"src": "2085:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1261,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2099:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1260,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2091:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1259,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2091:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1262,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2091:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "2085:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c6c79426f6e643a656d657267656e637957697468647261773a3a20746f2063616e6e6f7420626520746865203078302061646472657373",
															"id": 1264,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2103:59:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f369de33193fa9ad14f9bc77962ccc61dea2ab7e55babf0d95e6159628a429bd",
																"typeString": "literal_string \"AllyBond:emergencyWithdraw:: to cannot be the 0x0 address\""
															},
															"value": "AllyBond:emergencyWithdraw:: to cannot be the 0x0 address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f369de33193fa9ad14f9bc77962ccc61dea2ab7e55babf0d95e6159628a429bd",
																"typeString": "literal_string \"AllyBond:emergencyWithdraw:: to cannot be the 0x0 address\""
															}
														],
														"id": 1257,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2077:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2077:86:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1266,
												"nodeType": "ExpressionStatement",
												"src": "2077:86:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1270,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1252,
															"src": "2192:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1271,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1250,
															"src": "2196:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1267,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1248,
															"src": "2173:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$542",
																"typeString": "contract IERC20"
															}
														},
														"id": 1269,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 576,
														"src": "2173:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$542_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$542_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2173:30:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1273,
												"nodeType": "ExpressionStatement",
												"src": "2173:30:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1275,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1248,
															"src": "2238:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$542",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 1276,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1250,
															"src": "2245:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1277,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1252,
															"src": "2253:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$542",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1274,
														"name": "EmergencyWithdrawal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1127,
														"src": "2218:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_contract$_IERC20_$542_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (contract IERC20,uint256,address)"
														}
													},
													"id": 1278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2218:38:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1279,
												"nodeType": "EmitStatement",
												"src": "2213:43:6"
											}
										]
									},
									"functionSelector": "551512de",
									"id": 1281,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1255,
											"modifierName": {
												"id": 1254,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 58,
												"src": "2057:9:6",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2057:9:6"
										}
									],
									"name": "emergencyWithdraw",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1248,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "2006:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$542",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1247,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 542,
													"src": "2006:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$542",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1250,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "2020:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2020:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1252,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "2036:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2036:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2005:42:6"
									},
									"returnParameters": {
										"id": 1256,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2067:0:6"
									},
									"scope": 1440,
									"src": "1979:284:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1296,
										"nodeType": "Block",
										"src": "2332:61:6",
										"statements": [
											{
												"expression": {
													"id": 1294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1286,
														"name": "ichiOnHand",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1284,
														"src": "2342:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1291,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2380:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_AllyBond_$1440",
																			"typeString": "contract AllyBond"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_AllyBond_$1440",
																			"typeString": "contract AllyBond"
																		}
																	],
																	"id": 1290,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2372:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1289,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2372:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1292,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2372:13:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1287,
																"name": "ichiV2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1090,
																"src": "2355:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$542",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 481,
															"src": "2355:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 1293,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2355:31:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2342:44:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1295,
												"nodeType": "ExpressionStatement",
												"src": "2342:44:6"
											}
										]
									},
									"functionSelector": "eb7e2856",
									"id": 1297,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ichiBalance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1282,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2289:2:6"
									},
									"returnParameters": {
										"id": 1285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1284,
												"mutability": "mutable",
												"name": "ichiOnHand",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "2312:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2312:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2311:20:6"
									},
									"scope": 1440,
									"src": "2269:124:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1309,
										"nodeType": "Block",
										"src": "2456:55:6",
										"statements": [
											{
												"expression": {
													"id": 1307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1302,
														"name": "isComplete",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1300,
														"src": "2466:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1306,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1303,
																"name": "daysOld",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1334,
																"src": "2479:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 1304,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2479:9:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 1305,
															"name": "durationDays",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1099,
															"src": "2492:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2479:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2466:38:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1308,
												"nodeType": "ExpressionStatement",
												"src": "2466:38:6"
											}
										]
									},
									"functionSelector": "522e1177",
									"id": 1310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "complete",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1298,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2416:2:6"
									},
									"returnParameters": {
										"id": 1301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1300,
												"mutability": "mutable",
												"name": "isComplete",
												"nodeType": "VariableDeclaration",
												"scope": 1310,
												"src": "2439:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1299,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2439:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2438:17:6"
									},
									"scope": 1440,
									"src": "2399:112:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1333,
										"nodeType": "Block",
										"src": "2573:126:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1315,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2586:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1316,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2586:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 1317,
														"name": "commencement",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1097,
														"src": "2605:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2586:31:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1321,
												"nodeType": "IfStatement",
												"src": "2583:44:6",
												"trueBody": {
													"expression": {
														"hexValue": "30",
														"id": 1319,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2626:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 1314,
													"id": 1320,
													"nodeType": "Return",
													"src": "2619:8:6"
												}
											},
											{
												"expression": {
													"id": 1331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1322,
														"name": "elapsed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1313,
														"src": "2637:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "31",
																"id": 1329,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2685:6:6",
																"subdenomination": "days",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_86400_by_1",
																	"typeString": "int_const 86400"
																},
																"value": "1"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_86400_by_1",
																	"typeString": "int_const 86400"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 1326,
																		"name": "commencement",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1097,
																		"src": "2667:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 1323,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "2647:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1324,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "2647:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1325,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 313,
																	"src": "2647:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1327,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2647:33:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 369,
															"src": "2647:37:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1330,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2647:45:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2637:55:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1332,
												"nodeType": "ExpressionStatement",
												"src": "2637:55:6"
											}
										]
									},
									"functionSelector": "a4c01502",
									"id": 1334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "daysOld",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1311,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2533:2:6"
									},
									"returnParameters": {
										"id": 1314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1313,
												"mutability": "mutable",
												"name": "elapsed",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "2556:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2556:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2555:17:6"
									},
									"scope": 1440,
									"src": "2517:182:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1355,
										"nodeType": "Block",
										"src": "2794:106:6",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1339,
														"name": "complete",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1310,
														"src": "2807:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
															"typeString": "function () view returns (bool)"
														}
													},
													"id": 1340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2807:10:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1343,
												"nodeType": "IfStatement",
												"src": "2804:31:6",
												"trueBody": {
													"expression": {
														"id": 1341,
														"name": "PRECISION",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1095,
														"src": "2826:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"functionReturnParameters": 1338,
													"id": 1342,
													"nodeType": "Return",
													"src": "2819:16:6"
												}
											},
											{
												"expression": {
													"id": 1353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1344,
														"name": "p18",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1337,
														"src": "2845:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1351,
																"name": "durationDays",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1099,
																"src": "2880:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 1348,
																		"name": "PRECISION",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1095,
																		"src": "2865:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1345,
																			"name": "daysOld",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1334,
																			"src": "2851:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																				"typeString": "function () view returns (uint256)"
																			}
																		},
																		"id": 1346,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2851:9:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1347,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 347,
																	"src": "2851:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1349,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2851:24:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1350,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 369,
															"src": "2851:28:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1352,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2851:42:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2845:48:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1354,
												"nodeType": "ExpressionStatement",
												"src": "2845:48:6"
											}
										]
									},
									"functionSelector": "814d2832",
									"id": 1356,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "redeemablePercent",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1335,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2758:2:6"
									},
									"returnParameters": {
										"id": 1338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1337,
												"mutability": "mutable",
												"name": "p18",
												"nodeType": "VariableDeclaration",
												"scope": 1356,
												"src": "2781:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1336,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2781:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2780:13:6"
									},
									"scope": 1440,
									"src": "2732:168:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1378,
										"nodeType": "Block",
										"src": "2962:123:6",
										"statements": [
											{
												"assignments": [
													1362
												],
												"declarations": [
													{
														"constant": false,
														"id": 1362,
														"mutability": "mutable",
														"name": "circulatingAlly",
														"nodeType": "VariableDeclaration",
														"scope": 1378,
														"src": "2972:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1361,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2972:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1366,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1363,
															"name": "ally",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1092,
															"src": "2995:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IAlly_$1451",
																"typeString": "contract IAlly"
															}
														},
														"id": 1364,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "totalSupply",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 473,
														"src": "2995:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 1365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2995:18:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2972:41:6"
											},
											{
												"expression": {
													"id": 1376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1367,
														"name": "p18",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1359,
														"src": "3023:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1374,
																"name": "circulatingAlly",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1362,
																"src": "3062:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 1371,
																		"name": "PRECISION",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1095,
																		"src": "3047:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1368,
																			"name": "ichiBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1297,
																			"src": "3029:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																				"typeString": "function () view returns (uint256)"
																			}
																		},
																		"id": 1369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3029:13:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1370,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 347,
																	"src": "3029:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1372,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3029:28:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1373,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 369,
															"src": "3029:32:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1375,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3029:49:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3023:55:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1377,
												"nodeType": "ExpressionStatement",
												"src": "3023:55:6"
											}
										]
									},
									"functionSelector": "eb01f149",
									"id": 1379,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ichiPerAlly",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1357,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2926:2:6"
									},
									"returnParameters": {
										"id": 1360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1359,
												"mutability": "mutable",
												"name": "p18",
												"nodeType": "VariableDeclaration",
												"scope": 1379,
												"src": "2949:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1358,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2949:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2948:13:6"
									},
									"scope": 1440,
									"src": "2906:179:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1397,
										"nodeType": "Block",
										"src": "3172:74:6",
										"statements": [
											{
												"expression": {
													"id": 1395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1386,
														"name": "amountIchi",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1384,
														"src": "3182:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1393,
																"name": "PRECISION",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1095,
																"src": "3229:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1389,
																			"name": "ichiPerAlly",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1379,
																			"src": "3210:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																				"typeString": "function () view returns (uint256)"
																			}
																		},
																		"id": 1390,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3210:13:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1387,
																		"name": "amountAlly",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1381,
																		"src": "3195:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 347,
																	"src": "3195:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1391,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3195:29:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1392,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 369,
															"src": "3195:33:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1394,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3195:44:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3182:57:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1396,
												"nodeType": "ExpressionStatement",
												"src": "3182:57:6"
											}
										]
									},
									"functionSelector": "34d1adb5",
									"id": 1398,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ichiForAlly",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1381,
												"mutability": "mutable",
												"name": "amountAlly",
												"nodeType": "VariableDeclaration",
												"scope": 1398,
												"src": "3112:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1380,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3112:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3111:20:6"
									},
									"returnParameters": {
										"id": 1385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1384,
												"mutability": "mutable",
												"name": "amountIchi",
												"nodeType": "VariableDeclaration",
												"scope": 1398,
												"src": "3152:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1383,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3152:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3151:20:6"
									},
									"scope": 1440,
									"src": "3091:155:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1438,
										"nodeType": "Block",
										"src": "3372:199:6",
										"statements": [
											{
												"expression": {
													"id": 1414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1409,
														"name": "allyBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1403,
														"src": "3382:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1412,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1400,
																"src": "3411:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1410,
																"name": "ally",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1092,
																"src": "3396:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IAlly_$1451",
																	"typeString": "contract IAlly"
																}
															},
															"id": 1411,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 481,
															"src": "3396:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 1413,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3396:20:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3382:34:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1415,
												"nodeType": "ExpressionStatement",
												"src": "3382:34:6"
											},
											{
												"expression": {
													"id": 1425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1416,
														"name": "uponCompletion",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1407,
														"src": "3426:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1423,
																"name": "PRECISION",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1095,
																"src": "3478:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1419,
																			"name": "ichiPerAlly",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1379,
																			"src": "3459:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																				"typeString": "function () view returns (uint256)"
																			}
																		},
																		"id": 1420,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3459:13:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1417,
																		"name": "allyBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1403,
																		"src": "3443:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1418,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 347,
																	"src": "3443:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1421,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3443:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 369,
															"src": "3443:34:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1424,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3443:45:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3426:62:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1426,
												"nodeType": "ExpressionStatement",
												"src": "3426:62:6"
											},
											{
												"expression": {
													"id": 1436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1427,
														"name": "claimable",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1405,
														"src": "3498:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1434,
																"name": "PRECISION",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1095,
																"src": "3554:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1430,
																			"name": "redeemablePercent",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1356,
																			"src": "3529:17:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																				"typeString": "function () view returns (uint256)"
																			}
																		},
																		"id": 1431,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3529:19:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1428,
																		"name": "uponCompletion",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1407,
																		"src": "3510:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1429,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 347,
																	"src": "3510:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1432,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3510:39:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 369,
															"src": "3510:43:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1435,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3510:54:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3498:66:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1437,
												"nodeType": "ExpressionStatement",
												"src": "3498:66:6"
											}
										]
									},
									"functionSelector": "26224c64",
									"id": 1439,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "userBalances",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1400,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 1439,
												"src": "3274:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1399,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3274:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3273:14:6"
									},
									"returnParameters": {
										"id": 1408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1403,
												"mutability": "mutable",
												"name": "allyBalance",
												"nodeType": "VariableDeclaration",
												"scope": 1439,
												"src": "3308:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1405,
												"mutability": "mutable",
												"name": "claimable",
												"nodeType": "VariableDeclaration",
												"scope": 1439,
												"src": "3329:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3329:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1407,
												"mutability": "mutable",
												"name": "uponCompletion",
												"nodeType": "VariableDeclaration",
												"scope": 1439,
												"src": "3348:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3348:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3307:64:6"
									},
									"scope": 1440,
									"src": "3252:319:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1441,
							"src": "250:3324:6"
						}
					],
					"src": "38:3537:6"
				},
				"id": 6
			},
			"contracts/IAlly.sol": {
				"ast": {
					"absolutePath": "contracts/IAlly.sol",
					"exportedSymbols": {
						"IAlly": [
							1451
						],
						"IERC20": [
							542
						]
					},
					"id": 1452,
					"license": "BUSL-1.1",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1442,
							"literals": [
								"solidity",
								"0.7",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "38:22:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1443,
							"nodeType": "ImportDirective",
							"scope": 1452,
							"sourceUnit": 543,
							"src": "62:56:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1444,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 542,
										"src": "139:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$542",
											"typeString": "contract IERC20"
										}
									},
									"id": 1445,
									"nodeType": "InheritanceSpecifier",
									"src": "139:6:7"
								}
							],
							"contractDependencies": [
								542
							],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1451,
							"linearizedBaseContracts": [
								1451,
								542
							],
							"name": "IAlly",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "42966c68",
									"id": 1450,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1447,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1450,
												"src": "166:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1446,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "166:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "165:16:7"
									},
									"returnParameters": {
										"id": 1449,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "190:0:7"
									},
									"scope": 1451,
									"src": "152:39:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1452,
							"src": "120:73:7"
						}
					],
					"src": "38:156:7"
				},
				"id": 7
			}
		}
	}
}